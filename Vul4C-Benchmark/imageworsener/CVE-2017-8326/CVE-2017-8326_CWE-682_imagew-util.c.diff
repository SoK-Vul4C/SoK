diff --git a/src/imagew-util.c b/src/imagew-util.c
index 72410c2..77f19a8 100644
--- a/src/imagew-util.c
+++ b/src/imagew-util.c
@@ -402,27 +402,30 @@ IW_IMPL(void) iw_set_ui32be(iw_byte *b, unsigned int n)
 
 IW_IMPL(unsigned int) iw_get_ui16le(const iw_byte *b)
 {
-	return b[0] | (b[1]<<8);
+	return (unsigned int)b[0] | ((unsigned int)b[1]<<8);
 }
 
 IW_IMPL(unsigned int) iw_get_ui32le(const iw_byte *b)
 {
-	return b[0] | (b[1]<<8) | (b[2]<<16) | (b[3]<<24);
+	return (unsigned int)b[0] | ((unsigned int)b[1]<<8) |
+		((unsigned int)b[2]<<16) | ((unsigned int)b[3]<<24);
 }
 
 IW_IMPL(int) iw_get_i32le(const iw_byte *b)
 {
-	return (iw_int32)(iw_uint32)(b[0] | (b[1]<<8) | (b[2]<<16) | (b[3]<<24));
+	return (iw_int32)(iw_uint32)((unsigned int)b[0] | ((unsigned int)b[1]<<8) |
+		((unsigned int)b[2]<<16) | ((unsigned int)b[3]<<24));
 }
 
 IW_IMPL(unsigned int) iw_get_ui16be(const iw_byte *b)
 {
-	return (b[0]<<8) | b[1];
+	return ((unsigned int)b[0]<<8) | (unsigned int)b[1];
 }
 
 IW_IMPL(unsigned int) iw_get_ui32be(const iw_byte *b)
 {
-	return (b[0]<<24) | (b[1]<<16) | (b[2]<<8) | b[3];
+	return ((unsigned int)b[0]<<24) | ((unsigned int)b[1]<<16) |
+		((unsigned int)b[2]<<8) | (unsigned int)b[3];
 }
 
 // Accepts a flag indicating the endianness.
