Affected version:
1.5.0-617

Source code:
git clone https://github.com/axiomatic-systems/Bento4.git

Commit hash:
41cad602709436628f07b4c4f64e9ff7a611f687

Command:
> cd /path/to/compile/source
> ./mp42aac $FILE out.aac

Expected Output:
==452309==WARNING: AddressSanitizer failed to allocate 0xffffffffff000006 bytes
==452309==AddressSanitizer's allocator is terminating the process instead of returning 0
==452309==If you don't like this behavior set allocator_may_return_null=1
==452309==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/sanitizer_common/sanitizer_allocator.cc:218 "((0)) != (0)" (0x0, 0x0)
    #0 0x7ffff6f01bf2  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe9bf2)
    #1 0x7ffff6f20575 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x108575)
    #2 0x7ffff6f07332  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xef332)
    #3 0x7ffff6e40ff8  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x28ff8)
    #4 0x7ffff6ef85ce in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe05ce)
    #5 0x555555796f66 in AP4_HdlrAtom::AP4_HdlrAtom(unsigned int, unsigned char, unsigned int, AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14642/source/Source/C++/Core/Ap4HdlrAtom.cpp:85
    #6 0x555555796aef in AP4_HdlrAtom::Create(unsigned int, AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14642/source/Source/C++/Core/Ap4HdlrAtom.cpp:51

