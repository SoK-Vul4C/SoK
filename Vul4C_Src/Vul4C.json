{
    "CVE-2016-10095":{
        "file_name":"libtiff/tif_dirinfo.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffsplit ../VUL4C/exploit"
        ],
        "nvd_info":"Stack-based buffer overflow in the _TIFFVGetField function in tif_dir.c in LibTIFF 4.0.0alpha4, 4.0.0alpha5, 4.0.0alpha6, 4.0.0beta7, 4.0.0, 4.0.1, 4.0.2, 4.0.3, 4.0.4, 4.0.4beta, 4.0.5, 4.0.6, 4.0.7 and 4.0.8 allows remote attackers to cause a denial of service (crash) via a crafted TIFF file.",
        "cve_id":"CVE-2016-10095",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400764==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffded0 at pc 0x55555557e571 bp 0x7fffffffdb90 sp 0x7fffffffdb80\nWRITE of size 4 at 0x7fffffffded0 thread T0\n    #0 0x55555557e570 in _TIFFVGetField /home/skd/benchmark-setup/libtiff/CVE-2016-10095/source/libtiff/tif_dir.c:1077\n    #1 0x55555558069f in TIFFVGetField /home/skd/benchmark-setup/libtiff/CVE-2016-10095/source/libtiff/tif_dir.c:1198\n    #2 0x55555558037f in TIFFGetField /home/skd/benchmark-setup/libtiff/CVE-2016-10095/source/libtiff/tif_dir.c:1182\n    #3 0x555555568718 in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2016-10095/source/tools/tiffsplit.c:183\n    #4 0x555555567b3e in main /home/skd/benchmark-setup/libtiff/CVE-2016-10095/source/tools/tiffsplit.c:89\n    #5 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555567739 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10095/source/tools/tiffsplit+0x167739)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2017-7602":{
        "file_name":"libtiff/tif_read.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 has a signed integer overflow, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted image.",
        "cve_id":"CVE-2017-7602",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"tif_read.c:426:5: runtime error: signed integer overflow: 9223372036452122640 + 85899345928 cannot be represented in type 'long int'",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2006-2025":{
        "file_name":"libtiff/tif_dirread.c",
        "get_command":[
            "wget https://github.com/mudongliang/source-packages/raw/master/CVE-2006-2025/tiff-3.8.0.tar.gz",
            "tar -xvf tiff-3.8.0.tar.gz",
            "mv tiff-3.8.0 source",
            "cd source"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffinfo ../VUL4C/exploit"
        ],
        "nvd_info":"Integer overflow in the TIFFFetchData function in tif_dirread.c for libtiff before 3.8.1 allows context-dependent attackers to cause a denial of service and possibly execute arbitrary code via a crafted TIFF image.",
        "cve_id":"CVE-2006-2025",
        "project":"libtiff",
        "hash":"e3df7b4c5049c9c0fabb3323cfb9b49a2bf3289c",
        "test_info":"=================================================================\n==167246==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_descriptions.cc:80 \"((0 && \"Address is not in memory and not in shadow?\")) != (0)\" (0x0, 0x0)\n    #0 0x7ffff6f01bf2  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe9bf2)\n    #1 0x7ffff6f20575 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x108575)\n    #2 0x7ffff6e45a3c  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x2da3c)\n    #3 0x7ffff6e46b02  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x2eb02)\n    #4 0x7ffff6e48d7f  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x30d7f)\n    #5 0x7ffff6f01324  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe9324)\n    #6 0x7ffff6e91751  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79751)\n    #7 0x5555556b12af in _TIFFmemcpy /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_unix.c:264\n    #8 0x5555556909d4 in TIFFFetchData /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_dirread.c:977\n    #9 0x555555693512 in TIFFFetchShortArray /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_dirread.c:1138\n    #10 0x555555695465 in TIFFFetchNormalTag /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_dirread.c:1353\n    #11 0x555555687d1c in TIFFReadDirectory /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_dirread.c:355\n    #12 0x55555569cb7b in TIFFClientOpen /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_open.c:433\n    #13 0x5555556b1077 in TIFFFdOpen /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_unix.c:139\n    #14 0x5555556b119b in TIFFOpen /exp/validate/libtiff/CVE-2006-2025/source/libtiff/tif_unix.c:178\n    #15 0x5555556620b3 in main /exp/validate/libtiff/CVE-2006-2025/source/tools/tiffinfo.c:123\n    #16 0x7ffff6225c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #17 0x5555556619a9 in _start (/exp/validate/libtiff/CVE-2006-2025/source/tools/tiffinfo+0x10d9a9)",
        "commit_message":"add source code for CVE-2006-2015"
    },
    "CVE-2017-7595":{
        "file_name":"libtiff/tif_jpeg.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source/",
            "git checkout 2c00d31"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10",
            "cp tools/tiffcp ../"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"The JPEGSetupEncode function in tiff_jpeg.c in LibTIFF 4.0.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted image.",
        "cve_id":"CVE-2017-7595",
        "project":"libtiff",
        "hash":"2c00d31b6cd5282d172754958b8b87c362f852ee",
        "test_info":"tif_jpeg.c:1687:26: runtime error: division by zero\nASAN:DEADLYSIGNAL\n=================================================================\n==400779==ERROR: AddressSanitizer: FPE on unknown address 0x5555556342a0 (pc 0x5555556342a0 bp 0x7fffffffda60 sp 0x7fffffffd960 T0)\n    #0 0x55555563429f in JPEGSetupEncode /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/libtiff/tif_jpeg.c:1687\n    #1 0x5555555ff66e in TIFFWriteEncodedTile /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/libtiff/tif_write.c:446\n    #2 0x5555555fe827 in TIFFWriteTile /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/libtiff/tif_write.c:364\n    #3 0x555555574e6e in writeBufferToContigTiles /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/tools/tiffcp.c:1549\n    #4 0x55555557332d in cpImage /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/tools/tiffcp.c:1235\n    #5 0x5555555759be in cpContigTiles2ContigTiles /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/tools/tiffcp.c:1694\n    #6 0x555555571665 in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/tools/tiffcp.c:814\n    #7 0x55555556e3eb in main /home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/tools/tiffcp.c:303\n    #8 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #9 0x55555556ca69 in _start (/home/skd/benchmark-setup/libtiff/CVE-2017-7595/source/tools/tiffcp+0x16ca69)",
        "commit_message":"* libtiff/tif_jpeg.c: increase libjpeg max memory usable to\n10 MB instead of libjpeg 1MB default. This helps when creating files\nwith \"big\" tile, without using libjpeg temporary files.\nRelated to https://trac.osgeo.org/gdal/ticket/6757"
    },
    "CVE-2016-10268":{
        "file_name":"tools/tiffcp.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"tools/tiffcp.c in LibTIFF 4.0.7 allows remote attackers to cause a denial of service (integer underflow and heap-based buffer under-read) or possibly have unspecified other impact via a crafted TIFF image, related to \"READ of size 78490\" and libtiff/tif_unix.c:115:23.",
        "cve_id":"CVE-2016-10268",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400769==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x625000002061 at pc 0x7ffff6e6493e bp 0x7fffffffdac0 sp 0x7fffffffd268\nREAD of size 62106 at 0x625000002061 thread T0\n    #0 0x7ffff6e6493d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x4c93d)\n    #1 0x55555560474d in _tiffWriteProc /home/skd/benchmark-setup/libtiff/CVE-2016-10268/source/libtiff/tif_unix.c:115\n    #2 0x55555560387b in TIFFAppendToStrip /home/skd/benchmark-setup/libtiff/CVE-2016-10268/source/libtiff/tif_write.c:771\n    #3 0x5555555fdf78 in TIFFWriteEncodedStrip /home/skd/benchmark-setup/libtiff/CVE-2016-10268/source/libtiff/tif_write.c:273\n    #4 0x555555573bbe in cpDecodedStrips /home/skd/benchmark-setup/libtiff/CVE-2016-10268/source/tools/tiffcp.c:998\n    #5 0x555555572c05 in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2016-10268/source/tools/tiffcp.c:815\n    #6 0x55555556f98b in main /home/skd/benchmark-setup/libtiff/CVE-2016-10268/source/tools/tiffcp.c:304\n    #7 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #8 0x55555556e009 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10268/source/tools/tiffcp+0x16e009)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2017-5225":{
        "file_name":"tools/tiffcp.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -p separate ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF version 4.0.7 is vulnerable to a heap buffer overflow in the tools/tiffcp resulting in DoS or code execution via a crafted BitsPerSample value.",
        "cve_id":"CVE-2017-5225",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400778==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000140 at pc 0x555555573f35 bp 0x7fffffffdc30 sp 0x7fffffffdc20\nREAD of size 1 at 0x602000000140 thread T0\n    #0 0x555555573f34 in cpContig2SeparateByRow /home/skd/benchmark-setup/libtiff/CVE-2017-5225/source/tools/tiffcp.c:1091\n    #1 0x555555572c05 in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2017-5225/source/tools/tiffcp.c:815\n    #2 0x55555556f98b in main /home/skd/benchmark-setup/libtiff/CVE-2017-5225/source/tools/tiffcp.c:304\n    #3 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #4 0x55555556e009 in _start (/home/skd/benchmark-setup/libtiff/CVE-2017-5225/source/tools/tiffcp+0x16e009)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2016-10267":{
        "file_name":"libtiff/tif_ojpeg.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffmedian ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image, related to libtiff/tif_ojpeg.c:816:8.",
        "cve_id":"CVE-2016-10267",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"tif_ojpeg.c:816:8: runtime error: division by zero\nASAN:DEADLYSIGNAL\n=================================================================\n==400766==ERROR: AddressSanitizer: FPE on unknown address 0x5555556702e0 (pc 0x5555556702e0 bp 0x7fffffffdfa0 sp 0x7fffffffdf20 T0)\n    #0 0x5555556702df in OJPEGDecodeRaw /home/skd/benchmark-setup/libtiff/CVE-2016-10267/source/libtiff/tif_ojpeg.c:816\n    #1 0x555555670190 in OJPEGDecode /home/skd/benchmark-setup/libtiff/CVE-2016-10267/source/libtiff/tif_ojpeg.c:791\n    #2 0x5555555db639 in TIFFReadScanline /home/skd/benchmark-setup/libtiff/CVE-2016-10267/source/libtiff/tif_read.c:304\n    #3 0x555555582220 in quant /home/skd/benchmark-setup/libtiff/CVE-2016-10267/source/tools/tiffmedian.c:771\n    #4 0x555555579dd4 in main /home/skd/benchmark-setup/libtiff/CVE-2016-10267/source/tools/tiffmedian.c:283\n    #5 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555578009 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10267/source/tools/tiffmedian+0x178009)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2016-10093":{
        "file_name":"tools/tiffcp.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"Integer overflow in tools/tiffcp.c in LibTIFF 4.0.7, 3.9.3, 3.9.4, 3.9.5, 3.9.6, 3.9.7, 4.0.0alpha4, 4.0.0alpha5, 4.0.0alpha6, 4.0.0beta7, 4.0.0, 4.0.1, 4.0.2, 4.0.3, 4.0.4, 4.0.4beta, 4.0.5 and 4.0.6 allows remote attackers to have unspecified impact via a crafted image, which triggers a heap-based buffer overflow.",
        "cve_id":"CVE-2016-10093",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400761==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7fffed5e7801 at pc 0x555555574400 bp 0x7fffffffda90 sp 0x7fffffffda80\nWRITE of size 1 at 0x7fffed5e7801 thread T0\n    #0 0x5555555743ff in cpStripToTile /home/skd/benchmark-setup/libtiff/CVE-2016-10093/source/tools/tiffcp.c:1171\n    #1 0x555555574fef in readContigTilesIntoBuffer /home/skd/benchmark-setup/libtiff/CVE-2016-10093/source/tools/tiffcp.c:1358\n    #2 0x5555555748a9 in cpImage /home/skd/benchmark-setup/libtiff/CVE-2016-10093/source/tools/tiffcp.c:1234\n    #3 0x555555576db4 in cpContigTiles2ContigTiles /home/skd/benchmark-setup/libtiff/CVE-2016-10093/source/tools/tiffcp.c:1673\n    #4 0x555555572c05 in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2016-10093/source/tools/tiffcp.c:815\n    #5 0x55555556f98b in main /home/skd/benchmark-setup/libtiff/CVE-2016-10093/source/tools/tiffcp.c:304\n    #6 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x55555556e009 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10093/source/tools/tiffcp+0x16e009)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2016-10272":{
        "file_name":"tools/tiffcrop.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcrop -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via a crafted TIFF image, related to \"WRITE of size 2048\" and libtiff/tif_next.c:64:9.",
        "cve_id":"CVE-2016-10272",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400777==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62d0000003fc at pc 0x5555556ce752 bp 0x7fffffff7d80 sp 0x7fffffff7d70\nWRITE of size 1 at 0x62d0000003fc thread T0\n    #0 0x5555556ce751 in NeXTDecode /home/skd/benchmark-setup/libtiff/CVE-2016-10272/source/libtiff/tif_next.c:64\n    #1 0x55555565ea1b in TIFFReadEncodedStrip /home/skd/benchmark-setup/libtiff/CVE-2016-10272/source/libtiff/tif_read.c:380\n    #2 0x5555555bf681 in readContigStripsIntoBuffer /home/skd/benchmark-setup/libtiff/CVE-2016-10272/source/tools/tiffcrop.c:3689\n    #3 0x5555555d7d0e in loadImage /home/skd/benchmark-setup/libtiff/CVE-2016-10272/source/tools/tiffcrop.c:6167\n    #4 0x5555555b7880 in main /home/skd/benchmark-setup/libtiff/CVE-2016-10272/source/tools/tiffcrop.c:2345\n    #5 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x5555555ac159 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10272/source/tools/tiffcrop+0x1ac159)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2016-10269":{
        "file_name":"libtiff/tif_luv.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.0alpha4, 4.0.0alpha5, 4.0.0alpha6, 4.0.0beta7, 4.0.0, 4.0.1, 4.0.2, 4.0.3, 4.0.4, 4.0.4beta, 4.0.5, 4.0.6 and 4.0.7 allows remote attackers to cause a denial of service (heap-based buffer over-read) or possibly have unspecified other impact via a crafted TIFF image, related to \"READ of size 512\" and libtiff/tif_unix.c:340:2.",
        "cve_id":"CVE-2016-10269",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400770==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000114 at pc 0x7ffff6e91733 bp 0x7fffffffd980 sp 0x7fffffffd128\nREAD of size 512 at 0x602000000114 thread T0\n    #0 0x7ffff6e91732  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79732)\n    #1 0x55555560539d in _TIFFmemcpy /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_unix.c:340\n    #2 0x5555555d9ac1 in TIFFWriteDirectoryTagTransferfunction /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_dirwrite.c:1842\n    #3 0x5555555d1e88 in TIFFWriteDirectorySec /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_dirwrite.c:629\n    #4 0x5555555cc8e6 in TIFFWriteDirectory /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_dirwrite.c:183\n    #5 0x5555555ccc07 in TIFFRewriteDirectory /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_dirwrite.c:223\n    #6 0x5555555e5413 in TIFFFlush /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_flush.c:83\n    #7 0x55555557d1e1 in TIFFCleanup /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_close.c:53\n    #8 0x55555557de58 in TIFFClose /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/libtiff/tif_close.c:128\n    #9 0x55555556f9c0 in main /home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/tools/tiffcp.c:306\n    #10 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x55555556e009 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10269/source/tools/tiffcp+0x16e009)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2017-7601":{
        "file_name":"libtiff/tif_jpeg.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source/",
            "git checkout 3144e57"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10",
            "cp tools/tiffcp ../"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 has a \"shift exponent too large for 64-bit type long\" undefined behavior issue, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted image.",
        "cve_id":"CVE-2017-7601",
        "project":"libtiff",
        "hash":"3144e57770c1e4d26520d8abee750f8ac8b75490",
        "test_info":"tif_jpeg.c:1646:19: runtime error: shift exponent 136 is too large for 64-bit type 'long int'",
        "commit_message":"* libtiff/tif_dir.c, tif_dirread.c, tif_dirwrite.c: implement various clampings\nof double to other data types to avoid undefined behaviour if the output range\nisn't big enough to hold the input value.\nFixes http://bugzilla.maptools.org/show_bug.cgi?id=2643\nhttp://bugzilla.maptools.org/show_bug.cgi?id=2642\nhttp://bugzilla.maptools.org/show_bug.cgi?id=2646\nhttp://bugzilla.maptools.org/show_bug.cgi?id=2647"
    },
    "CVE-2017-7600":{
        "file_name":"libtiff/tif_dirread.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source/",
            "git checkout 3cfd62d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-fsanitize=float-cast-overflow,address -static -ggdb\" CXXFLAGS=\"-fsanitize=float-cast-overflow,address -static -ggdb\" LDFLAGS=\"-fsanitize=float-cast-overflow,address\" -j10",
            "cp tools/tiffcp ../"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 has an \"outside the range of representable values of type unsigned char\" undefined behavior issue, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted image.",
        "cve_id":"CVE-2017-7600",
        "project":"libtiff",
        "hash":"3cfd62d77c2a7e147a05bd678524c345fa9c2bb8",
        "test_info":"tif_dirwrite.c:994:38: runtime error: value -115 is outside the range of representable values of type 'unsigned char'",
        "commit_message":"* libtiff/tif_dirread.c: avoid division by floating point 0 in\nTIFFReadDirEntryCheckedRational() and TIFFReadDirEntryCheckedSrational(),\nand return 0 in that case (instead of infinity as before presumably)\nApparently some sanitizers do not like those divisions by zero.\nFixes http://bugzilla.maptools.org/show_bug.cgi?id=2644"
    },
    "CVE-2016-5321":{
        "file_name":"tools/tiffcrop.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source/",
            "git checkout 0ba5d8814a17a64bdb8d9035f4c533f3f3f4b496"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\" -j10",
            "cp tools/tiffcrop ../"
        ],
        "test_command":[
            "./tools/tiffcrop ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"The DumpModeDecode function in libtiff 4.0.6 and earlier allows attackers to cause a denial of service (invalid read and crash) via a crafted tiff image.",
        "cve_id":"CVE-2016-5321",
        "project":"libtiff",
        "hash":"0ba5d8814a17a64bdb8d9035f4c533f3f3f4b496",
        "test_info":"tiffcrop.c:994:36: runtime error: index 8 out of bounds for type 'unsigned char *[8]'\ntiffcrop.c:994:36: runtime error: load of address 0x7fffffff7f10 with insufficient space for an object of type 'unsigned char *'\n0x7fffffff7f10: note: pointer points here\n 60 60 00 00  60 7f ff ff ff 7f 00 00  3f 82 66 55 55 55 00 00  02 00 00 00 00 00 00 00  80 00 00 00\n              ^\n=================================================================\n==400754==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffff7f10 at pc 0x5555555aaa77 bp 0x7fffffff7e10 sp 0x7fffffff7e00\nREAD of size 8 at 0x7fffffff7f10 thread T0\n    #0 0x5555555aaa76 in readSeparateTilesIntoBuffer /home/skd/benchmark-setup/libtiff/CVE-2016-5321/source/tools/tiffcrop.c:994\n    #1 0x5555555d502e in loadImage /home/skd/benchmark-setup/libtiff/CVE-2016-5321/source/tools/tiffcrop.c:6079\n    #2 0x5555555b4b18 in main /home/skd/benchmark-setup/libtiff/CVE-2016-5321/source/tools/tiffcrop.c:2278\n    #3 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #4 0x5555555a9ba9 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-5321/source/tools/tiffcrop+0x1a9ba9)",
        "commit_message":"* libtiff/tif_read.c: Fix out-of-bounds read on\nmemory-mapped files in TIFFReadRawStrip1() and TIFFReadRawTile1()\nwhen stripoffset is beyond tmsize_t max value (reported by\nMathias Svensson)"
    },
    "CVE-2016-10271":{
        "file_name":"tools/tiffcrop.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcrop -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"tools/tiffcrop.c in LibTIFF 4.0.7 allows remote attackers to cause a denial of service (heap-based buffer over-read and buffer overflow) or possibly have unspecified other impact via a crafted TIFF image, related to \"READ of size 1\" and libtiff/tif_fax3.c:413:13.",
        "cve_id":"CVE-2016-10271",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400776==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7ffff16307f8 at pc 0x555555686270 bp 0x7fffffff7cf0 sp 0x7fffffff7ce0\nREAD of size 1 at 0x7ffff16307f8 thread T0\n    #0 0x55555568626f in _TIFFFax3fillruns /home/skd/benchmark-setup/libtiff/CVE-2016-10271/source/libtiff/tif_fax3.c:413\n    #1 0x55555567da81 in Fax3Decode1D /home/skd/benchmark-setup/libtiff/CVE-2016-10271/source/libtiff/tif_fax3.c:249\n    #2 0x55555565ea1b in TIFFReadEncodedStrip /home/skd/benchmark-setup/libtiff/CVE-2016-10271/source/libtiff/tif_read.c:380\n    #3 0x5555555bf681 in readContigStripsIntoBuffer /home/skd/benchmark-setup/libtiff/CVE-2016-10271/source/tools/tiffcrop.c:3689\n    #4 0x5555555d7d0e in loadImage /home/skd/benchmark-setup/libtiff/CVE-2016-10271/source/tools/tiffcrop.c:6167\n    #5 0x5555555b7880 in main /home/skd/benchmark-setup/libtiff/CVE-2016-10271/source/tools/tiffcrop.c:2345\n    #6 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x5555555ac159 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10271/source/tools/tiffcrop+0x1ac159)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2016-10270":{
        "file_name":"libtiff/tif_strip.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (heap-based buffer over-read) or possibly have unspecified other impact via a crafted TIFF image, related to \"READ of size 8\" and libtiff/tif_read.c:523:22.",
        "cve_id":"CVE-2016-10270",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400775==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000238 at pc 0x5555555ed7d6 bp 0x7fffffffdad0 sp 0x7fffffffdac0\nREAD of size 8 at 0x602000000238 thread T0\n    #0 0x5555555ed7d5 in TIFFFillStrip /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/libtiff/tif_read.c:523\n    #1 0x5555555eb755 in TIFFSeek /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/libtiff/tif_read.c:233\n    #2 0x5555555ebd1f in TIFFReadScanline /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/libtiff/tif_read.c:300\n    #3 0x55555557497c in readContigStripsIntoBuffer /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/tools/tiffcp.c:1259\n    #4 0x5555555748a9 in cpImage /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/tools/tiffcp.c:1234\n    #5 0x555555576c5c in cpContigStrips2ContigTiles /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/tools/tiffcp.c:1629\n    #6 0x555555572c05 in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/tools/tiffcp.c:815\n    #7 0x55555556f98b in main /home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/tools/tiffcp.c:304\n    #8 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #9 0x55555556e009 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10270/source/tools/tiffcp+0x16e009)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2010-2481":{
        "file_name":"libtiff/tif_dirread.c",
        "get_command":[
            "wget https://github.com/mudongliang/source-packages/raw/master/CVE-2010-2481/tiff-3.9.2.tar.gz",
            "tar -xvf tiff-3.9.2.tar.gz",
            "mv tiff-3.9.2 source",
            "cd source"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffinfo ../VUL4C/exploit"
        ],
        "nvd_info":"The TIFFExtractData macro in LibTIFF before 3.9.4 does not properly handle unknown tag types in TIFF directory entries, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted TIFF file.",
        "cve_id":"CVE-2010-2481",
        "project":"libtiff",
        "hash":"e37dc43474886419f8ea8fea8c880499e60752f5",
        "test_info":"=================================================================\n==173557==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000001 (pc 0x7ffff6184461 bp 0x7fffffffdb00 sp 0x7fffffffd278 T0)\n==173557==The signal is caused by a READ memory access.\n==173557==Hint: address points to the zero page.\n    #0 0x7ffff6184460  (/lib/x86_64-linux-gnu/libc.so.6+0x18e460)\n    #1 0x7ffff6e6957b  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5157b)\n    #2 0x5555556a2251 in _TIFFsetString /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_dir.c:59\n    #3 0x55555573a301 in JPEGVSetField /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_jpeg.c:1671\n    #4 0x5555556ac3b6 in TIFFVSetField /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_dir.c:666\n    #5 0x5555556ac2ca in TIFFSetField /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_dir.c:651\n    #6 0x5555556cf585 in TIFFFetchNormalTag /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_dirread.c:1651\n    #7 0x5555556c0e5b in TIFFReadDirectory /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_dirread.c:500\n    #8 0x5555556d5649 in TIFFClientOpen /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_open.c:436\n    #9 0x5555556ebcd3 in TIFFFdOpen /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_unix.c:139\n    #10 0x5555556ebdf7 in TIFFOpen /exp/validate/libtiff/CVE-2010-2481/source/libtiff/tif_unix.c:178\n    #11 0x55555569a293 in main /exp/validate/libtiff/CVE-2010-2481/source/tools/tiffinfo.c:123\n    #12 0x7ffff6017c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x555555699b89 in _start (/exp/validate/libtiff/CVE-2010-2481/source/tools/tiffinfo+0x145b89)",
        "commit_message":"replace source code of CVE-2010-2481 with tiff 3.9.2"
    },
    "CVE-2016-9532":{
        "file_name":"tools/tiffcrop.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source/",
            "git checkout d651abc"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" -j10",
            "cp tools/tiffcrop ../"
        ],
        "test_command":[
            "./tools/tiffcrop ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"Integer overflow in the writeBufferToSeparateStrips function in tiffcrop.c in LibTIFF before 4.0.7 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted tif file.",
        "cve_id":"CVE-2016-9532",
        "project":"libtiff",
        "hash":"d651abc097d91fac57f33b5f9447d0a9183f58e7",
        "test_info":"=================================================================\n==1006269==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000151 at pc 0x555555431537 bp 0x7fffffff7f40 sp 0x7fffffff7f30\nWRITE of size 1 at 0x602000000151 thread T0\n    #0 0x555555431536 in extractContigSamples24bits /home/yuntong/vulnfix/data/libtiff/cve_2016_9532/source/tools/tiffcrop.c:2978\n    #1 0x555555433484 in extractContigSamplesToBuffer /home/yuntong/vulnfix/data/libtiff/cve_2016_9532/source/tools/tiffcrop.c:3539\n    #2 0x555555427503 in writeBufferToSeparateStrips /home/yuntong/vulnfix/data/libtiff/cve_2016_9532/source/tools/tiffcrop.c:1184\n    #3 0x55555544da1f in writeCroppedImage /home/yuntong/vulnfix/data/libtiff/cve_2016_9532/source/tools/tiffcrop.c:7944\n    #4 0x55555542ec88 in main /home/yuntong/vulnfix/data/libtiff/cve_2016_9532/source/tools/tiffcrop.c:2356\n    #5 0x7ffff6225c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555425ae9 in _start (/home/yuntong/vulnfix/data/libtiff/cve_2016_9532/source/tools/tiffcrop+0x25ae9)",
        "commit_message":"* libtiff/tif_strip.c: make TIFFNumberOfStrips() return the td->td_nstrips\nvalue when it is non-zero, instead of recomputing it. This is needed in\nTIFF_STRIPCHOP mode where td_nstrips is modified. Fixes a read outsize of\narray in tiffsplit (or other utilities using TIFFNumberOfStrips()).\nFixes http://bugzilla.maptools.org/show_bug.cgi?id=2587"
    },
    "CVE-2016-10094":{
        "file_name":"tools/tiff2pdf.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source/",
            "git checkout b28076b"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10",
            "cp tools/tiff2pdf ../"
        ],
        "test_command":[
            "./tools/tiff2pdf ../VUL4C/exploit -o foo"
        ],
        "nvd_info":"Off-by-one error in the t2p_readwrite_pdf_image_tile function in tools/tiff2pdf.c in LibTIFF 4.0.7 allows remote attackers to have unspecified impact via a crafted image.",
        "cve_id":"CVE-2016-10094",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400763==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000005f1 at pc 0x7ffff6e9177a bp 0x7fffffffdf00 sp 0x7fffffffd6a8\nWRITE of size 2 at 0x6020000005f1 thread T0\n    #0 0x7ffff6e91779  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79779)\n    #1 0x555555794c3c in _TIFFmemcpy /home/skd/benchmark-setup/libtiff/CVE-2016-10094/source/libtiff/tif_unix.c:340\n    #2 0x555555609821 in t2p_readwrite_pdf_image_tile /home/skd/benchmark-setup/libtiff/CVE-2016-10094/source/tools/tiff2pdf.c:2900\n    #3 0x55555563351c in t2p_write_pdf /home/skd/benchmark-setup/libtiff/CVE-2016-10094/source/tools/tiff2pdf.c:5526\n    #4 0x5555555f14ab in main /home/skd/benchmark-setup/libtiff/CVE-2016-10094/source/tools/tiff2pdf.c:808\n    #5 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x5555555ef1f9 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10094/source/tools/tiff2pdf+0x1ef1f9)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2013-4243":{
        "file_name":"tools/gif2tiff.c",
        "get_command":[
            "wget https://github.com/mudongliang/source-packages/raw/master/CVE-2013-4243/tiff-4.0.1.tar.gz",
            "tar -xvf tiff-4.0.1.tar.gz",
            "mv tiff-4.0.1 source",
            "cd source"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/gif2tiff ../VUL4C/exploit poc.tif"
        ],
        "nvd_info":"Heap-based buffer overflow in the readgifimage function in the gif2tiff tool in libtiff 4.0.3 and earlier allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a crafted height and width values in a GIF image.",
        "cve_id":"CVE-2013-4243",
        "project":"libtiff",
        "hash":"aba5f45c8a355e31c7ef6b2b46e794e36edaf098",
        "test_info":"=================================================================\n==180141==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60c0000000c0 at pc 0x5555556bc051 bp 0x7fffffffdc10 sp 0x7fffffffdc00\nWRITE of size 1 at 0x60c0000000c0 thread T0\n    #0 0x5555556bc050 in process /exp/validate/libtiff/CVE-2013-4243/source/tools/gif2tiff.c:431\n    #1 0x5555556bb2b0 in readraster /exp/validate/libtiff/CVE-2013-4243/source/tools/gif2tiff.c:359\n    #2 0x5555556ba952 in readgifimage /exp/validate/libtiff/CVE-2013-4243/source/tools/gif2tiff.c:297\n    #3 0x5555556b9ec7 in convert /exp/validate/libtiff/CVE-2013-4243/source/tools/gif2tiff.c:213\n    #4 0x5555556b9ca3 in main /exp/validate/libtiff/CVE-2013-4243/source/tools/gif2tiff.c:174\n    #5 0x7ffff5df1c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x5555556b9369 in _start (/exp/validate/libtiff/CVE-2013-4243/source/tools/gif2tiff+0x165369)",
        "commit_message":"add source code for CVE in 2011 - 2013"
    },
    "CVE-2016-9273":{
        "file_name":"libtiff/tif_strip.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout 8a37c8e"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffsplit ../VUL4C/exploit"
        ],
        "nvd_info":"tiffsplit in libtiff 4.0.6 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted file, related to changing td_nstrips in TIFF_STRIPCHOP mode.",
        "cve_id":"CVE-2016-9273",
        "project":"libtiff",
        "hash":"8a37c8e244de3457283b54986d09a8db4d24381c",
        "test_info":"=================================================================\n==400757==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000098 at pc 0x5555555661e0 bp 0x7fffffffdd10 sp 0x7fffffffdd00\nREAD of size 8 at 0x602000000098 thread T0\n    #0 0x5555555661df in cpStrips /home/skd/benchmark-setup/libtiff/CVE-2016-9273/source/tools/tiffsplit.c:246\n    #1 0x555555565ecf in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2016-9273/source/tools/tiffsplit.c:227\n    #2 0x5555555640ce in main /home/skd/benchmark-setup/libtiff/CVE-2016-9273/source/tools/tiffsplit.c:89\n    #3 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #4 0x555555563cc9 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-9273/source/tools/tiffsplit+0x163cc9)",
        "commit_message":"Fix failure to update libtiff version in AC_INIT."
    },
    "CVE-2016-10092":{
        "file_name":"tools/tiffcrop.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcrop -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"Heap-based buffer overflow in the readContigStripsIntoBuffer function in tif_unix.c in LibTIFF 4.0.7, 3.9.3, 3.9.4, 3.9.5, 3.9.6, 3.9.7, 4.0.0alpha4, 4.0.0alpha5, 4.0.0alpha6, 4.0.0beta7, 4.0.0, 4.0.1, 4.0.2, 4.0.3, 4.0.4, 4.0.4beta, 4.0.5 and 4.0.6 allows remote attackers to have unspecified impact via a crafted image.",
        "cve_id":"CVE-2016-10092",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"=================================================================\n==400760==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6210000000ff at pc 0x7ffff6e9177a bp 0x7fffffff7d90 sp 0x7fffffff7538\nWRITE of size 1 at 0x6210000000ff thread T0\n    #0 0x7ffff6e91779  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79779)\n    #1 0x5555556776d7 in _TIFFmemcpy /home/skd/benchmark-setup/libtiff/CVE-2016-10092/source/libtiff/tif_unix.c:340\n    #2 0x55555567a31f in DumpModeDecode /home/skd/benchmark-setup/libtiff/CVE-2016-10092/source/libtiff/tif_dumpmode.c:103\n    #3 0x55555565ea1b in TIFFReadEncodedStrip /home/skd/benchmark-setup/libtiff/CVE-2016-10092/source/libtiff/tif_read.c:380\n    #4 0x5555555bf681 in readContigStripsIntoBuffer /home/skd/benchmark-setup/libtiff/CVE-2016-10092/source/tools/tiffcrop.c:3689\n    #5 0x5555555d7d0e in loadImage /home/skd/benchmark-setup/libtiff/CVE-2016-10092/source/tools/tiffcrop.c:6167\n    #6 0x5555555b7880 in main /home/skd/benchmark-setup/libtiff/CVE-2016-10092/source/tools/tiffcrop.c:2345\n    #7 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #8 0x5555555ac159 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10092/source/tools/tiffcrop+0x1ac159)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2017-7599":{
        "file_name":"libtiff/tif_dirwrite.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source/",
            "git checkout 3cfd62d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-fsanitize=float-cast-overflow,address -static -ggdb\" CXXFLAGS=\"-fsanitize=float-cast-overflow,address -static -ggdb\" LDFLAGS=\"-fsanitize=float-cast-overflow,address\" -j10",
            "cp tools/tiffcp ../"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 has an \"outside the range of representable values of type short\" undefined behavior issue, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted image.",
        "cve_id":"CVE-2017-7599",
        "project":"libtiff",
        "hash":"3cfd62d77c2a7e147a05bd678524c345fa9c2bb8",
        "test_info":"tif_dirwrite.c:980:38: runtime error: value 65280 is outside the range of representable values of type 'short int'\ntif_dirwrite.c:2110:2: runtime error: value -nan is outside the range of representable values of type 'unsigned int'\ntif_dirwrite.c:2123:27: runtime error: value -nan is outside the range of representable values of type 'unsigned int'",
        "commit_message":"* libtiff/tif_dirread.c: avoid division by floating point 0 in\nTIFFReadDirEntryCheckedRational() and TIFFReadDirEntryCheckedSrational(),\nand return 0 in that case (instead of infinity as before presumably)\nApparently some sanitizers do not like those divisions by zero.\nFixes http://bugzilla.maptools.org/show_bug.cgi?id=2644"
    },
    "CVE-2016-10266":{
        "file_name":"libtiff/tif_read.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image, related to libtiff/tif_read.c:351:22.",
        "cve_id":"CVE-2016-10266",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"tif_read.c:350:21: runtime error: division by zero\nASAN:DEADLYSIGNAL\n=================================================================\n==400765==ERROR: AddressSanitizer: FPE on unknown address 0x5555555ec281 (pc 0x5555555ec281 bp 0x7fffffffdc60 sp 0x7fffffffdc00 T0)\n    #0 0x5555555ec280 in TIFFReadEncodedStrip /home/skd/benchmark-setup/libtiff/CVE-2016-10266/source/libtiff/tif_read.c:350\n    #1 0x555555573b6d in cpDecodedStrips /home/skd/benchmark-setup/libtiff/CVE-2016-10266/source/tools/tiffcp.c:991\n    #2 0x555555572c05 in tiffcp /home/skd/benchmark-setup/libtiff/CVE-2016-10266/source/tools/tiffcp.c:815\n    #3 0x55555556f98b in main /home/skd/benchmark-setup/libtiff/CVE-2016-10266/source/tools/tiffcp.c:304\n    #4 0x7ffff50d0c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #5 0x55555556e009 in _start (/home/skd/benchmark-setup/libtiff/CVE-2016-10266/source/tools/tiffcp+0x16e009)",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2017-7598":{
        "file_name":"libtiff/tif_dirread.c",
        "get_command":[
            "git clone https://github.com/vadz/libtiff.git source",
            "cd source",
            "git checkout b28076b056eba9d665881bab139d21b21137fd2d"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-fsanitize=float-divide-by-zero -static -ggdb\" CXXFLAGS=\"-fsanitize=float-divide-by-zero -static -ggdb\" LDFLAGS=\"-fsanitize=float-divide-by-zero\" -j10"
        ],
        "test_command":[
            "./tools/tiffcp -i ../VUL4C/exploit /tmp/foo"
        ],
        "nvd_info":"tif_dirread.c in LibTIFF 4.0.7 might allow remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted image.",
        "cve_id":"CVE-2017-7598",
        "project":"libtiff",
        "hash":"b28076b056eba9d665881bab139d21b21137fd2d",
        "test_info":"tif_dirread.c:2878:24: runtime error: division by zero",
        "commit_message":"* libtiff 4.0.7 released.\n\n* configure.ac: Update for 4.0.7 release."
    },
    "CVE-2017-7961":{
        "file_name":"src/cr-tknzr.c",
        "get_command":[
            "git clone https://gitlab.gnome.org/Archive/libcroco.git source",
            "cd source",
            "git checkout 0d0162098ac6630113da9e66620ab29459352dd6"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./csslint/csslint-0.6 ../VUL4C/exploit"
        ],
        "nvd_info":"The cr_tknzr_parse_rgb function in cr-tknzr.c in libcroco 0.6.11 and 0.6.12 has an \"outside the range of representable values of type long\" undefined behavior issue, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted CSS file. NOTE: third-party analysis reports \"This is not a security issue in my view. The conversion surely is truncating the double into a long value, but there is no impact as the value is one of the RGB components.",
        "cve_id":"CVE-2017-7961",
        "project":"libcroco",
        "hash":"0d0162098ac6630113da9e66620ab29459352dd6",
        "test_info":"=================================================================\n==407943==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000090 at pc 0x5555554624a3 bp 0x7fffffffc8e0 sp 0x7fffffffc8d0\nREAD of size 1 at 0x603000000090 thread T0\n    #0 0x5555554624a2 in cr_input_read_byte /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-input.c:416\n    #1 0x555555470d9d in cr_tknzr_parse_rgb /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-tknzr.c:1295\n    #2 0x555555476773 in cr_tknzr_get_next_token /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-tknzr.c:2127\n    #3 0x555555435409 in cr_parser_parse_any_core /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-parser.c:1225\n    #4 0x5555554336ee in cr_parser_parse_selector_core /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-parser.c:937\n    #5 0x555555432ca2 in cr_parser_parse_ruleset_core /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-parser.c:843\n    #6 0x55555543e7d9 in cr_parser_parse_stylesheet /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-parser.c:2585\n    #7 0x555555449cb2 in cr_parser_parse /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-parser.c:4381\n    #8 0x555555440064 in cr_parser_parse_file /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-parser.c:2993\n    #9 0x55555545352a in cr_om_parser_parse_file /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/src/cr-om-parser.c:956\n    #10 0x555555427d76 in cssom_parse /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/csslint/csslint.c:252\n    #11 0x55555542ac0f in main /home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/csslint/csslint.c:997\n    #12 0x7ffff6370c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x555555426ce9 in _start (/home/skd/benchmark-setup/libcroco/CVE-2017-7961/source/csslint/csslint-0.6+0x26ce9)",
        "commit_message":"Release 0.6.12"
    },
    "CVE-2017-5969":{
        "file_name":"valid.c",
        "get_command":[
            "git clone https://gitlab.gnome.org/GNOME/libxml2.git source",
            "cd source/",
            "git checkout 362b3229"
        ],
        "compile_command":[
            "./autogen.sh",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" LDFLAGS=\"-fsanitize=address\" -j10",
            "cp ./xmllint ../"
        ],
        "test_command":[
            "./xmllint --recover ../VUL4C/exploit"
        ],
        "nvd_info":"libxml2 2.9.4, when used in recover mode, allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted XML document.  NOTE: The maintainer states \"I would disagree of a CVE with the Recover parsing option which should only be used for manual recovery at least for XML parser.",
        "cve_id":"CVE-2017-5969",
        "project":"libxml2",
        "hash":"362b32293487ece0dc76b9df29c59e25c0712432",
        "test_info":"=================================================================\n==400739==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5555555787ae bp 0x7fffffffbf40 sp 0x7fffffffbf20 T0)\n==400739==The signal is caused by a READ memory access.\n==400739==Hint: address points to the zero page.\n    #0 0x5555555787ad in xmlDumpElementContent /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/valid.c:1181\n    #1 0x5555555786f9 in xmlDumpElementContent /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/valid.c:1177\n    #2 0x55555557b1ef in xmlDumpElementDecl /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/valid.c:1708\n    #3 0x5555557be780 in xmlBufDumpElementDecl /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmlsave.c:501\n    #4 0x5555557c0528 in xmlNodeDumpOutputInternal /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmlsave.c:939\n    #5 0x5555557bfcdb in xmlNodeListDumpOutput /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmlsave.c:825\n    #6 0x5555557bf75f in xmlDtdDumpOutput /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmlsave.c:749\n    #7 0x5555557c0428 in xmlNodeDumpOutputInternal /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmlsave.c:931\n    #8 0x5555557c24f2 in xmlDocContentDumpOutput /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmlsave.c:1234\n    #9 0x5555557c5a30 in xmlSaveDoc /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmlsave.c:1936\n    #10 0x5555554814e7 in parseAndPrintFile /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmllint.c:2712\n    #11 0x555555487cb7 in main /home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmllint.c:3767\n    #12 0x7ffff6267c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x5555554782f9 in _start (/home/skd/benchmark-setup/libxml2/CVE-2017-5969/source/xmllint+0x782f9)",
        "commit_message":"Fix memory leak in xmlBufAttrSerializeTxtContent"
    },
    "CVE-2012-5134":{
        "file_name":"parser.c",
        "get_command":[
            "git clone https://gitlab.gnome.org/GNOME/libxml2.git source",
            "cd source/",
            "git checkout 4ea74a44"
        ],
        "compile_command":[
            "./autogen.sh",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" LDFLAGS=\"-fsanitize=address\" -j10",
            "cp ./xmllint ../"
        ],
        "test_command":[
            "./xmllint ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer underflow in the xmlParseAttValueComplex function in parser.c in libxml2 2.9.0 and earlier, as used in Google Chrome before 23.0.1271.91 and other products, allows remote attackers to cause a denial of service or possibly execute arbitrary code via crafted entities in an XML document.",
        "cve_id":"CVE-2012-5134",
        "project":"libxml2",
        "hash":"4ea74a440d6f7ff0f6e2d25a780aee21f86762a8",
        "test_info":"=================================================================\n==400697==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b0000002ff at pc 0x5555554c20ee bp 0x7fffffffb970 sp 0x7fffffffb960\nREAD of size 1 at 0x60b0000002ff thread T0\n    #0 0x5555554c20ed in xmlParseAttValueComplex /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:4079\n    #1 0x5555554f2b42 in xmlParseAttValueInternal /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:9009\n    #2 0x5555554f2e29 in xmlParseAttribute2 /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:9065\n    #3 0x5555554f3e70 in xmlParseStartTag2 /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:9223\n    #4 0x5555554fbe5e in xmlParseElement /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:9910\n    #5 0x555555504f7a in xmlParseDocument /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:10666\n    #6 0x555555521241 in xmlDoRead /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:15066\n    #7 0x555555521443 in xmlReadFile /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/parser.c:15126\n    #8 0x55555547fa3f in parseAndPrintFile /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/xmllint.c:2381\n    #9 0x55555548750d in main /home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/xmllint.c:3733\n    #10 0x7ffff6267c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x555555477e59 in _start (/home/skd/benchmark-setup/libxml2/CVE-2012-5134/source/xmllint+0x77e59)",
        "commit_message":"Fix a portability issue for GCC < 3.4.0"
    },
    "CVE-2016-1838":{
        "file_name":"parser.c",
        "get_command":[
            "git clone https://gitlab.gnome.org/GNOME/libxml2.git source",
            "cd source/",
            "git checkout cbb27165"
        ],
        "compile_command":[
            "./autogen.sh",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" LDFLAGS=\"-fsanitize=address\" -j10",
            "cp ./xmllint ../"
        ],
        "test_command":[
            "./xmllint ../VUL4C/exploit"
        ],
        "nvd_info":"The xmlPArserPrintFileContextInternal function in libxml2 before 2.9.4, as used in Apple iOS before 9.3.2, OS X before 10.11.5, tvOS before 9.2.1, and watchOS before 2.2.1, allows remote attackers to cause a denial of service (heap-based buffer over-read) via a crafted XML document.",
        "cve_id":"CVE-2016-1838",
        "project":"libxml2",
        "hash":"cbb271655cadeb8dbb258a64701d9a3a0c4835b4",
        "test_info":"=================================================================\n==400732==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62900000a200 at pc 0x5555554fafde bp 0x7fffffffbe30 sp 0x7fffffffbe20\nREAD of size 1 at 0x62900000a200 thread T0\n    #0 0x5555554fafdd in xmlParseEndTag2 /home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/parser.c:9837\n    #1 0x555555500425 in xmlParseElement /home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/parser.c:10247\n    #2 0x55555550851e in xmlParseDocument /home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/parser.c:10921\n    #3 0x5555555251fd in xmlDoRead /home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/parser.c:15400\n    #4 0x555555525409 in xmlReadFile /home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/parser.c:15462\n    #5 0x555555480100 in parseAndPrintFile /home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/xmllint.c:2408\n    #6 0x555555487ce7 in main /home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/xmllint.c:3767\n    #7 0x7ffff6267c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #8 0x555555478329 in _start (/home/skd/benchmark-setup/libxml2/CVE-2016-1838/source/xmllint+0x78329)",
        "commit_message":"Bug 757711: heap-buffer-overflow in xmlFAParsePosCharGroup..."
    },
    "CVE-2016-1839":{
        "file_name":"runtest.c",
        "get_command":[
            "git clone https://gitlab.gnome.org/GNOME/libxml2.git source",
            "cd source/",
            "git checkout db07dd61"
        ],
        "compile_command":[
            "./autogen.sh",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10",
            "cp ./xmllint ../"
        ],
        "test_command":[
            "./xmllint -html ../VUL4C/exploit"
        ],
        "nvd_info":"The xmlDictAddString function in libxml2 before 2.9.4, as used in Apple iOS before 9.3.2, OS X before 10.11.5, tvOS before 9.2.1, and watchOS before 2.2.1, allows remote attackers to cause a denial of service (heap-based buffer over-read) via a crafted XML document.",
        "cve_id":"CVE-2016-1839",
        "project":"libxml2",
        "hash":"db07dd613e461df93dde7902c6505629bf0734e9",
        "test_info":"=================================================================\n==400738==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x631000024810 at pc 0x7ffff6e91733 bp 0x7fffffffbc30 sp 0x7fffffffb3d8\nREAD of size 73661 at 0x631000024810 thread T0\n    #0 0x7ffff6e91732  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79732)\n    #1 0x555556050a91 in xmlDictAddString /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/dict.c:285\n    #2 0x555556055f17 in xmlDictLookup /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/dict.c:926\n    #3 0x555555d2391a in htmlParseNameComplex /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:2517\n    #4 0x555555d228f3 in htmlParseName /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:2483\n    #5 0x555555d25a62 in htmlParseEntityRef /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:2682\n    #6 0x555555d3d00e in htmlParseReference /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:4044\n    #7 0x555555d46d19 in htmlParseContentInternal /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:4619\n    #8 0x555555d49495 in htmlParseDocument /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:4769\n    #9 0x555555d5b5bf in htmlDoRead /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:6741\n    #10 0x555555d5b891 in htmlReadFile /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/HTMLparser.c:6799\n    #11 0x555555b5a303 in parseAndPrintFile /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/xmllint.c:2255\n    #12 0x555555b66876 in main /home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/xmllint.c:3767\n    #13 0x7ffff5546c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #14 0x555555b503b9 in _start (/home/skd/benchmark-setup/libxml2/CVE-2016-1839/source/xmllint+0x7503b9)",
        "commit_message":"Bug 758588: Heap-based buffer overread in xmlParserPrintFileContextInternal..."
    },
    "CVE-2016-9275":{
        "file_name":"dwarfexample/simplereader.c",
        "get_command":[
            "git clone https://github.com/davea42/libdwarf-code.git source",
            "cd source",
            "git checkout 85438a1"
        ],
        "compile_command":[
            "./configure CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./dwarfdump/dwarfdump ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the _dwarf_skim_forms function in libdwarf/dwarf_macro5.c in Libdwarf before 20161124 allows remote attackers to cause a denial of service (out-of-bounds read).",
        "cve_id":"CVE-2016-9275",
        "project":"libdwarf",
        "hash":"85438a1b30ba3bea0380354a866b1c49414abcfa",
        "test_info":"=================================================================\n==407936==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x620000000e5b at pc 0x7ffff6e6966e bp 0x7fffffffc630 sp 0x7fffffffbdd8\nREAD of size 29 at 0x620000000e5b thread T0\n    #0 0x7ffff6e6966d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)\n    #1 0x555555527f93 in _dwarf_skim_forms /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/libdwarf/dwarf_macro5.c:185\n    #2 0x555555528f00 in _dwarf_get_macro_ops_count_internal /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/libdwarf/dwarf_macro5.c:346\n    #3 0x55555552fe30 in _dwarf_internal_macro_context_by_offset /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/libdwarf/dwarf_macro5.c:1338\n    #4 0x55555552eee3 in _dwarf_internal_macro_context /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/libdwarf/dwarf_macro5.c:1201\n    #5 0x555555530a3b in dwarf_get_macro_context_by_offset /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/libdwarf/dwarf_macro5.c:1467\n    #6 0x5555554a4237 in print_macros_5style_this_cu /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/dwarfdump/print_macro.c:288\n    #7 0x55555546f730 in print_one_die_section /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/dwarfdump/print_die.c:869\n    #8 0x55555546bf19 in print_infos /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/dwarfdump/print_die.c:371\n    #9 0x5555554581dc in process_one_file /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/dwarfdump/dwarfdump.c:1371\n    #10 0x555555455565 in main /home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/dwarfdump/dwarfdump.c:654\n    #11 0x7ffff6613c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #12 0x555555451ba9 in _start (/home/skd/benchmark-setup/libdwarf/CVE-2016-9275/source/dwarfdump/dwarfdump+0x51ba9)",
        "commit_message":"Update version strings.\ndwarfdump/common.c\ndwarfdump/dwarfdump.c\ndwarfdump/tag_attr.c\ndwarfdump/tag_tree.c\nlibdwarf/gennames.c"
    },
    "CVE-2016-9276":{
        "file_name":"libdwarf/dwarf_macro5.c",
        "get_command":[
            "git clone https://github.com/davea42/libdwarf-code.git source",
            "cd source",
            "git checkout 85438a1"
        ],
        "compile_command":[
            "./configure CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./dwarfdump/dwarfdump ../VUL4C/exploit"
        ],
        "nvd_info":"The dwarf_get_aranges_list function in dwarf_arrange.c in Libdwarf before 20161124 allows remote attackers to cause a denial of service (out-of-bounds read).",
        "cve_id":"CVE-2016-9276",
        "project":"libdwarf",
        "hash":"85438a1b30ba3bea0380354a866b1c49414abcfa",
        "test_info":"=================================================================\n==407937==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x606000000054 at pc 0x7ffff6e91733 bp 0x7fffffffd5b0 sp 0x7fffffffcd58\nREAD of size 2 at 0x606000000054 thread T0\n    #0 0x7ffff6e91732  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79732)\n    #1 0x5555554bb3d8 in dwarf_get_aranges_list /home/skd/benchmark-setup/libdwarf/CVE-2016-9276/source/libdwarf/dwarf_arange.c:118\n    #2 0x5555554bc403 in dwarf_get_aranges /home/skd/benchmark-setup/libdwarf/CVE-2016-9276/source/libdwarf/dwarf_arange.c:318\n    #3 0x555555469824 in print_aranges /home/skd/benchmark-setup/libdwarf/CVE-2016-9276/source/dwarfdump/print_aranges.c:145\n    #4 0x555555458510 in process_one_file /home/skd/benchmark-setup/libdwarf/CVE-2016-9276/source/dwarfdump/dwarfdump.c:1420\n    #5 0x555555455565 in main /home/skd/benchmark-setup/libdwarf/CVE-2016-9276/source/dwarfdump/dwarfdump.c:654\n    #6 0x7ffff6613c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x555555451ba9 in _start (/home/skd/benchmark-setup/libdwarf/CVE-2016-9276/source/dwarfdump/dwarfdump+0x51ba9)",
        "commit_message":"Update version strings.\ndwarfdump/common.c\ndwarfdump/dwarfdump.c\ndwarfdump/tag_attr.c\ndwarfdump/tag_tree.c\nlibdwarf/gennames.c"
    },
    "CVE-2016-9558":{
        "file_name":"libdwarf/dwarf_macro5.c",
        "get_command":[
            "git clone https://github.com/davea42/libdwarf-code.git source",
            "cd source",
            "git checkout 85438a1"
        ],
        "compile_command":[
            "./configure LDFLAGS=\"-fsanitize=undefined -g\" CFLAGS=\"-fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=undefined -g\"",
            "make -j10"
        ],
        "test_command":[
            "./dwarfdump/dwarfdump ../VUL4C/exploit"
        ],
        "nvd_info":"(1) libdwarf/dwarf_leb.c and (2) dwarfdump/print_frames.c in libdwarf before 20161124 allow remote attackers to have unspecified impact via a crafted bit pattern in a signed leb number, aka a \"negation overflow.\"",
        "cve_id":"CVE-2016-9558",
        "project":"libdwarf",
        "hash":"85438a1b30ba3bea0380354a866b1c49414abcfa",
        "test_info":"dwarf_leb.c:306:19: runtime error: negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself",
        "commit_message":"Update version strings.\ndwarfdump/common.c\ndwarfdump/dwarfdump.c\ndwarfdump/tag_attr.c\ndwarfdump/tag_tree.c\nlibdwarf/gennames.c"
    },
    "CVE-2017-14639":{
        "file_name":"Source/C++/Core/Ap4SampleEntry.cpp",
        "get_command":[
            "git clone https://github.com/axiomatic-systems/Bento4.git source",
            "cd source",
            "git checkout 3f2ad0b"
        ],
        "compile_command":[
            "export CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./mp42aac ../VUL4C/exploit out.aac"
        ],
        "nvd_info":"AP4_VisualSampleEntry::ReadFields in Core/Ap4SampleEntry.cpp in Bento4 1.5.0-617 uses incorrect character data types, which causes a stack-based buffer underflow and out-of-bounds write, leading to denial of service (application crash) or possibly unspecified other impact.",
        "cve_id":"CVE-2017-14639",
        "project":"bento4",
        "hash":"3f2ad0b82d59aa5995d027df64b2964ebcf59e10",
        "test_info":"=================================================================\n==452306==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffffffb526 at pc 0x5555557202b8 bp 0x7fffffffb4f0 sp 0x7fffffffb4e0\nWRITE of size 1 at 0x7fffffffb526 thread T0\n    #0 0x5555557202b7 in AP4_VisualSampleEntry::ReadFields(AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14639/source/Source/C++/Core/Ap4SampleEntry.cpp:780\n    #1 0x55555571bc3b in AP4_SampleEntry::Read(AP4_ByteStream&, AP4_AtomFactory&) /home/skd/benchmark-setup/bento4/CVE-2017-14639/source/Source/C++/Core/Ap4SampleEntry.cpp:108\n    #2 0x55555571ffa6 in AP4_VisualSampleEntry::AP4_VisualSampleEntry(unsigned int, unsigned int, AP4_ByteStream&, AP4_AtomFactory&) /home/skd/benchmark-setup/bento4/CVE-2017-14639/source/Source/C++/Core/Ap4SampleEntry.cpp:742\n    #3 0x555555721798 in AP4_AvcSampleEntry::AP4_AvcSampleEntry(unsigned int, unsigned int, AP4_ByteStream&, AP4_AtomFactory&) /home/skd/benchmark-setup/bento4/CVE-2017-14639/source/Source/C++/Core/Ap4SampleEntry.cpp:994\n    #4 0x55555575bf45 in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned int, unsigned int, unsigned long long, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14639/source/Source/C++/Core/Ap4AtomFactory.cpp:305\n    #5 0x55555575b42e in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned long long&, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14639/source/Source/C++/Core/Ap4AtomFactory.cpp:220",
        "commit_message":"prep for r617"
    },
    "CVE-2017-14642":{
        "file_name":"Source/C++/Core/Ap4HdlrAtom.cpp",
        "get_command":[
            "git clone https://github.com/axiomatic-systems/Bento4.git source",
            "cd source",
            "git checkout 41cad60"
        ],
        "compile_command":[
            "export ASAN_OPTIONS=allocator_may_return_null=1",
            "export CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./mp42aac ../VUL4C/exploit out.aac"
        ],
        "nvd_info":"A NULL pointer dereference was discovered in the AP4_HdlrAtom class in Bento4 version 1.5.0-617. The vulnerability causes a segmentation fault and application crash in AP4_StdcFileByteStream::ReadPartial in System/StdC/Ap4StdCFileByteStream.cpp, which leads to remote denial of service.",
        "cve_id":"CVE-2017-14642",
        "project":"bento4",
        "hash":"41cad602709436628f07b4c4f64e9ff7a611f687",
        "test_info":"==452309==WARNING: AddressSanitizer failed to allocate 0xffffffffff000006 bytes\n==452309==AddressSanitizer's allocator is terminating the process instead of returning 0\n==452309==If you don't like this behavior set allocator_may_return_null=1\n==452309==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/sanitizer_common/sanitizer_allocator.cc:218 \"((0)) != (0)\" (0x0, 0x0)\n    #0 0x7ffff6f01bf2  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe9bf2)\n    #1 0x7ffff6f20575 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x108575)\n    #2 0x7ffff6f07332  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xef332)\n    #3 0x7ffff6e40ff8  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x28ff8)\n    #4 0x7ffff6ef85ce in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe05ce)\n    #5 0x555555796f66 in AP4_HdlrAtom::AP4_HdlrAtom(unsigned int, unsigned char, unsigned int, AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14642/source/Source/C++/Core/Ap4HdlrAtom.cpp:85\n    #6 0x555555796aef in AP4_HdlrAtom::Create(unsigned int, AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14642/source/Source/C++/Core/Ap4HdlrAtom.cpp:51",
        "commit_message":"fix for #184"
    },
    "CVE-2017-14638":{
        "file_name":"Source/C++/Core/Ap4AtomFactory.cpp",
        "get_command":[
            "git clone https://github.com/axiomatic-systems/Bento4.git source",
            "cd source",
            "git checkout 3f2ad0b"
        ],
        "compile_command":[
            "export CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./mp42aac ../VUL4C/exploit out.aac"
        ],
        "nvd_info":"AP4_AtomFactory::CreateAtomFromStream in Core/Ap4AtomFactory.cpp in Bento4 version 1.5.0-617 has missing NULL checks, leading to a NULL pointer dereference, segmentation fault, and application crash in AP4_Atom::SetType in Core/Ap4Atom.h.",
        "cve_id":"CVE-2017-14638",
        "project":"bento4",
        "hash":"3f2ad0b82d59aa5995d027df64b2964ebcf59e10",
        "test_info":"=================================================================\n==452305==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x5555557110e1 bp 0x7fffffffb190 sp 0x7fffffffb180 T0)\n==452305==The signal is caused by a WRITE memory access.\n==452305==Hint: address points to the zero page.\n    #0 0x5555557110e0 in AP4_Atom::SetType(unsigned int) /home/skd/benchmark-setup/bento4/CVE-2017-14638/source/Source/C++/Core/Ap4Atom.h:247\n    #1 0x55555575d3b0 in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned int, unsigned int, unsigned long long, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14638/source/Source/C++/Core/Ap4AtomFactory.cpp:499\n    #2 0x55555575b42e in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned long long&, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14638/source/Source/C++/Core/Ap4AtomFactory.cpp:220\n    #3 0x555555785640 in AP4_ContainerAtom::ReadChildren(AP4_AtomFactory&, AP4_ByteStream&, unsigned long long) /home/skd/benchmark-setup/bento4/CVE-2017-14638/source/Source/C++/Core/Ap4ContainerAtom.cpp:193\n    #4 0x55555571bd2a in AP4_SampleEntry::Read(AP4_ByteStream&, AP4_AtomFactory&) /home/skd/benchmark-setup/bento4/CVE-2017-14638/source/Source/C++/Core/Ap4SampleEntry.cpp:115\n    #5 0x55555571ffa6 in AP4_VisualSampleEntry::AP4_VisualSampleEntry(unsigned int, unsigned int, AP4_ByteStream&, AP4_AtomFactory&) /home/skd/benchmark-setup/bento4/CVE-2017-14638/source/Source/C++/Core/Ap4SampleEntry.cpp:742",
        "commit_message":"prep for r617"
    },
    "CVE-2017-14643":{
        "file_name":"Source/C++/Core/Ap4StszAtom.cpp",
        "get_command":[
            "git clone https://github.com/axiomatic-systems/Bento4.git source",
            "cd source",
            "git checkout 3f2ad0b"
        ],
        "compile_command":[
            "export CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./mp42aac ../VUL4C/exploit out.aac"
        ],
        "nvd_info":"The AP4_HdlrAtom class in Core/Ap4HdlrAtom.cpp in Bento4 version 1.5.0-617 uses an incorrect character data type, leading to a heap-based buffer over-read and application crash in AP4_BytesToUInt32BE in Core/Ap4Utils.h.",
        "cve_id":"CVE-2017-14643",
        "project":"bento4",
        "hash":"3f2ad0b82d59aa5995d027df64b2964ebcf59e10",
        "test_info":"=================================================================\n==452310==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x617000000324 at pc 0x5555556ff81f bp 0x7fffffffba90 sp 0x7fffffffba80\nREAD of size 1 at 0x617000000324 thread T0\n    #0 0x5555556ff81e in AP4_BytesToUInt32BE(unsigned char const*) /home/skd/benchmark-setup/bento4/CVE-2017-14643/source/Source/C++/Core/Ap4Utils.h:78\n    #1 0x5555557e67ad in AP4_StszAtom::AP4_StszAtom(unsigned int, unsigned char, unsigned int, AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14643/source/Source/C++/Core/Ap4StszAtom.cpp:85\n    #2 0x5555557e6327 in AP4_StszAtom::Create(unsigned int, AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14643/source/Source/C++/Core/Ap4StszAtom.cpp:51\n    #3 0x55555575cf31 in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned int, unsigned int, unsigned long long, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14643/source/Source/C++/Core/Ap4AtomFactory.cpp:442\n    #4 0x55555575b42e in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned long long&, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14643/source/Source/C++/Core/Ap4AtomFactory.cpp:220\n    #5 0x555555785640 in AP4_ContainerAtom::ReadChildren(AP4_AtomFactory&, AP4_ByteStream&, unsigned long long) /home/skd/benchmark-setup/bento4/CVE-2017-14643/source/Source/C++/Core/Ap4ContainerAtom.cpp:193",
        "commit_message":"prep for r617"
    },
    "CVE-2017-14646":{
        "file_name":"Source/C++/Core/Ap4HvccAtom.cpp",
        "get_command":[
            "git clone https://github.com/axiomatic-systems/Bento4.git source",
            "cd source",
            "git checkout 3f2ad0b"
        ],
        "compile_command":[
            "export CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./mp42aac ../VUL4C/exploit out.aac"
        ],
        "nvd_info":"The AP4_AvccAtom and AP4_HvccAtom classes in Bento4 version 1.5.0-617 do not properly validate data sizes, leading to a heap-based buffer over-read and application crash in AP4_DataBuffer::SetData in Core/Ap4DataBuffer.cpp.",
        "cve_id":"CVE-2017-14646",
        "project":"bento4",
        "hash":"3f2ad0b82d59aa5995d027df64b2964ebcf59e10",
        "test_info":"=================================================================\n==452311==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x606000000114 at pc 0x7ffff6e91733 bp 0x7fffffffae50 sp 0x7fffffffa5f8\nREAD of size 65509 at 0x606000000114 thread T0\n    #0 0x7ffff6e91732  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79732)\n    #1 0x555555700bce in AP4_DataBuffer::SetData(unsigned char const*, unsigned int) /home/skd/benchmark-setup/bento4/CVE-2017-14646/source/Source/C++/Core/Ap4DataBuffer.cpp:175\n    #2 0x5555557647cf in AP4_AvccAtom::AP4_AvccAtom(unsigned int, unsigned char const*) /home/skd/benchmark-setup/bento4/CVE-2017-14646/source/Source/C++/Core/Ap4AvccAtom.cpp:165\n    #3 0x555555763962 in AP4_AvccAtom::Create(unsigned int, AP4_ByteStream&) /home/skd/benchmark-setup/bento4/CVE-2017-14646/source/Source/C++/Core/Ap4AvccAtom.cpp:95\n    #4 0x55555575d1d1 in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned int, unsigned int, unsigned long long, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14646/source/Source/C++/Core/Ap4AtomFactory.cpp:477\n    #5 0x55555575b42e in AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream&, unsigned long long&, AP4_Atom*&) /home/skd/benchmark-setup/bento4/CVE-2017-14646/source/Source/C++/Core/Ap4AtomFactory.cpp:220",
        "commit_message":"prep for r617"
    },
    "CVE-2017-14640":{
        "file_name":"Source/C++/Core/Ap4AtomSampleTable.cpp",
        "get_command":[
            "git clone https://github.com/axiomatic-systems/Bento4.git source",
            "cd source",
            "git checkout 3f2ad0b"
        ],
        "compile_command":[
            "export CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\"",
            "export LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./mp42aac ../VUL4C/exploit out.aac"
        ],
        "nvd_info":"A NULL pointer dereference was discovered in AP4_AtomSampleTable::GetSample in Core/Ap4AtomSampleTable.cpp in Bento4 version 1.5.0-617. The vulnerability causes a segmentation fault and application crash, which leads to remote denial of service.",
        "cve_id":"CVE-2017-14640",
        "project":"bento4",
        "hash":"3f2ad0b82d59aa5995d027df64b2964ebcf59e10",
        "test_info":"=================================================================\n==452307==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555555761607 bp 0x7fffffffded0 sp 0x7fffffffdb90 T0)\n==452307==The signal is caused by a READ memory access.\n==452307==Hint: address points to the zero page.\n    #0 0x555555761606 in AP4_AtomSampleTable::GetSample(unsigned int, AP4_Sample&) /home/skd/benchmark-setup/bento4/CVE-2017-14640/source/Source/C++/Core/Ap4AtomSampleTable.cpp:143\n    #1 0x55555572a6f6 in AP4_Track::GetSample(unsigned int, AP4_Sample&) /home/skd/benchmark-setup/bento4/CVE-2017-14640/source/Source/C++/Core/Ap4Track.cpp:435\n    #2 0x55555572a913 in AP4_Track::ReadSample(unsigned int, AP4_Sample&, AP4_DataBuffer&) /home/skd/benchmark-setup/bento4/CVE-2017-14640/source/Source/C++/Core/Ap4Track.cpp:469\n    #3 0x5555556f80fd in WriteSamples /home/skd/benchmark-setup/bento4/CVE-2017-14640/source/Source/C++/Apps/Mp42Aac/Mp42Aac.cpp:192\n    #4 0x5555556f88ea in main /home/skd/benchmark-setup/bento4/CVE-2017-14640/source/Source/C++/Apps/Mp42Aac/Mp42Aac.cpp:274\n    #5 0x7ffff64a7c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x5555556f7479 in _start (/home/skd/benchmark-setup/bento4/CVE-2017-14640/source/mp42aac+0x2f7479)",
        "commit_message":"prep for r617"
    },
    "CVE-2017-5976":{
        "file_name":"zzip/memdisk.c",
        "get_command":[
            "git clone https://github.com/gdraheim/zziplib.git source",
            "cd source/",
            "git checkout 3a4ffcd",
            "wget -P docs/ https://github.com/LuaDist/libzzip/raw/master/docs/zziplib-manpages.tar"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" -j10"
        ],
        "test_command":[
            "./$(uname -s)_$(uname -r)_$(uname -m).d/bins/unzzipcat-mem ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the zzip_mem_entry_extra_block function in memdisk.c in zziplib 0.13.62, 0.13.61, 0.13.60, 0.13.59, 0.13.58, 0.13.57, 0.13.56 allows remote attackers to cause a denial of service (crash) via a crafted ZIP file.",
        "cve_id":"CVE-2017-5976",
        "project":"zziplib",
        "hash":"3a4ffcdd78708c2c7bb9aa89b0a6df0aab6c9d3e",
        "test_info":"=================================================================\n==61675==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000358 at pc 0x555555402e2f bp 0x7fffffffe0b0 sp 0x7fffffffe0a0\nREAD of size 2 at 0x603000000358 thread T0\n    #0 0x555555402e2e in zzip_mem_entry_extra_block ../../zzip/memdisk.c:248\n    #1 0x555555402b26 in zzip_mem_entry_new ../../zzip/memdisk.c:217\n    #2 0x55555540211e in zzip_mem_disk_load ../../zzip/memdisk.c:137\n    #3 0x555555401f7d in zzip_mem_disk_open ../../zzip/memdisk.c:89\n    #4 0x555555401b6a in main ../../bins/unzzipcat-mem.c:82\n    #5 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555401629 in _start (/home/skd/benchmark-setup/zziplib/CVE-2017-5976/source/Linux_5.15.0-56-generic_x86_64.d/bins/unzzipcat-mem+0x1629)",
        "commit_message":"always use the ZZIP_GET macros"
    },
    "CVE-2017-5975":{
        "file_name":"zzip/mmapped.c",
        "get_command":[
            "git clone https://github.com/gdraheim/zziplib.git source",
            "cd source/",
            "git checkout 33d6e9c",
            "wget -P docs/ https://github.com/LuaDist/libzzip/raw/master/docs/zziplib-manpages.tar"
        ],
        "compile_command":[
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" -j10"
        ],
        "test_command":[
            "./$(uname -s)_$(uname -r)_$(uname -m).d/bins/unzzipcat-mem ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the __zzip_get64 function in fetch.c in zziplib 0.13.62, 0.13.61, 0.13.60, 0.13.59, 0.13.58, 0.13.57, 0.13.56 allows remote attackers to cause a denial of service (crash) via a crafted ZIP file.",
        "cve_id":"CVE-2017-5975",
        "project":"zziplib",
        "hash":"33d6e9c52fcf1a8983896a512033994dc2ca5734",
        "test_info":"=================================================================\n==61674==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000001a (pc 0x55555540237f bp 0x7fffffffe150 sp 0x7fffffffe0f0 T0)\n==61674==The signal is caused by a READ memory access.\n==61674==Hint: address points to the zero page.\n    #0 0x55555540237e in zzip_mem_entry_new ../../zzip/memdisk.c:182\n    #1 0x5555554020ce in zzip_mem_disk_load ../../zzip/memdisk.c:137\n    #2 0x555555401f2d in zzip_mem_disk_open ../../zzip/memdisk.c:89\n    #3 0x555555401b1a in main ../../bins/unzzipcat-mem.c:82\n    #4 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #5 0x5555554015d9 in _start (/home/skd/benchmark-setup/zziplib/CVE-2017-5975/source/Linux_5.15.0-56-generic_x86_64.d/bins/unzzipcat-mem+0x15d9)",
        "commit_message":"check file header magic / CVE-2017-5975"
    },
    "CVE-2017-5974":{
        "file_name":"zzip/memdisk.c",
        "get_command":[
            "git clone https://github.com/gdraheim/zziplib.git source",
            "cd source/",
            "git checkout 3a4ffcd",
            "wget -P docs/ https://github.com/LuaDist/libzzip/raw/master/docs/zziplib-manpages.tar"
        ],
        "compile_command":[

            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" -j10"
        ],
        "test_command":[
            "./$(uname -s)_$(uname -r)_$(uname -m).d/bins/unzzipcat-mem ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the __zzip_get32 function in fetch.c in zziplib 0.13.62, 0.13.61, 0.13.60, 0.13.59, 0.13.58, 0.13.57, 0.13.56 allows remote attackers to cause a denial of service (crash) via a crafted ZIP file.",
        "cve_id":"CVE-2017-5974",
        "project":"zziplib",
        "hash":"3a4ffcdd78708c2c7bb9aa89b0a6df0aab6c9d3e",
        "test_info":"=================================================================\n==61673==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300000008c at pc 0x555555402c86 bp 0x7fffffffe0f0 sp 0x7fffffffe0e0\nREAD of size 4 at 0x60300000008c thread T0\n    #0 0x555555402c85 in zzip_mem_entry_new ../../zzip/memdisk.c:224\n    #1 0x55555540211e in zzip_mem_disk_load ../../zzip/memdisk.c:137\n    #2 0x555555401f7d in zzip_mem_disk_open ../../zzip/memdisk.c:89\n    #3 0x555555401b6a in main ../../bins/unzzipcat-mem.c:82\n    #4 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #5 0x555555401629 in _start (/home/skd/benchmark-setup/zziplib/CVE-2017-5974/source/Linux_5.15.0-56-generic_x86_64.d/bins/unzzipcat-mem+0x1629)",
        "commit_message":"always use the ZZIP_GET macros"
    },
    "CVE-2020-28840":{
        "file_name":"jpgfile.c",
        "get_command":[
            "git clone https://github.com/Matthias-Wandel/jhead.git source",
            "cd source",
            "git checkout e64e904"
        ],
        "compile_command":[
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./jhead ../VUL4C/exploit"
        ],
        "nvd_info":"Buffer Overflow vulnerability in jpgfile.c in Matthias-Wandel jhead version 3.04, allows local attackers to execute arbitrary code and cause a denial of service (DoS).",
        "cve_id":"CVE-2020-28840",
        "project":"jhead",
        "hash":"e64e90426a7860adfb0e508a47c465aad9bdf08a",
        "test_info":"=================================================================\n==695==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000014 at pc 0x55555541581d bp 0x7ffffffeeac0 sp 0x7ffffffeeab0\nREAD of size 1 at 0x602000000014 thread T0\n    #0 0x55555541581c in process_COM /5k_add/Matthias-Wandel_jhead/CVE-2020-28840/source/jpgfile.c:51\n    #1 0x555555416251 in ReadJpegSections /5k_add/Matthias-Wandel_jhead/CVE-2020-28840/source/jpgfile.c:240\n    #2 0x555555416b4b in ReadJpegFile /5k_add/Matthias-Wandel_jhead/CVE-2020-28840/source/jpgfile.c:378\n    #3 0x555555411b63 in ProcessFile /5k_add/Matthias-Wandel_jhead/CVE-2020-28840/source/jhead.c:905\n    #4 0x555555415436 in main /5k_add/Matthias-Wandel_jhead/CVE-2020-28840/source/jhead.c:1756\n    #5 0x7ffff66aac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x55555540e739 in _start (/5k_add/Matthias-Wandel_jhead/CVE-2020-28840/source/jhead+0xe739)",
        "commit_message":"Merge branch 'master' of git+ssh://192.168.0.2/home/mwandel/jhead"
    },
    "CVE-2020-26208":{
        "file_name":"jpgfile.c",
        "get_command":[
            "git clone https://github.com/Matthias-Wandel/jhead.git source",
            "cd source",
            "git checkout de444f5"
        ],
        "compile_command":[
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./jhead ../VUL4C/exploit"
        ],
        "nvd_info":"JHEAD is a simple command line tool for displaying and some manipulation of EXIF header data embedded in Jpeg images from digital cameras. In affected versions there is a heap-buffer-overflow on jhead-3.04/jpgfile.c:285 ReadJpegSections. Crafted jpeg images can be provided to the user resulting in a program crash or potentially incorrect exif information retrieval. Users are advised to upgrade. There is no known workaround for this issue.",
        "cve_id":"CVE-2020-26208",
        "project":"jhead",
        "hash":"de444f57702d624ab80e57cbecf94b17a4cfaba5",
        "test_info":"=================================================================\n==629==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000032 at pc 0x7ffff6ec7f54 bp 0x7fffffff2a00 sp 0x7fffffff21a8\nREAD of size 4 at 0x602000000032 thread T0\n    #0 0x7ffff6ec7f53  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xaff53)\n    #1 0x5555554166cf in ReadJpegSections /5k_add/F-ZhaoYang_jhead/CVE-2020-26208/source/jpgfile.c:285\n    #2 0x555555416b5c in ReadJpegFile /5k_add/F-ZhaoYang_jhead/CVE-2020-26208/source/jpgfile.c:378\n    #3 0x555555411b63 in ProcessFile /5k_add/F-ZhaoYang_jhead/CVE-2020-26208/source/jhead.c:905\n    #4 0x555555415436 in main /5k_add/F-ZhaoYang_jhead/CVE-2020-26208/source/jhead.c:1756\n    #5 0x7ffff66aac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x55555540e739 in _start (/5k_add/F-ZhaoYang_jhead/CVE-2020-26208/source/jhead+0xe739)",
        "commit_message":"Merge branch 'master' of git+ssh://192.168.0.2/home/mwandel/jhead"
    },
    "CVE-2017-14107":{
        "file_name":"lib/zip_open.c",
        "get_command":[
            "git clone https://github.com/nih-at/libzip.git source",
            "cd source",
            "git checkout a23ac8a"
        ],
        "compile_command":[
            "aclocal",
            "autoheader",
            "autoconf",
            "libtoolize --automake --copy --debug --force",
            "automake --add-missing",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./src/ziptool ../VUL4C/exploit cat index"
        ],
        "nvd_info":"The _zip_read_eocd64 function in zip_open.c in libzip before 1.3.0 mishandles EOCD records, which allows remote attackers to cause a denial of service (memory allocation failure in _zip_cdir_grow in zip_dirent.c) via a crafted ZIP archive.",
        "cve_id":"CVE-2017-14107",
        "project":"libzip",
        "hash":"a23ac8a766c556827255111eb35ba928641efbc8",
        "test_info":"==400696==ERROR: AddressSanitizer failed to allocate 0xc0a96a2000 (827476025344) bytes of LargeMmapAllocator (error code: 12)\n==400696==Process memory map follows:\n\t0x00007fff7000-0x00008fff7000\n\t0x00008fff7000-0x02008fff7000\n\t0x02008fff7000-0x10007fff8000\n\t0x555555400000-0x55555545b000\t/home/skd/benchmark-setup/libzip/CVE-2017-14107/source/src/ziptool\n\t0x55555565b000-0x55555565c000\t/home/skd/benchmark-setup/libzip/CVE-2017-14107/source/src/ziptool\n\t0x55555565c000-0x555555661000\t/home/skd/benchmark-setup/libzip/CVE-2017-14107/source/src/ziptool\n\t0x600000000000-0x602000000000\n\t0x602000000000-0x602000010000\n\t...\n==400696==End of process memory map.\n==400696==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cc:118 \"((0 && \"unable to mmap\")) != (0)\" (0x0, 0x0)\n    #0 0x7ffff6f01bf2  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe9bf2)\n    #1 0x7ffff6f20575 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x108575)\n    #2 0x7ffff6f0b482  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xf3482)\n    #3 0x7ffff6f17895  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xff895)\n    #4 0x7ffff6e448f1  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x2c8f1)\n    #5 0x7ffff6ef6ef7 in realloc (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeef7)\n    #6 0x5555554148ab in _zip_cdir_grow /home/skd/benchmark-setup/libzip/CVE-2017-14107/source/lib/zip_dirent.c:108\n    #7 0x5555554147b6 in _zip_cdir_new /home/skd/benchmark-setup/libzip/CVE-2017-14107/source/lib/zip_dirent.c:82",
        "commit_message":"Disable tests that do not run portably."
    },
    "CVE-2017-12858":{
        "file_name":"lib/zip_dirent.c",
        "get_command":[
            "git clone https://github.com/nih-at/libzip.git source",
            "cd source",
            "git checkout a23ac8a"
        ],
        "compile_command":[
            "aclocal",
            "autoheader",
            "autoconf",
            "libtoolize --automake --copy --debug --force",
            "automake --add-missing",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./src/ziptool ../VUL4C/exploit cat index"
        ],
        "nvd_info":"Double free vulnerability in the _zip_dirent_read function in zip_dirent.c in libzip allows attackers to have unspecified impact via unknown vectors.",
        "cve_id":"CVE-2017-12858",
        "project":"libzip",
        "hash":"a23ac8a766c556827255111eb35ba928641efbc8",
        "test_info":"=================================================================\n==400695==ERROR: AddressSanitizer: heap-use-after-free on address 0x6030000000d1 at pc 0x55555544bc4a bp 0x7fffffffda90 sp 0x7fffffffda80\nREAD of size 1 at 0x6030000000d1 thread T0\n    #0 0x55555544bc49 in _zip_buffer_free /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/lib/zip_buffer.c:53\n    #1 0x555555417425 in _zip_dirent_read /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/lib/zip_dirent.c:582\n    #2 0x55555542486b in _zip_read_cdir /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/lib/zip_open.c:380\n    #3 0x55555542604d in _zip_find_central_dir /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/lib/zip_open.c:613\n    #4 0x5555554239a1 in _zip_open /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/lib/zip_open.c:200\n    #5 0x55555542371c in zip_open_from_source /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/lib/zip_open.c:148\n    #6 0x55555542340e in zip_open /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/lib/zip_open.c:74\n    #7 0x55555540eecb in read_from_file /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/src/ziptool.c:698\n    #8 0x555555410c5f in main /home/skd/benchmark-setup/libzip/CVE-2017-12858/source/src/ziptool.c:1113\n    #9 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555408449 in _start (/home/skd/benchmark-setup/libzip/CVE-2017-12858/source/src/ziptool+0x8449)",
        "commit_message":"Disable tests that do not run portably."
    },
    "CVE-2019-16347":{
        "file_name":"ngiflib.c",
        "get_command":[
            "git clone https://github.com/miniupnp/ngiflib.git source",
            "cd source",
            "git checkout 3bb9980"
        ],
        "compile_command":[
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./gif2tga ../VUL4C/exploit"
        ],
        "nvd_info":"ngiflib 0.4 has a heap-based buffer overflow in WritePixels() in ngiflib.c when called from DecodeGifImg, because deinterlacing for small pictures is mishandled.",
        "cve_id":"CVE-2019-16347",
        "project":"ngiflib",
        "hash":"3bb9980edf43087335058e2a3a66a25eed185859",
        "test_info":"=================================================================\n==295082==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x615000000520 at pc 0x564400fb610c bp 0x7fff15d5d540 sp 0x7fff15d5d530\nWRITE of size 4 at 0x615000000520 thread T0\n    #0 0x564400fb610b in WritePixels /home/gy/experiment/ngiflib/ngiflib.c:213\n    #1 0x564400fb89d3 in DecodeGifImg /home/gy/experiment/ngiflib/ngiflib.c:568\n    #2 0x564400fba34e in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:809\n    #3 0x564400fb51d2 in main /home/gy/experiment/ngiflib/gif2tga.c:95\n    #4 0x7f32b8bf1d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f32b8bf1e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x564400fb4544 in _start (/home/gy/experiment/ngiflib/gif2tga+0x3544)\n\n0x615000000520 is located 32 bytes to the right of 512-byte region [0x615000000300,0x615000000500)\nallocated by thread T0 here:\n    #0 0x7f32b8f41887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x564400fb8ea2 in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:627\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /home/gy/experiment/ngiflib/ngiflib.c:213 in WritePixels",
        "commit_message":"add POC for issue #9"
    },
    "CVE-2018-10717":{
        "file_name":"ngiflib.c",
        "get_command":[
            "git clone https://github.com/miniupnp/ngiflib.git source",
            "cd source",
            "git checkout b588a22"
        ],
        "compile_command":[
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./SDLaffgif ../VUL4C/exploit"
        ],
        "nvd_info":"The DecodeGifImg function in ngiflib.c in MiniUPnP ngiflib 0.4 does not consider the bounds of the pixels data structure, which allows remote attackers to cause a denial of service (WritePixels heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted GIF file, a different vulnerability than CVE-2018-10677.",
        "cve_id":"CVE-2018-10717",
        "project":"ngiflib",
        "hash":"b588a2249c7abbfc52173e32ee11d6facef82f89",
        "test_info":"=================================================================\n==65061==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x63000001fe00 at pc 0x7fc5ae61c2c3 bp 0x7ffc50aaa740 sp 0x7ffc50aa9ee8\nWRITE of size 1 at 0x63000001fe00 thread T0\n    #0 0x7fc5ae61c2c2 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x55f5c075a9f0 in memcpy /usr/include/x86_64-linux-gnu/bits/string_fortified.h:29\n    #2 0x55f5c075a9f0 in WritePixels /home/gy/experiment/ngiflib/ngiflib.c:206\n    #3 0x55f5c075a9f0 in DecodeGifImg /home/gy/experiment/ngiflib/ngiflib.c:548\n    #4 0x55f5c075c8a0 in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:784\n    #5 0x55f5c0757823 in SDL_LoadAnimatedGif /home/gy/experiment/ngiflib/ngiflibSDL.c:136\n    #6 0x55f5c0756080 in main /home/gy/experiment/ngiflib/SDLaffgif.c:107\n    #7 0x7fc5ae346d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7fc5ae346e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x55f5c0755824 in _start (/home/gy/experiment/ngiflib/SDLaffgif+0x3824)\n\n0x63000001fe00 is located 0 bytes to the right of 64000-byte region [0x630000010400,0x63000001fe00)\nallocated by thread T0 here:\n    #0 0x7fc5ae696887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f5c075b6e3 in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:607",
        "commit_message":"check GIF image position and dimensions\nfixes #1"
    },
    "CVE-2018-10677":{
        "file_name":"ngiflib.c",
        "get_command":[
            "git clone https://github.com/miniupnp/ngiflib.git source",
            "cd source",
            "git checkout 75b9920"
        ],
        "compile_command":[
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./gif2tga ../VUL4C/exploit"
        ],
        "nvd_info":"The DecodeGifImg function in ngiflib.c in MiniUPnP ngiflib 0.4 lacks certain checks against width and height, which allows remote attackers to cause a denial of service (WritePixels heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted GIF file.",
        "cve_id":"CVE-2018-10677",
        "project":"ngiflib",
        "hash":"75b99202e4e57acab399ed07b4e8f94eddf1648a",
        "test_info":"=================================================================\n==72637==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7f0da3b57c0c at pc 0x555af7031ae4 bp 0x7ffc160070c0 sp 0x7ffc160070b0\nWRITE of size 4 at 0x7f0da3b57c0c thread T0\n    #0 0x555af7031ae3 in WritePixels /home/gy/experiment/ngiflib/ngiflib.c:213\n    #1 0x555af7031ae3 in DecodeGifImg /home/gy/experiment/ngiflib/ngiflib.c:530\n    #2 0x555af7033e55 in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:766\n    #3 0x555af702f1ac in main /home/gy/experiment/ngiflib/gif2tga.c:95\n    #4 0x7f0da75ced8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f0da75cee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x555af702e544 in _start (/home/gy/experiment/ngiflib/gif2tga+0x2544)\n\n0x7f0da3b57c0c is located 0 bytes to the right of 144396-byte region [0x7f0da3b34800,0x7f0da3b57c0c)\nallocated by thread T0 here:\n    #0 0x7f0da791e887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x555af70329c4 in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:586",
        "commit_message":"add a few samples"
    },
    "CVE-2019-16346":{
        "file_name":"ngiflib.c",
        "get_command":[
            "git clone https://github.com/miniupnp/ngiflib.git source",
            "cd source",
            "git checkout 3bb9980"
        ],
        "compile_command":[
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./gif2tga ../VUL4C/exploit"
        ],
        "nvd_info":"ngiflib 0.4 has a heap-based buffer overflow in WritePixel() in ngiflib.c when called from DecodeGifImg, because deinterlacing for small pictures is mishandled.",
        "cve_id":"CVE-2019-16346",
        "project":"ngiflib",
        "hash":"3bb9980edf43087335058e2a3a66a25eed185859",
        "test_info":"=================================================================\n==81418==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x621000002500 at pc 0x558d0f631170 bp 0x7ffcaf9a3900 sp 0x7ffcaf9a38f0\nWRITE of size 4 at 0x621000002500 thread T0\n    #0 0x558d0f63116f in WritePixel /home/gy/experiment/ngiflib/ngiflib.c:123\n    #1 0x558d0f63116f in DecodeGifImg /home/gy/experiment/ngiflib/ngiflib.c:544\n    #2 0x558d0f63334e in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:809\n    #3 0x558d0f62e1d2 in main /home/gy/experiment/ngiflib/gif2tga.c:95\n    #4 0x7f8b34b1ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f8b34b1ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x558d0f62d544 in _start (/home/gy/experiment/ngiflib/gif2tga+0x3544)\n\n0x621000002500 is located 0 bytes to the right of 4096-byte region [0x621000001500,0x621000002500)\nallocated by thread T0 here:\n    #0 0x7f8b34e6e887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x558d0f631ea2 in LoadGif /home/gy/experiment/ngiflib/ngiflib.c:627",
        "commit_message":"add POC for issue #9"
    },
    "CVE-2016-9390":{
        "file_name":"src/libjasper/jpc/jpc_dec.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout c62014d09d2fdaaad24f40142914c155c669bf7a"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jas_seq2d_create function in jas_seq.c in JasPer before 1.900.14 allows remote attackers to cause a denial of service (assertion failure) via a crafted image file.",
        "cve_id":"CVE-2016-9390",
        "project":"jasper",
        "hash":"c62014d09d2fdaaad24f40142914c155c669bf7a",
        "test_info":"imginfo: jas_seq.c:90: jas_seq2d_create: Assertion `xstart <= xend && ystart <= yend' failed.",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-9398":{
        "file_name":"src/libjasper/jpc/jpc_t2dec.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout version-1.900.17"
        ],
        "compile_command":[
            "sed -i \"s/inline bool jas_safe_size_mul/inline static bool jas_safe_size_mul/g\" src/libjasper/base/jas_malloc.c",
            "git add src/libjasper/base/jas_malloc.c",
            "autoreconf -i",
            "./configure",
            "make CFLAGS=\"-static -g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-static -g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jpc_floorlog2 function in jpc_math.c in JasPer before 1.900.17 allows remote attackers to cause a denial of service (assertion failure) via unspecified vectors.",
        "cve_id":"CVE-2016-9398",
        "project":"jasper",
        "hash":"e613bbb1612d3a82abc9b8d170c4d9a5d2ec0135",
        "test_info":"jpc_dec.c:1819:40: runtime error: shift exponent 120 is too large for 64-bit type 'long int'\nimginfo: jpc_math.c:94: jpc_floorlog2: Assertion `x > 0' failed.",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-9391":{
        "file_name":"src/libjasper/jpc/jpc_bs.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout c62014d09d2fdaaad24f40142914c155c669bf7a"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jpc_bitstream_getbits function in jpc_bs.c in JasPer before 2.0.10 allows remote attackers to cause a denial of service (assertion failure) via a very large integer.",
        "cve_id":"CVE-2016-9391",
        "project":"jasper",
        "hash":"c62014d09d2fdaaad24f40142914c155c669bf7a",
        "test_info":"type = 0xff05 (UNKNOWN); len = 20;01 40 40 00 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 imginfo: jpc_bs.c:197: jpc_bitstream_getbits: Assertion `n >= 0 && n < 32' failed.",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-9557":{
        "file_name":"src/libjasper/base/jas_image.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout version-1.900.17"
        ],
        "compile_command":[
            "sed -i \"s/inline bool jas_safe_size_mul/inline static bool jas_safe_size_mul/g\" src/libjasper/base/jas_malloc.c",
            "git add src/libjasper/base/jas_malloc.c",
            "autoreconf -i",
            "./configure",
            "make CFLAGS=\"-static -g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-static -g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"Integer overflow in jas_image.c in JasPer before 1.900.25 allows remote attackers to cause a denial of service (application crash) via a crafted file.",
        "cve_id":"CVE-2016-9557",
        "project":"jasper",
        "hash":"e613bbb1612d3a82abc9b8d170c4d9a5d2ec0135",
        "test_info":"jas_image.c:162:49: runtime error: signed integer overflow: 8543608947741818625 * 15 cannot be represented in type 'long int'\nerror: cannot decode code stream\ncannot load image\n=================================================================\n==414041==ERROR: LeakSanitizer: detected memory leaks\nDirect leak of 256 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffff6ef6b40 in __interceptor_malloc (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb40)\n    #1 0x55555568c48b in jas_malloc /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/libjasper/base/jas_malloc.c:242\n    #2 0x55555568c65e in jas_alloc2 /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/libjasper/base/jas_malloc.c:275\n    #3 0x5555556d6ebb in jpc_dec_process_siz /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/libjasper/jpc/jpc_dec.c:1277\n    #4 0x5555556c6ad0 in jpc_dec_decode /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/libjasper/jpc/jpc_dec.c:391\n    #5 0x5555556c5b09 in jpc_decode /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/libjasper/jpc/jpc_dec.c:255\n    #6 0x5555556aca8b in jp2_decode /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/libjasper/jp2/jp2_dec.c:215\n    #7 0x55555567a671 in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/libjasper/base/jas_image.c:396\n    #8 0x555555676219 in main /home/skd/benchmark-setup/jasper/CVE-2016-9557/source/src/appl/imginfo.c:203\n    #9 0x7ffff5721c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-8887":{
        "file_name":"src/libjasper/jp2/jp2_cod.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout e85c498d29cde9d5062e7aaae5a6bf018e80552d"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jp2_colr_destroy function in libjasper/jp2/jp2_cod.c in JasPer before 1.900.10 allows remote attackers to cause a denial of service (NULL pointer dereference).",
        "cve_id":"CVE-2016-8887",
        "project":"jasper",
        "hash":"e85c498d29cde9d5062e7aaae5a6bf018e80552d",
        "test_info":"=================================================================\n==413870==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7ffff6e3e525 bp 0x7fffffffd520 sp 0x7fffffffd4d0 T0)\n==413870==The signal is caused by a READ memory access.\n==413870==Hint: address points to the zero page.\n    #0 0x7ffff6e3e524  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x26524)\n    #1 0x7ffff6ef6772 in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xde772)\n    #2 0x7ffff6732213 in jas_free /home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/libjasper/base/jas_malloc.c:127\n    #3 0x7ffff6755012 in jp2_colr_destroy /home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/libjasper/jp2/jp2_cod.c:443\n    #4 0x7ffff6752f9d in jp2_box_destroy /home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/libjasper/jp2/jp2_cod.c:211\n    #5 0x7ffff6753b7c in jp2_box_get /home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/libjasper/jp2/jp2_cod.c:307\n    #6 0x7ffff675d1f2 in jp2_decode /home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/libjasper/jp2/jp2_dec.c:156\n    #7 0x7ffff670c156 in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/libjasper/base/jas_image.c:380\n    #8 0x5555554024fa in main /home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/appl/imginfo.c:188\n    #9 0x7ffff5390c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x5555554020f9 in _start (/home/skd/benchmark-setup/jasper/CVE-2016-8887/source/src/appl/.libs/imginfo+0x20f9)",
        "commit_message":"Bumped the version number"
    },
    "CVE-2016-10248":{
        "file_name":"src/libjasper/jpc/jpc_tsfb.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout e85c498"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure",
            "make CFLAGS=\"-g -fsanitize=address\" CXXFLAGS=\"-g -fsanitize=address\" LDFLAGS=\"-fsanitize=address\"  -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jpc_tsfb_synthesize function in jpc_tsfb.c in JasPer before 1.900.9 allows remote attackers to cause a denial of service (NULL pointer dereference) via vectors involving an empty sequence.",
        "cve_id":"CVE-2016-10248",
        "project":"jasper",
        "hash":"e85c498d29cde9d5062e7aaae5a6bf018e80552d",
        "test_info":"=================================================================\n==414057==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7ffff6bbeaad bp 0x7fffffffdd90 sp 0x7fffffffdd80 T0)\n==414057==The signal is caused by a READ memory access.\n==414057==Hint: address points to the zero page.\n    #0 0x7ffff6bbeaac in jpc_tsfb_synthesize /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/libjasper/jpc/jpc_tsfb.c:151\n    #1 0x7ffff6b6385e in jpc_dec_tiledecode /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/libjasper/jpc/jpc_dec.c:1068\n    #2 0x7ffff6b5f21c in jpc_dec_process_sod /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/libjasper/jpc/jpc_dec.c:623\n    #3 0x7ffff6b5daa8 in jpc_dec_decode /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/libjasper/jpc/jpc_dec.c:390\n    #4 0x7ffff6b5d118 in jpc_decode /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/libjasper/jpc/jpc_dec.c:254\n    #5 0x7ffff6b4bd62 in jp2_decode /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/libjasper/jp2/jp2_dec.c:215\n    #6 0x7ffff6b1deaa in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/libjasper/base/jas_image.c:380\n    #7 0x5555554018a9 in main /home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/appl/imginfo.c:188\n    #8 0x7ffff6727c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #9 0x555555401519 in _start (/home/skd/benchmark-setup/jasper/CVE-2016-10248/source/src/appl/.libs/imginfo+0x1519)",
        "commit_message":"Bumped the version number"
    },
    "CVE-2016-9394":{
        "file_name":"src/libjasper/jpc/jpc_cs.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout 8f82aa99696e5a1b42eb0b94a6d1d0a48c66f148"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jas_seq2d_create function in jas_seq.c in JasPer before 1.900.17 allows remote attackers to cause a denial of service (assertion failure) via a crafted file.",
        "cve_id":"CVE-2016-9394",
        "project":"jasper",
        "hash":"8f82aa99696e5a1b42eb0b94a6d1d0a48c66f148",
        "test_info":"imginfo: jas_seq.c:90: jas_seq2d_create: Assertion `xstart <= xend && ystart <= yend' failed.",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-8884":{
        "file_name":"src/libjasper/bmp/bmp_dec.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout e85c498d29cde9d5062e7aaae5a6bf018e80552d"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The bmp_getdata function in libjasper/bmp/bmp_dec.c in JasPer 1.900.5 allows remote attackers to cause a denial of service (NULL pointer dereference) by calling the imginfo command with a crafted BMP image. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-8690.",
        "cve_id":"CVE-2016-8884",
        "project":"jasper",
        "hash":"e85c498d29cde9d5062e7aaae5a6bf018e80552d",
        "test_info":"bmp_dec.c:394:5: runtime error: store to null pointer of type 'jas_seqent_t'\nASAN:DEADLYSIGNAL\n=================================================================\n==413856==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7ffff6748f0c bp 0x7fffffffded0 sp 0x7fffffffdde0 T0)\n==413856==The signal is caused by a WRITE memory access.\n==413856==Hint: address points to the zero page.\n    #0 0x7ffff6748f0b in bmp_getdata /home/skd/benchmark-setup/jasper/CVE-2016-8884/source/src/libjasper/bmp/bmp_dec.c:394\n    #1 0x7ffff6745115 in bmp_decode /home/skd/benchmark-setup/jasper/CVE-2016-8884/source/src/libjasper/bmp/bmp_dec.c:201\n    #2 0x7ffff670c156 in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-8884/source/src/libjasper/base/jas_image.c:380\n    #3 0x5555554024fa in main /home/skd/benchmark-setup/jasper/CVE-2016-8884/source/src/appl/imginfo.c:188\n    #4 0x7ffff5390c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #5 0x5555554020f9 in _start (/home/skd/benchmark-setup/jasper/CVE-2016-8884/source/src/appl/.libs/imginfo+0x20f9)",
        "commit_message":"Bumped the version number"
    },
    "CVE-2016-9389":{
        "file_name":"src/libjasper/base/jas_image.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout c62014d09d2fdaaad24f40142914c155c669bf7a"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jpc_irct and jpc_iict functions in jpc_mct.c in JasPer before 1.900.14 allow remote attackers to cause a denial of service (assertion failure).",
        "cve_id":"CVE-2016-9389",
        "project":"jasper",
        "hash":"c62014d09d2fdaaad24f40142914c155c669bf7a",
        "test_info":"imginfo: jpc_mct.c:146: jpc_irct: Assertion `jas_matrix_numrows(c1) == numrows && jas_matrix_numcols(c1) == numcols && jas_matrix_numrows(c2) == numrows && jas_matrix_numcols(c2) == numcols' failed.",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-8691":{
        "file_name":"src/libjasper/jpc/jpc_cs.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout 3c55b399c36ef46befcb21e4ebc4799367f89684"
        ],
        "compile_command":[
            "sed -i \"s/inline bool jas_safe_size_mul/inline static bool jas_safe_size_mul/g\" src/libjasper/base/jas_malloc.c",
            "git add src/libjasper/base/jas_malloc.c",
            "autoreconf -i",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -g\" CXXFLAGS=\"-static -fsanitize=address -g\" -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jpc_dec_process_siz function in libjasper/jpc/jpc_dec.c in JasPer before 1.900.4 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted XRsiz value in a BMP image to the imginfo command.",
        "cve_id":"CVE-2016-8691",
        "project":"jasper",
        "hash":"3c55b399c36ef46befcb21e4ebc4799367f89684",
        "test_info":"=================================================================\n==407952==ERROR: AddressSanitizer: FPE on unknown address 0x55555544876d (pc 0x55555544876d bp 0x7fffffffe0f0 sp 0x7fffffffe0b0 T0)\n    #0 0x55555544876c in jpc_dec_process_siz /home/skd/benchmark-setup/jasper/CVE-2016-8691/source/src/libjasper/jpc/jpc_dec.c:1194\n    #1 0x555555441275 in jpc_dec_decode /home/skd/benchmark-setup/jasper/CVE-2016-8691/source/src/libjasper/jpc/jpc_dec.c:390\n    #2 0x5555554408e8 in jpc_decode /home/skd/benchmark-setup/jasper/CVE-2016-8691/source/src/libjasper/jpc/jpc_dec.c:254\n    #3 0x555555416e4b in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-8691/source/src/libjasper/base/jas_image.c:372\n    #4 0x555555414aa8 in main /home/skd/benchmark-setup/jasper/CVE-2016-8691/source/src/appl/imginfo.c:179\n    #5 0x7ffff6442c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555414779 in _start (/home/skd/benchmark-setup/jasper/CVE-2016-8691/source/src/appl/imginfo+0x14779)",
        "commit_message":"At many places in the code, jas_malloc or jas_recalloc was being\ninvoked with the size argument being computed in a manner that would not\nallow integer overflow to be detected.  Now, these places in the code\nhave been modified to use special-purpose memory allocation functions\n(e.g., jas_alloc2, jas_alloc3, jas_realloc2) that check for overflow.\nThis should fix many security problems."
    },
    "CVE-2016-9396":{
        "file_name":"src/libjasper/jpc/jpc_cs.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout c62014d09d2fdaaad24f40142914c155c669bf7a"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address \" CXXFLAGS=\"-g -fsanitize=address \" LDFLAGS=\"-fsanitize=address \"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The JPC_NOMINALGAIN function in jpc/jpc_t1cod.c in JasPer through 2.0.12 allows remote attackers to cause a denial of service (JPC_COX_RFT assertion failure) via unspecified vectors.",
        "cve_id":"CVE-2016-9396",
        "project":"jasper",
        "hash":"c62014d09d2fdaaad24f40142914c155c669bf7a",
        "test_info":"imginfo: jpc_t1cod.c:144: JPC_NOMINALGAIN: Assertion `qmfbid == JPC_COX_RFT' failed.",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-10251":{
        "file_name":"src/libjasper/jpc/jpc_t2cod.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout e613bbb1612d3a82abc9b8d170c4d9a5d2ec0135"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address\" CXXFLAGS=\"-g -fsanitize=address\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"Integer overflow in the jpc_pi_nextcprl function in jpc_t2cod.c in JasPer before 1.900.20 allows remote attackers to have unspecified impact via a crafted file, which triggers use of an uninitialized value.",
        "cve_id":"CVE-2016-10251",
        "project":"jasper",
        "hash":"e613bbb1612d3a82abc9b8d170c4d9a5d2ec0135",
        "test_info":"=================================================================\n==420085==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000060c at pc 0x7ffff6bc1d50 bp 0x7fffffffdd10 sp 0x7fffffffdd00\nREAD of size 4 at 0x60200000060c thread T0\n    #0 0x7ffff6bc1d4f in jpc_pi_nextcprl /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/jpc/jpc_t2cod.c:482\n    #1 0x7ffff6bbc6db in jpc_pi_next /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/jpc/jpc_t2cod.c:125\n    #2 0x7ffff6bc521b in jpc_dec_decodepkts /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/jpc/jpc_t2dec.c:441\n    #3 0x7ffff6b59dda in jpc_dec_process_sod /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/jpc/jpc_dec.c:594\n    #4 0x7ffff6b58b4c in jpc_dec_decode /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/jpc/jpc_dec.c:391\n    #5 0x7ffff6b581bc in jpc_decode /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/jpc/jpc_dec.c:255\n    #6 0x7ffff6b46962 in jp2_decode /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/jp2/jp2_dec.c:215\n    #7 0x7ffff6b17a31 in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/libjasper/base/jas_image.c:396\n    #8 0x555555401994 in main /home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/appl/imginfo.c:203\n    #9 0x7ffff671fc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x5555554015b9 in _start (/home/skd/benchmark-setup/jasper/CVE-2016-10251/source/src/appl/.libs/imginfo+0x15b9)",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-9560":{
        "file_name":"src/libjasper/jpc/jpc_dec.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout 4786a1392bb13013ac1ca9020096f48abdac6107"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"Stack-based buffer overflow in the jpc_tsfb_getbands2 function in jpc_tsfb.c in JasPer before 1.900.30 allows remote attackers to have unspecified impact via a crafted image.",
        "cve_id":"CVE-2016-9560",
        "project":"jasper",
        "hash":"4786a1392bb13013ac1ca9020096f48abdac6107",
        "test_info":"=================================================================\n==414043==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffdef0 at pc 0x7ffff6831d51 bp 0x7fffffffcf60 sp 0x7fffffffcf50\nWRITE of size 4 at 0x7fffffffdef0 thread T0\n    #0 0x7ffff6831d50 in jpc_tsfb_getbands2 /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/jpc/jpc_tsfb.c:227\n    #1 0x7ffff6831ca0 in jpc_tsfb_getbands2 /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/jpc/jpc_tsfb.c:223\n    #2 0x7ffff683140b in jpc_tsfb_getbands /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/jpc/jpc_tsfb.c:187\n    #3 0x7ffff677320f in jpc_dec_tileinit /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/jpc/jpc_dec.c:714\n    #4 0x7ffff6770fe1 in jpc_dec_process_sod /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/jpc/jpc_dec.c:560\n    #5 0x7ffff676f6c2 in jpc_dec_decode /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/jpc/jpc_dec.c:391\n    #6 0x7ffff676e6f8 in jpc_decode /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/jpc/jpc_dec.c:255\n    #7 0x7ffff66fd575 in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/libjasper/base/jas_image.c:406\n    #8 0x5555554026a9 in main /home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/appl/imginfo.c:203\n    #9 0x7ffff537bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555402249 in _start (/home/skd/benchmark-setup/jasper/CVE-2016-9560/source/src/appl/.libs/imginfo+0x2249)",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-8692":{
        "file_name":"src/libjasper/jpc/jpc_cs.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout 779ddf80c2a9021d5ed134319c54bc38ca9ef9b6"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address\" CXXFLAGS=\"-g -fsanitize=address\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jpc_dec_process_siz function in libjasper/jpc/jpc_dec.c in JasPer before 1.900.4 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted YRsiz value in a BMP image to the imginfo command.",
        "cve_id":"CVE-2016-8692",
        "project":"jasper",
        "hash":"779ddf80c2a9021d5ed134319c54bc38ca9ef9b6",
        "test_info":"=================================================================\n==407953==ERROR: AddressSanitizer: FPE on unknown address 0x7ffff678a2c5 (pc 0x7ffff678a2c5 bp 0x7fffffffdfc0 sp 0x7fffffffdf60 T0)\n    #0 0x7ffff678a2c4 in jpc_dec_process_siz /home/skd/benchmark-setup/jasper/CVE-2016-8692/source/src/libjasper/jpc/jpc_dec.c:1196\n    #1 0x7ffff677b722 in jpc_dec_decode /home/skd/benchmark-setup/jasper/CVE-2016-8692/source/src/libjasper/jpc/jpc_dec.c:390\n    #2 0x7ffff677a758 in jpc_decode /home/skd/benchmark-setup/jasper/CVE-2016-8692/source/src/libjasper/jpc/jpc_dec.c:254\n    #3 0x7ffff670cd01 in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2016-8692/source/src/libjasper/base/jas_image.c:372\n    #4 0x555555402328 in main /home/skd/benchmark-setup/jasper/CVE-2016-8692/source/src/appl/imginfo.c:179\n    #5 0x7ffff5391c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555401f99 in _start (/home/skd/benchmark-setup/jasper/CVE-2016-8692/source/src/appl/.libs/imginfo+0x1f99)",
        "commit_message":"Bump the version number."
    },
    "CVE-2016-9387":{
        "file_name":"src/libjasper/jpc/jpc_dec.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout b9be3d9f35fccb7811ff68bbd6a57156f0192427"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"Integer overflow in the jpc_dec_process_siz function in libjasper/jpc/jpc_dec.c in JasPer before 1.900.13 allows remote attackers to have unspecified impact via a crafted file, which triggers an assertion failure.",
        "cve_id":"CVE-2016-9387",
        "project":"jasper",
        "hash":"b9be3d9f35fccb7811ff68bbd6a57156f0192427",
        "test_info":"jpc_dec.c:1234:33: runtime error: signed integer overflow: 210 * -2147483646 cannot be represented in type 'int'\nimginfo: jas_seq.c:90: jas_seq2d_create: Assertion `xstart <= xend && ystart <= yend' failed.",
        "commit_message":"Replaced the remaining left and right shifts in the QMFB/MCT code\nthat can result in undefined behavior (due to shifting negative values)\nwith call to inline functions.  These functions collect all of the\nundefined behavior in one place and also allow code sanitizers to ignore\nthis ugliness (via function attributes)."
    },
    "CVE-2016-9388":{
        "file_name":"src/libjasper/ras/ras_dec.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout c62014d09d2fdaaad24f40142914c155c669bf7a"
        ],
        "compile_command":[
            "autoreconf -i",
            "./configure CFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" CXXFLAGS=\"-g -fsanitize=address -fsanitize=undefined\" LDFLAGS=\"-fsanitize=address -fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The ras_getcmap function in ras_dec.c in JasPer before 1.900.14 allows remote attackers to cause a denial of service (assertion failure) via a crafted image file.",
        "cve_id":"CVE-2016-9388",
        "project":"jasper",
        "hash":"c62014d09d2fdaaad24f40142914c155c669bf7a",
        "test_info":"imginfo: ras_dec.c:330: ras_getcmap: Assertion `numcolors <= RAS_CMAP_MAXSIZ' failed.",
        "commit_message":"Bump the version number."
    },
    "CVE-2017-6850":{
        "file_name":"src/libjasper/jp2/jp2_cod.c",
        "get_command":[
            "git clone https://github.com/jasper-software/jasper.git source",
            "cd source",
            "git checkout 352d5ac77f910dfc7817f7373dfcf1ffa7d64926"
        ],
        "compile_command":[
            "export LDFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CXXFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CFLAGS=\"-fsanitize=address,undefined -g\"",
            "cmake -DALLOW_IN_SOURCE_BUILD=1 -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./src/appl/imginfo -f ../VUL4C/exploit"
        ],
        "nvd_info":"The jp2_cdef_destroy function in jp2_cod.c in JasPer before 2.0.13 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted image.",
        "cve_id":"CVE-2017-6850",
        "project":"jasper",
        "hash":"352d5ac77f910dfc7817f7373dfcf1ffa7d64926",
        "test_info":"=================================================================\n==420099==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7ffff6e3e525 bp 0x7fffffffd430 sp 0x7fffffffd3e0 T0)\n==420099==The signal is caused by a READ memory access.\n==420099==Hint: address points to the zero page.\n    #0 0x7ffff6e3e524  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x26524)\n    #1 0x7ffff6ef6772 in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xde772)\n    #2 0x7ffff6717362 in jas_free /home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/libjasper/base/jas_malloc.c:259\n    #3 0x7ffff673aa7b in jp2_cdef_destroy /home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/libjasper/jp2/jp2_cod.c:230\n    #4 0x7ffff673a8be in jp2_box_destroy /home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/libjasper/jp2/jp2_cod.c:212\n    #5 0x7ffff673b5f1 in jp2_box_get /home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/libjasper/jp2/jp2_cod.c:319\n    #6 0x7ffff6744c97 in jp2_decode /home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/libjasper/jp2/jp2_dec.c:159\n    #7 0x7ffff67052f1 in jas_image_decode /home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/libjasper/base/jas_image.c:444\n    #8 0x5555554030e6 in main /home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/appl/imginfo.c:238\n    #9 0x7ffff5369c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555402969 in _start (/home/skd/benchmark-setup/jasper/CVE-2017-6850/source/src/appl/imginfo+0x2969)",
        "commit_message":"Bumped the version number."
    },
    "CVE-2017-14649":{
        "file_name":"coders/png.c",
        "get_command":[
            "hg clone http://hg.code.sf.net/p/graphicsmagick/code/ source",
            "cd source",
            "hg revert -r db4eb7f97eeb --all"
        ],
        "compile_command":[
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./utilities/gm convert ../VUL4C/exploit null"
        ],
        "nvd_info":"ReadOneJNGImage in coders/png.c in GraphicsMagick version 1.3.26 does not properly validate JNG data, leading to a denial of service (assertion failure in magick/pixel_cache.c, and application crash).",
        "cve_id":"CVE-2017-14649",
        "project":"graphicsmagick",
        "hash":"db4eb7f97eeb",
        "test_info":"gm: magick/pixel_cache.c:1089: AcquireImagePixels: Assertion `image != (Image *) NULL' failed.",
        "commit_message":"Merge changes for 1.3.26 release from head to GraphicsMagick-1_3 branch"
    },
    "CVE-2017-12937":{
        "file_name":"coders/sun.c",
        "get_command":[
            "hg clone http://hg.code.sf.net/p/graphicsmagick/code/ source",
            "cd source",
            "hg revert -r db4eb7f97eeb --all"
        ],
        "compile_command":[

        ],
        "test_command":[
            "./utilities/gm convert -negate -clip ../VUL4C/exploit out"
        ],
        "nvd_info":"The ReadSUNImage function in coders/sun.c in GraphicsMagick 1.3.26 has a colormap heap-based buffer over-read.",
        "cve_id":"CVE-2017-12937",
        "project":"graphicsmagick",
        "hash":"db4eb7f97eeb",
        "test_info":"=================================================================\n==420125==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000001b4 at pc 0x5555559b2d53 bp 0x7fffffffb0f0 sp 0x7fffffffb0e0\nREAD of size 4 at 0x6020000001b4 thread T0\n    #0 0x5555559b2d52 in ReadSUNImage coders/sun.c:581\n    #1 0x5555555ff888 in ReadImage magick/constitute.c:1607\n    #2 0x555555597c72 in ConvertImageCommand magick/command.c:4348\n    #3 0x5555555aedc1 in MagickCommand magick/command.c:8869\n    #4 0x5555555e0858 in GMCommandSingle magick/command.c:17396\n    #5 0x5555555e0b5b in GMCommand magick/command.c:17449\n    #6 0x55555557ee69 in main utilities/gm.c:61\n    #7 0x7ffff4b26c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #8 0x55555557ed69 in _start (/home/skd/benchmark-setup/graphicsmagick/CVE-2017-12937/source/utilities/gm+0x17ed69)",
        "commit_message":"Merge changes for 1.3.26 release from head to GraphicsMagick-1_3 branch"
    },
    "CVE-2017-14103":{
        "file_name":"coders/png.c",
        "get_command":[
            "hg clone http://hg.code.sf.net/p/graphicsmagick/code/ source",
            "cd source",
            "hg revert -r db4eb7f97eeb --all"
        ],
        "compile_command":[
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./utilities/gm identify ../VUL4C/exploit"
        ],
        "nvd_info":"The ReadJNGImage and ReadOneJNGImage functions in coders/png.c in GraphicsMagick 1.3.26 do not properly manage image pointers after certain error conditions, which allows remote attackers to conduct use-after-free attacks via a crafted file, related to a ReadMNGImage out-of-order CloseBlob call. NOTE: this vulnerability exists because of an incomplete fix for CVE-2017-11403.",
        "cve_id":"CVE-2017-14103",
        "project":"graphicsmagick",
        "hash":"db4eb7f97eeb",
        "test_info":"=================================================================\n==420128==ERROR: AddressSanitizer: heap-use-after-free on address 0x6230000053c0 at pc 0x55555565818b bp 0x7fffffff90d0 sp 0x7fffffff90c0\nREAD of size 8 at 0x6230000053c0 thread T0\n    #0 0x55555565818a in DestroyImageList magick/list.c:231\n    #1 0x55555582c626 in ReadMNGImage coders/png.c:5143\n    #2 0x5555555ff888 in ReadImage magick/constitute.c:1607\n    #3 0x5555555fe81b in PingImage magick/constitute.c:1370\n    #4 0x5555555acb83 in IdentifyImageCommand magick/command.c:8379\n    #5 0x5555555aedc1 in MagickCommand magick/command.c:8869\n    #6 0x5555555e0858 in GMCommandSingle magick/command.c:17396\n    #7 0x5555555e0b5b in GMCommand magick/command.c:17449\n    #8 0x55555557ee69 in main utilities/gm.c:61\n    #9 0x7ffff4b26c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x55555557ed69 in _start (/home/skd/benchmark-setup/graphicsmagick/CVE-2017-14103/source/utilities/gm+0x17ed69)",
        "commit_message":"Merge changes for 1.3.26 release from head to GraphicsMagick-1_3 branch"
    },
    "CVE-2017-9207":{
        "file_name":"src/imagew-jpeg.c",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout e2f7490"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"The iw_get_ui16be function in imagew-util.c:422:24 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (heap-based buffer over-read) via a crafted image, related to imagew-jpeg.c.",
        "cve_id":"CVE-2017-9207",
        "project":"imageworsener",
        "hash":"e2f74906e9cca95ee48e7f019436b9635eab30ba",
        "test_info":"=================================================================\n==420111==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x608000004070 at pc 0x55555548244f bp 0x7fffffffcf50 sp 0x7fffffffcf40\nREAD of size 1 at 0x608000004070 thread T0\n    #0 0x55555548244e in iw_get_ui16be src/imagew-util.c:422\n    #1 0x5555554825f9 in iw_get_ui16_e src/imagew-util.c:436\n    #2 0x555555470dbd in iwjpeg_scan_exif_ifd src/imagew-jpeg.c:130\n    #3 0x5555554713c6 in iwjpeg_scan_exif src/imagew-jpeg.c:182\n    #4 0x555555471699 in iwjpeg_read_saved_markers src/imagew-jpeg.c:205\n    #5 0x5555554734a5 in iw_read_jpeg_file src/imagew-jpeg.c:430\n    #6 0x5555554483c2 in iw_read_file_by_fmt src/imagew-allfmts.c:43\n    #7 0x555555412b53 in iwcmd_run src/imagew-cmd.c:1191\n    #8 0x55555541ef6f in iwcmd_main src/imagew-cmd.c:3018\n    #9 0x55555541f092 in main src/imagew-cmd.c:3067\n    #10 0x7ffff5d8ac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x55555540db39 in _start (/home/skd/benchmark-setup/imageworsener/CVE-2017-9207/source/imagew+0xdb39)",
        "commit_message":"Updated a test image to account for apparent changes in libwebp"
    },
    "CVE-2017-8325":{
        "file_name":"src/imagew-internals.h",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout fbfb0d4"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"The iw_process_cols_to_intermediate function in imagew-main.c in libimageworsener.a in ImageWorsener before 1.3.1 allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted image.",
        "cve_id":"CVE-2017-8325",
        "project":"imageworsener",
        "hash":"fbfb0d477fb459eaf2f8e0868b87be0739133bef",
        "test_info":"=================================================================\n==420101==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7ff7abbabaf8 at pc 0x555555424cf6 bp 0x7fffffffd7e0 sp 0x7fffffffd7d0\nWRITE of size 4 at 0x7ff7abbabaf8 thread T0\n    #0 0x555555424cf5 in iw_process_cols_to_intermediate src/imagew-main.c:903\n    #1 0x555555426793 in iw_process_one_channel src/imagew-main.c:1144\n    #2 0x555555428bb4 in iw_process_internal src/imagew-main.c:1405\n    #3 0x5555554304ec in iw_process_image src/imagew-main.c:2248\n    #4 0x5555554156d5 in iwcmd_run src/imagew-cmd.c:1400\n    #5 0x55555541ee8f in iwcmd_main src/imagew-cmd.c:3018\n    #6 0x55555541efb2 in main src/imagew-cmd.c:3067\n    #7 0x7ffff5d8ac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #8 0x55555540da59 in _start (/home/skd/benchmark-setup/imageworsener/CVE-2017-8325/source/imagew+0xda59)",
        "commit_message":"Updated version number to 1.3.0"
    },
    "CVE-2017-9205":{
        "file_name":"src/imagew-jpeg.c",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout e2f7490"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"The iw_get_ui16be function in imagew-util.c:422:24 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (invalid read and SEGV) via a crafted image, related to imagew-jpeg.c.",
        "cve_id":"CVE-2017-9205",
        "project":"imageworsener",
        "hash":"e2f74906e9cca95ee48e7f019436b9635eab30ba",
        "test_info":"=================================================================\n==420109==ERROR: AddressSanitizer: SEGV on unknown address 0x60b0ff100086 (pc 0x555555482453 bp 0x7fffffffcf70 sp 0x7fffffffcf60 T0)\n==420109==The signal is caused by a READ memory access.\n    #0 0x555555482452 in iw_get_ui16be src/imagew-util.c:422\n    #1 0x5555554825f9 in iw_get_ui16_e src/imagew-util.c:436\n    #2 0x555555470dbd in iwjpeg_scan_exif_ifd src/imagew-jpeg.c:130\n    #3 0x5555554713c6 in iwjpeg_scan_exif src/imagew-jpeg.c:182\n    #4 0x555555471699 in iwjpeg_read_saved_markers src/imagew-jpeg.c:205\n    #5 0x5555554734a5 in iw_read_jpeg_file src/imagew-jpeg.c:430\n    #6 0x5555554483c2 in iw_read_file_by_fmt src/imagew-allfmts.c:43\n    #7 0x555555412b53 in iwcmd_run src/imagew-cmd.c:1191\n    #8 0x55555541ef6f in iwcmd_main src/imagew-cmd.c:3018\n    #9 0x55555541f092 in main src/imagew-cmd.c:3067\n    #10 0x7ffff5d8ac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x55555540db39 in _start (/home/skd/benchmark-setup/imageworsener/CVE-2017-9205/source/imagew+0xdb39)",
        "commit_message":"Updated a test image to account for apparent changes in libwebp"
    },
    "CVE-2017-7962":{
        "file_name":"src/imagew-gif.c",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout fbfb0d4"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"The iwgif_read_image function in imagew-gif.c in libimageworsener.a in ImageWorsener 1.3.0 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted file.",
        "cve_id":"CVE-2017-7962",
        "project":"imageworsener",
        "hash":"fbfb0d477fb459eaf2f8e0868b87be0739133bef",
        "test_info":"=================================================================\n==420100==ERROR: AddressSanitizer: FPE on unknown address 0x55555545b685 (pc 0x55555545b685 bp 0x7fffffff7640 sp 0x7fffffff75f0 T0)\n    #0 0x55555545b684 in iwgif_record_pixel src/imagew-gif.c:213\n    #1 0x55555545c186 in lzw_emit_code src/imagew-gif.c:312\n    #2 0x55555545c935 in lzw_process_code src/imagew-gif.c:376\n    #3 0x55555545cf53 in lzw_process_bytes src/imagew-gif.c:433\n    #4 0x55555545e9aa in iwgif_read_image src/imagew-gif.c:669\n    #5 0x55555545ef54 in iwgif_read_main src/imagew-gif.c:724\n    #6 0x55555545f338 in iw_read_gif_file src/imagew-gif.c:773\n    #7 0x55555544834e in iw_read_file_by_fmt src/imagew-allfmts.c:61\n    #8 0x555555412a73 in iwcmd_run src/imagew-cmd.c:1191\n    #9 0x55555541ee8f in iwcmd_main src/imagew-cmd.c:3018\n    #10 0x55555541efb2 in main src/imagew-cmd.c:3067\n    #11 0x7ffff5d8ac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #12 0x55555540da59 in _start (/home/skd/benchmark-setup/imageworsener/CVE-2017-7962/source/imagew+0xda59)",
        "commit_message":"Updated version number to 1.3.0"
    },
    "CVE-2017-9203":{
        "file_name":"src/imagew-main.c",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout e2f7490"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=undefined -g\" LDFLAGS=\"-fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"imagew-main.c:960:12 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (buffer underflow) via a crafted image, related to imagew-bmp.c.",
        "cve_id":"CVE-2017-9203",
        "project":"imageworsener",
        "hash":"e2f74906e9cca95ee48e7f019436b9635eab30ba",
        "test_info":"src/imagew-main.c:960:24: runtime error: index -1 out of bounds for type 'iw_channelinfo_out [4]'",
        "commit_message":"Updated a test image to account for apparent changes in libwebp"
    },
    "CVE-2017-9204":{
        "file_name":"src/imagew-jpeg.c",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout e2f7490"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"The iw_get_ui16le function in imagew-util.c:405:23 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (invalid read and SEGV) via a crafted image, related to imagew-jpeg.c.",
        "cve_id":"CVE-2017-9204",
        "project":"imageworsener",
        "hash":"e2f74906e9cca95ee48e7f019436b9635eab30ba",
        "test_info":"=================================================================\n==420108==ERROR: AddressSanitizer: SEGV on unknown address 0x60b00a000086 (pc 0x555555482177 bp 0x7fffffffcf70 sp 0x7fffffffcf60 T0)\n==420108==The signal is caused by a READ memory access.\n    #0 0x555555482176 in iw_get_ui16le src/imagew-util.c:405\n    #1 0x5555554825eb in iw_get_ui16_e src/imagew-util.c:435\n    #2 0x555555470dbd in iwjpeg_scan_exif_ifd src/imagew-jpeg.c:130\n    #3 0x5555554713c6 in iwjpeg_scan_exif src/imagew-jpeg.c:182\n    #4 0x555555471699 in iwjpeg_read_saved_markers src/imagew-jpeg.c:205\n    #5 0x5555554734a5 in iw_read_jpeg_file src/imagew-jpeg.c:430\n    #6 0x5555554483c2 in iw_read_file_by_fmt src/imagew-allfmts.c:43\n    #7 0x555555412b53 in iwcmd_run src/imagew-cmd.c:1191\n    #8 0x55555541ef6f in iwcmd_main src/imagew-cmd.c:3018\n    #9 0x55555541f092 in main src/imagew-cmd.c:3067\n    #10 0x7ffff5d8ac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x55555540db39 in _start (/home/skd/benchmark-setup/imageworsener/CVE-2017-9204/source/imagew+0xdb39)",
        "commit_message":"Updated a test image to account for apparent changes in libwebp"
    },
    "CVE-2017-8326":{
        "file_name":"src/imagew-bmp.c",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout fbfb0d4"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure --disable-shared",
            "make CFLAGS=\"-fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=undefined -g\" LDFLAGS=\"-fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"libimageworsener.a in ImageWorsener before 1.3.1 has \"left shift cannot be represented in type int\" undefined behavior issues, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted image, related to imagew-bmp.c and imagew-util.c.",
        "cve_id":"CVE-2017-8326",
        "project":"imageworsener",
        "hash":"fbfb0d477fb459eaf2f8e0868b87be0739133bef",
        "test_info":"src/imagew-util.c:415:68: runtime error: left shift of 255 by 24 places cannot be represented in type 'int'\nWarning: Unrecognized or unsupported colorspace type (0x160001)\nsrc/imagew-bmp.c:427:10: runtime error: left shift of 1 by 31 places cannot be represented in type 'int'",
        "commit_message":"Updated version number to 1.3.0"
    },
    "CVE-2017-9206":{
        "file_name":"src/imagew-jpeg.c",
        "get_command":[
            "git clone https://github.com/jsummers/imageworsener.git source",
            "cd source",
            "git checkout e2f7490"
        ],
        "compile_command":[
            "./scripts/autogen.sh",
            "./configure --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./imagew ../VUL4C/exploit /tmp/out -outfmt bmp"
        ],
        "nvd_info":"The iw_get_ui16le function in imagew-util.c:405:23 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (heap-based buffer over-read) via a crafted image, related to imagew-jpeg.c.",
        "cve_id":"CVE-2017-9206",
        "project":"imageworsener",
        "hash":"e2f74906e9cca95ee48e7f019436b9635eab30ba",
        "test_info":"=================================================================\n==420110==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x608000000a70 at pc 0x555555482173 bp 0x7fffffffcf50 sp 0x7fffffffcf40\nREAD of size 1 at 0x608000000a70 thread T0\n    #0 0x555555482172 in iw_get_ui16le src/imagew-util.c:405\n    #1 0x5555554825eb in iw_get_ui16_e src/imagew-util.c:435\n    #2 0x555555470dbd in iwjpeg_scan_exif_ifd src/imagew-jpeg.c:130\n    #3 0x5555554713c6 in iwjpeg_scan_exif src/imagew-jpeg.c:182\n    #4 0x555555471699 in iwjpeg_read_saved_markers src/imagew-jpeg.c:205\n    #5 0x5555554734a5 in iw_read_jpeg_file src/imagew-jpeg.c:430\n    #6 0x5555554483c2 in iw_read_file_by_fmt src/imagew-allfmts.c:43\n    #7 0x555555412b53 in iwcmd_run src/imagew-cmd.c:1191\n    #8 0x55555541ef6f in iwcmd_main src/imagew-cmd.c:3018\n    #9 0x55555541f092 in main src/imagew-cmd.c:3067\n    #10 0x7ffff5d8ac86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x55555540db39 in _start (/home/skd/benchmark-setup/imageworsener/CVE-2017-9206/source/imagew+0xdb39)",
        "commit_message":"Updated a test image to account for apparent changes in libwebp"
    },
    "CVE-2020-21572":{
        "file_name":"src/gilcc.c",
        "get_command":[
            "git clone https://github.com/trgil/gilcc.git source",
            "cd source/src/",
            "git checkout 9aa8b0b"
        ],
        "compile_command":[
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./src/gilcc ../VUL4C/exploit"
        ],
        "nvd_info":"Buffer overflow vulnerability in function src_parser_trans_stage_1_2_3 trgil gilcc before commit 803969389ca9c06237075a7f8eeb1a19e6651759, allows attackers to cause a denial of service.",
        "cve_id":"CVE-2020-21572",
        "project":"gilcc",
        "hash":"9aa8b0bf8a8387b40517ac0bcc69c25beefac253",
        "test_info":"=================================================================\n==880437==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffe01c at pc 0x5555554027b4 bp 0x7fffffffdef0 sp 0x7fffffffdee0\nREAD of size 1 at 0x7fffffffe01c thread T0\n    #0 0x5555554027b3 in src_parser_trans_stage_1_2_3 /5k_add/gilcc/CVE-2020-21572/source/src/src_parser.c:156\n    #1 0x555555403144 in src_parser_cpp /5k_add/gilcc/CVE-2020-21572/source/src/src_parser.c:228\n    #2 0x555555403d77 in main /5k_add/gilcc/CVE-2020-21572/source/src/gilcc.c:231\n    #3 0x7ffff6a48c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #4 0x555555401c69 in _start (/5k_add/gilcc/CVE-2020-21572/source/src/gilcc+0x1c69)",
        "commit_message":"Remove depr. TODO comment"
    },
    "CVE-2017-7610":{
        "file_name":"src/elflint.c",
        "get_command":[
            "wget https://sourceware.org/pub/elfutils/0.168/elfutils-0.168.tar.bz2",
            "tar -jxvf elfutils-0.168.tar.bz2",
            "mv elfutils-0.168 source",
            "cd source"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./src/elflint -d ../VUL4C/exploit"
        ],
        "nvd_info":"The check_group function in elflint.c in elfutils 0.168 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-7610",
        "project":"elfutils",
        "hash":null,
        "test_info":"=================================================================\n==420170==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000030 at pc 0x5555554275c0 bp 0x7fffffffd890 sp 0x7fffffffd880\nREAD of size 4 at 0x602000000030 thread T0\n    #0 0x5555554275bf in check_group /home/skd/benchmark-setup/elfutils/CVE-2017-7610/source/src/elflint.c:2664\n    #1 0x555555431f42 in check_sections /home/skd/benchmark-setup/elfutils/CVE-2017-7610/source/src/elflint.c:4132\n    #2 0x5555554352ae in process_elf_file /home/skd/benchmark-setup/elfutils/CVE-2017-7610/source/src/elflint.c:4696\n    #3 0x555555415153 in process_file /home/skd/benchmark-setup/elfutils/CVE-2017-7610/source/src/elflint.c:242\n    #4 0x555555414d9d in main /home/skd/benchmark-setup/elfutils/CVE-2017-7610/source/src/elflint.c:175\n    #5 0x7ffff662cc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555414399 in _start (/home/skd/benchmark-setup/elfutils/CVE-2017-7610/source/src/elflint+0x14399)",
        "commit_message":null
    },
    "CVE-2017-7608":{
        "file_name":"src/elfcmp.c",
        "get_command":[
            "wget https://sourceware.org/pub/elfutils/0.168/elfutils-0.168.tar.bz2",
            "tar -jxvf elfutils-0.168.tar.bz2",
            "mv elfutils-0.168 source",
            "cd source"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./src/readelf -a ../VUL4C/exploit"
        ],
        "nvd_info":"The ebl_object_note_type_name function in eblobjnotetypename.c in elfutils 0.168 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-7608",
        "project":"elfutils",
        "hash":null,
        "test_info":"=================================================================\n==420133==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000007c at pc 0x7ffff6e72089 bp 0x7fffffffd810 sp 0x7fffffffcfb8\nREAD of size 1 at 0x60200000007c thread T0\n    #0 0x7ffff6e72088  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5a088)\n    #1 0x555555470f17 in ebl_object_note_type_name /home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/libebl/eblobjnotetypename.c:48\n    #2 0x55555546a538 in handle_notes_data /home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/src/readelf.c:9372\n    #3 0x55555546b18c in handle_notes /home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/src/readelf.c:9455\n    #4 0x55555542c8b0 in process_elf_file /home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/src/readelf.c:916\n    #5 0x55555542b613 in process_dwflmod /home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/src/readelf.c:690\n    #6 0x7ffff6bcfdf0 in dwfl_getmodules /root/elfutils-0.185/libdwfl/dwfl_getmodules.c:86\n    #7 0x55555542bea3 in process_file /home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/src/readelf.c:789\n    #8 0x555555429c42 in main /home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/src/readelf.c:305\n    #9 0x7ffff6393c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555428f39 in _start (/home/skd/benchmark-setup/elfutils/CVE-2017-7608/source/src/readelf+0x28f39)",
        "commit_message":null
    },
    "CVE-2017-7611":{
        "file_name":"src/elflint.c",
        "get_command":[
            "wget https://sourceware.org/pub/elfutils/0.168/elfutils-0.168.tar.bz2",
            "tar -jxvf elfutils-0.168.tar.bz2",
            "mv elfutils-0.168 source",
            "cd source"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./src/elflint -d ../VUL4C/exploit"
        ],
        "nvd_info":"The check_symtab_shndx function in elflint.c in elfutils 0.168 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-7611",
        "project":"elfutils",
        "hash":null,
        "test_info":"=================================================================\n==420173==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000030 at pc 0x555555422000 bp 0x7fffffffd880 sp 0x7fffffffd870\nREAD of size 4 at 0x602000000030 thread T0\n    #0 0x555555421fff in check_symtab_shndx /home/skd/benchmark-setup/elfutils/CVE-2017-7611/source/src/elflint.c:1961\n    #1 0x555555431de8 in check_sections /home/skd/benchmark-setup/elfutils/CVE-2017-7611/source/src/elflint.c:4114\n    #2 0x5555554352ae in process_elf_file /home/skd/benchmark-setup/elfutils/CVE-2017-7611/source/src/elflint.c:4696\n    #3 0x555555415153 in process_file /home/skd/benchmark-setup/elfutils/CVE-2017-7611/source/src/elflint.c:242\n    #4 0x555555414d9d in main /home/skd/benchmark-setup/elfutils/CVE-2017-7611/source/src/elflint.c:175\n    #5 0x7ffff662cc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555414399 in _start (/home/skd/benchmark-setup/elfutils/CVE-2017-7611/source/src/elflint+0x14399)",
        "commit_message":null
    },
    "CVE-2017-7607":{
        "file_name":"src/readelf.c",
        "get_command":[
            "wget https://sourceware.org/pub/elfutils/0.168/elfutils-0.168.tar.bz2",
            "tar -jxvf elfutils-0.168.tar.bz2",
            "mv elfutils-0.168 source",
            "cd source"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./src/readelf -a ../VUL4C/exploit"
        ],
        "nvd_info":"The handle_gnu_hash function in readelf.c in elfutils 0.168 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-7607",
        "project":"elfutils",
        "hash":null,
        "test_info":"=================================================================\n==420130==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61100000013c at pc 0x55555543e558 bp 0x7fffffffda20 sp 0x7fffffffda10\nREAD of size 4 at 0x61100000013c thread T0\n    #0 0x55555543e557 in handle_gnu_hash /home/skd/benchmark-setup/elfutils/CVE-2017-7607/source/src/readelf.c:3268\n    #1 0x55555543ed7e in handle_hash /home/skd/benchmark-setup/elfutils/CVE-2017-7607/source/src/readelf.c:3346\n    #2 0x55555542c78e in process_elf_file /home/skd/benchmark-setup/elfutils/CVE-2017-7607/source/src/readelf.c:898\n    #3 0x55555542b613 in process_dwflmod /home/skd/benchmark-setup/elfutils/CVE-2017-7607/source/src/readelf.c:690\n    #4 0x7ffff6bcfdf0 in dwfl_getmodules /root/elfutils-0.185/libdwfl/dwfl_getmodules.c:86\n    #5 0x55555542bea3 in process_file /home/skd/benchmark-setup/elfutils/CVE-2017-7607/source/src/readelf.c:789\n    #6 0x555555429c42 in main /home/skd/benchmark-setup/elfutils/CVE-2017-7607/source/src/readelf.c:305\n    #7 0x7ffff6393c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #8 0x555555428f39 in _start (/home/skd/benchmark-setup/elfutils/CVE-2017-7607/source/src/readelf+0x28f39)",
        "commit_message":null
    },
    "CVE-2017-7612":{
        "file_name":"src/elflint.c",
        "get_command":[
            "wget https://sourceware.org/pub/elfutils/0.168/elfutils-0.168.tar.bz2",
            "tar -jxvf elfutils-0.168.tar.bz2",
            "mv elfutils-0.168 source",
            "cd source"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-Wno-error -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./src/elflint -d ../VUL4C/exploit"
        ],
        "nvd_info":"The check_sysv_hash function in elflint.c in elfutils 0.168 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-7612",
        "project":"elfutils",
        "hash":null,
        "test_info":"=================================================================\n==420174==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b0000000a4 at pc 0x555555422671 bp 0x7fffffffd8e0 sp 0x7fffffffd8d0\nREAD of size 4 at 0x60b0000000a4 thread T0\n    #0 0x555555422670 in check_sysv_hash /home/skd/benchmark-setup/elfutils/CVE-2017-7612/source/src/elflint.c:2020\n    #1 0x5555554245f4 in check_hash /home/skd/benchmark-setup/elfutils/CVE-2017-7612/source/src/elflint.c:2315\n    #2 0x555555431e5e in check_sections /home/skd/benchmark-setup/elfutils/CVE-2017-7612/source/src/elflint.c:4118\n    #3 0x5555554352ae in process_elf_file /home/skd/benchmark-setup/elfutils/CVE-2017-7612/source/src/elflint.c:4696\n    #4 0x555555415153 in process_file /home/skd/benchmark-setup/elfutils/CVE-2017-7612/source/src/elflint.c:242\n    #5 0x555555414d9d in main /home/skd/benchmark-setup/elfutils/CVE-2017-7612/source/src/elflint.c:175\n    #6 0x7ffff662cc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x555555414399 in _start (/home/skd/benchmark-setup/elfutils/CVE-2017-7612/source/src/elflint+0x14399)",
        "commit_message":null
    },
    "CVE-2016-9559":{
        "file_name":"coders/tiff.c",
        "get_command":[
            "git clone https://github.com/ImageMagick/ImageMagick.git source",
            "cd source",
            "git checkout c238dc1"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=undefined -g\" LDFLAGS=\"-fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./utilities/magick identify ../VUL4C/exploit"
        ],
        "nvd_info":"coders/tiff.c in ImageMagick before 7.0.3.7 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) via a crafted image.",
        "cve_id":"CVE-2016-9559",
        "project":"imagemagick",
        "hash":"c238dc1c259c8e5b983951539aa101598fe26543",
        "test_info":"coders/tiff.c:655:7: runtime error: null pointer passed as argument 2, which is declared to never be null",
        "commit_message":"..."
    },
    "CVE-2017-12877":{
        "file_name":"coders/mat.c",
        "get_command":[
            "git clone https://github.com/ImageMagick/ImageMagick.git source",
            "cd source",
            "git checkout 781c31a"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./utilities/magick convert ../VUL4C/exploit null"
        ],
        "nvd_info":"Use-after-free vulnerability in the DestroyImage function in image.c in ImageMagick before 7.0.6-6 allows remote attackers to cause a denial of service via a crafted file.",
        "cve_id":"CVE-2017-12877",
        "project":"imagemagick",
        "hash":"781c31aeb16047d7123502666dea2ecdc97c072e",
        "test_info":"=================================================================\n==420116==ERROR: AddressSanitizer: heap-use-after-free on address 0x627000034550 at pc 0x55555563936a bp 0x7fffffff39c0 sp 0x7fffffff39b0\nREAD of size 8 at 0x627000034550 thread T0\n    #0 0x555555639369 in DestroyImage MagickCore/image.c:1186\n    #1 0x55555580211d in ReadMATImage coders/mat.c:1374\n    #2 0x555555aaa442 in ReadImage MagickCore/constitute.c:497\n    #3 0x555555aad328 in ReadImages MagickCore/constitute.c:866\n    #4 0x555555e1e117 in ConvertImageCommand MagickWand/convert.c:641\n    #5 0x555555f3ef62 in MagickCommandGenesis MagickWand/mogrify.c:183\n    #6 0x55555562cda0 in MagickMain utilities/magick.c:149\n    #7 0x55555562d026 in main utilities/magick.c:180\n    #8 0x7ffff38a9c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #9 0x55555562c819 in _start (/home/skd/benchmark-setup/imagemagick/CVE-2017-12877/source/utilities/magick+0x22c819)",
        "commit_message":"..."
    },
    "CVE-2017-12876":{
        "file_name":"MagickCore/enhance.c",
        "get_command":[
            "git clone https://github.com/ImageMagick/ImageMagick.git source",
            "cd source",
            "git checkout 781c31a"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./utilities/magick convert ../VUL4C/exploit null"
        ],
        "nvd_info":"Heap-based buffer overflow in enhance.c in ImageMagick before 7.0.6-6 allows remote attackers to cause a denial of service via a crafted file.",
        "cve_id":"CVE-2017-12876",
        "project":"imagemagick",
        "hash":"781c31aeb16047d7123502666dea2ecdc97c072e",
        "test_info":"=================================================================\n==420115==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000081d8 at pc 0x555555ba9e63 bp 0x7fffffff6990 sp 0x7fffffff6980\nREAD of size 8 at 0x6020000081d8 thread T0\n    #0 0x555555ba9e62 in ContrastStretchImage._omp_fn.3 MagickCore/enhance.c:1248\n    #1 0x7ffff445bede in GOMP_parallel (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0xdede)\n    #2 0x555555b9bd38 in ContrastStretchImage MagickCore/enhance.c:1213\n    #3 0x555555ba6691 in NormalizeImage MagickCore/enhance.c:3607\n    #4 0x555555a2bf11 in SetImageType MagickCore/attribute.c:1262\n    #5 0x555555a04c5c in WriteTIFFImage coders/tiff.c:3245\n    #6 0x555555aae3c0 in WriteImage MagickCore/constitute.c:1114\n    #7 0x555555aaf10e in WriteImages MagickCore/constitute.c:1333\n    #8 0x555555e944c4 in ConvertImageCommand MagickWand/convert.c:3280\n    #9 0x555555f3ef62 in MagickCommandGenesis MagickWand/mogrify.c:183\n    #10 0x55555562cda0 in MagickMain utilities/magick.c:149\n    #11 0x55555562d026 in main utilities/magick.c:180\n    #12 0x7ffff38a9c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x55555562c819 in _start (/home/skd/benchmark-setup/imagemagick/CVE-2017-12876/source/utilities/magick+0x22c819)",
        "commit_message":"..."
    },
    "CVE-2016-9556":{
        "file_name":"coders/sgi.c",
        "get_command":[
            "git clone https://github.com/ImageMagick/ImageMagick.git source",
            "cd source",
            "git checkout c238dc1"
        ],
        "compile_command":[
            "./configure --enable-shared=no CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"",
            "make -j10"
        ],
        "test_command":[
            "./utilities/magick identify ../VUL4C/exploit"
        ],
        "nvd_info":"The IsPixelGray function in MagickCore/pixel-accessor.h in ImageMagick 7.0.3-8 allows remote attackers to cause a denial of service (out-of-bounds heap read) via a crafted image file.",
        "cve_id":"CVE-2016-9556",
        "project":"imagemagick",
        "hash":"c238dc1c259c8e5b983951539aa101598fe26543",
        "test_info":"=================================================================\n==420112==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x611000001000 at pc 0x555555a15a6c bp 0x7fffffff2f00 sp 0x7fffffff2ef0\nREAD of size 4 at 0x611000001000 thread T0\n    #0 0x555555a15a6b in IsPixelGray MagickCore/pixel-accessor.h:507\n    #1 0x555555a17ccf in IdentifyImageGray MagickCore/attribute.c:677\n    #2 0x555555a18315 in IdentifyImageType MagickCore/attribute.c:821\n    #3 0x555555c0b1ae in IdentifyImage MagickCore/identify.c:527\n    #4 0x555555ebcc94 in IdentifyImageCommand MagickWand/identify.c:336\n    #5 0x555555f194fb in MagickCommandGenesis MagickWand/mogrify.c:183\n    #6 0x5555556278a9 in MagickMain utilities/magick.c:145\n    #7 0x555555627b2f in main utilities/magick.c:176\n    #8 0x7ffff38a9c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #9 0x555555627309 in _start (/home/skd/benchmark-setup/imagemagick/CVE-2016-9556/source/utilities/magick+0x227309)",
        "commit_message":"..."
    },
    "CVE-2017-9043":{
        "file_name":"binutils/readelf.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout ef6a5ae7bd1dd7b528f5cf368d98056603003c35"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=shift -g\" CXXFLAGS=\"-fsanitize=shift -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=shift\" -j10"
        ],
        "test_command":[
            "./binutils/readelf -a ../VUL4C/exploit"
        ],
        "nvd_info":"readelf.c in GNU Binutils 2017-04-12 has a \"shift exponent too large for type unsigned long\" issue, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted ELF file.",
        "cve_id":"CVE-2017-9043",
        "project":"binutils",
        "hash":"ef6a5ae7bd1dd7b528f5cf368d98056603003c35",
        "test_info":"readelf.c:16941:18: runtime error: shift exponent 64 is too large for 64-bit type 'long unsigned int'",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-15023":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 4102159923c90abd636d73e78777b98b1c680e53"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -g\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"read_formatted_entries in dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, does not properly validate the format count, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted ELF file, related to concat_filename.",
        "cve_id":"CVE-2017-15023",
        "project":"binutils",
        "hash":"4102159923c90abd636d73e78777b98b1c680e53",
        "test_info":"=================================================================\n==452299==ERROR: LeakSanitizer: detected memory leaks\nDirect leak of 80 byte(s) in 2 object(s) allocated from:\n    #0 0x7ffff6ef6b40 in __interceptor_malloc (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb40)\n    #1 0x5555554c4a4f in bfd_malloc /home/skd/benchmark-setup/binutils/CVE-2017-15023/source/bfd/libbfd.c:193\n    #2 0x5555555f057d in add_line_info dwarf2.c:1528\n    #3 0x5555555f4975 in decode_line_info dwarf2.c:2318\n    #4 0x5555555fb465 in comp_unit_find_nearest_line dwarf2.c:3562\n    #5 0x555555600ebe in _bfd_dwarf2_find_nearest_line dwarf2.c:4762\n    #6 0x55555556534c in _bfd_elf_find_nearest_line /home/skd/benchmark-setup/binutils/CVE-2017-15023/source/bfd/elf.c:8653\n    #7 0x5555554a2804 in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-15023/source/binutils/nm.c:1004\n    #8 0x5555554a2d88 in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-15023/source/binutils/nm.c:1084\n    #9 0x5555554a39e5 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-15023/source/binutils/nm.c:1200\n    #10 0x5555554a425c in display_file /home/skd/benchmark-setup/binutils/CVE-2017-15023/source/binutils/nm.c:1318\n    #11 0x5555554a5f08 in main /home/skd/benchmark-setup/binutils/CVE-2017-15023/source/binutils/nm.c:1792\n    #12 0x7ffff6844c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-15021":{
        "file_name":"bfd/opncls.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -g\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"bfd_get_debug_link_info_1 in opncls.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file, related to bfd_getl32.",
        "cve_id":"CVE-2017-15021",
        "project":"binutils",
        "hash":"8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1",
        "test_info":"=================================================================\n==452297==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000031e at pc 0x5555554c53ee bp 0x7fffffffd6a0 sp 0x7fffffffd690\nREAD of size 1 at 0x60200000031e thread T0\n    #0 0x5555554c53ed in bfd_getl32 /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/bfd/libbfd.c:559\n    #1 0x5555554ca2d9 in bfd_get_debug_link_info_1 /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/bfd/opncls.c:1206\n    #2 0x5555554ca93c in find_separate_debug_file /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/bfd/opncls.c:1423\n    #3 0x5555554cb07c in bfd_follow_gnu_debuglink /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/bfd/opncls.c:1582\n    #4 0x5555555fea87 in _bfd_dwarf2_slurp_debug_info dwarf2.c:4315\n    #5 0x5555555ffaa6 in _bfd_dwarf2_find_nearest_line dwarf2.c:4508\n    #6 0x555555565726 in _bfd_elf_find_line /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/bfd/elf.c:8694\n    #7 0x5555554a270b in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/binutils/nm.c:1003\n    #8 0x5555554a2d88 in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/binutils/nm.c:1084\n    #9 0x5555554a39e5 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/binutils/nm.c:1200\n    #10 0x5555554a425c in display_file /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/binutils/nm.c:1318\n    #11 0x5555554a5f08 in main /home/skd/benchmark-setup/binutils/CVE-2017-15021/source/binutils/nm.c:1792\n    #12 0x7ffff6844c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x55555549e6d9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-15021/source/binutils/nm-new+0x9e6d9)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-15939":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 5b3fd0aac2b70d860ba34f0e290d87773b09bd11"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -g\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, mishandles NULL files in a .debug_line file table, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted ELF file, related to concat_filename. NOTE: this issue is caused by an incomplete fix for CVE-2017-15023.",
        "cve_id":"CVE-2017-15939",
        "project":"binutils",
        "hash":"5b3fd0aac2b70d860ba34f0e290d87773b09bd11",
        "test_info":"=================================================================\n==452304==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5555555f0c65 bp 0x7fffffffd740 sp 0x7fffffffd6f0 T0)\n==452304==The signal is caused by a READ memory access.\n==452304==Hint: address points to the zero page.\n    #0 0x5555555f0c64 in concat_filename dwarf2.c:1601\n    #1 0x5555555f4528 in decode_line_info dwarf2.c:2258\n    #2 0x5555555fb990 in comp_unit_maybe_decode_line_info dwarf2.c:3642\n    #3 0x5555555fbb19 in comp_unit_find_line dwarf2.c:3677\n    #4 0x555555600f73 in _bfd_dwarf2_find_nearest_line dwarf2.c:4789\n    #5 0x55555556575a in _bfd_elf_find_line /home/skd/benchmark-setup/binutils/CVE-2017-15939/source/bfd/elf.c:8695\n    #6 0x5555554a272b in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-15939/source/binutils/nm.c:1003\n    #7 0x5555554a2da8 in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-15939/source/binutils/nm.c:1084\n    #8 0x5555554a3a05 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-15939/source/binutils/nm.c:1200\n    #9 0x5555554a427c in display_file /home/skd/benchmark-setup/binutils/CVE-2017-15939/source/binutils/nm.c:1318\n    #10 0x5555554a5f28 in main /home/skd/benchmark-setup/binutils/CVE-2017-15939/source/binutils/nm.c:1792\n    #11 0x7ffff6844c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #12 0x55555549e6f9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-15939/source/binutils/nm-new+0x9e6f9)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-6965":{
        "file_name":"binutils/readelf.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 53f7e8ea7fad1fcff1b58f4cbd74e192e0bcbc1d"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=undefined,address -fno-omit-frame-pointer -ggdb -Wno-error\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address -fsanitize=undefined\" -j10",
            "cp binutils/readelf ../"
        ],
        "test_command":[
            "./binutils/readelf -w ../VUL4C/exploit"
        ],
        "nvd_info":"readelf in GNU Binutils 2.28 writes to illegal addresses while processing corrupt input files containing symbol-difference relocations, leading to a heap-based buffer overflow.",
        "cve_id":"CVE-2017-6965",
        "project":"binutils",
        "hash":"53f7e8ea7fad1fcff1b58f4cbd74e192e0bcbc1d",
        "test_info":"=================================================================\n==420177==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60e0000000ec at pc 0x55555560c098 bp 0x7fffffffdb30 sp 0x7fffffffdb20\nWRITE of size 1 at 0x60e0000000ec thread T0\n    #0 0x55555560c097 in byte_put_little_endian /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/elfcomm.c:75\n    #1 0x5555555b0044 in target_specific_reloc_handling /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:11640\n    #2 0x5555555b269e in apply_relocations /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:12343\n    #3 0x5555555b6e81 in load_specific_debug_section /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:12905\n    #4 0x5555555b7bb2 in display_debug_section /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:13009\n    #5 0x5555555b829c in process_section_contents /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:13091\n    #6 0x5555555ccefe in process_object /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:16780\n    #7 0x5555555cea02 in process_file /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:17154\n    #8 0x5555555cedd2 in main /home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf.c:17225\n    #9 0x7ffff5d27c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x55555555ee99 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-6965/source/binutils/readelf+0x15ee99)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-15938":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 5b3fd0aac2b70d860ba34f0e290d87773b09bd11"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address -fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, miscalculates DW_FORM_ref_addr die refs in the case of a relocatable object file, which allows remote attackers to cause a denial of service (find_abstract_instance_name invalid memory read, segmentation fault, and application crash).",
        "cve_id":"CVE-2017-15938",
        "project":"binutils",
        "hash":"5b3fd0aac2b70d860ba34f0e290d87773b09bd11",
        "test_info":"=================================================================\n==452303==ERROR: AddressSanitizer: SEGV on unknown address 0x4700004008d0 (pc 0x555555a69b8d bp 0x7fffffffd5f0 sp 0x7fffffffd590 T0)\n==452303==The signal is caused by a READ memory access.\n    #0 0x555555a69b8c in _bfd_safe_read_leb128 /home/skd/benchmark-setup/binutils/CVE-2017-15938/source/bfd/libbfd.c:1019\n    #1 0x555555c4f9ad in find_abstract_instance_name dwarf2.c:2911\n    #2 0x555555c517f5 in scan_unit_for_symbols dwarf2.c:3161\n    #3 0x555555c54dec in comp_unit_maybe_decode_line_info dwarf2.c:3651\n    #4 0x555555c54ea1 in comp_unit_find_line dwarf2.c:3677\n    #5 0x555555c5d6eb in _bfd_dwarf2_find_nearest_line dwarf2.c:4789\n    #6 0x555555b697e8 in _bfd_elf_find_line /home/skd/benchmark-setup/binutils/CVE-2017-15938/source/bfd/elf.c:8695\n    #7 0x555555a33ba1 in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-15938/source/binutils/nm.c:1003\n    #8 0x555555a344ed in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-15938/source/binutils/nm.c:1084\n    #9 0x555555a3568c in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-15938/source/binutils/nm.c:1200\n    #10 0x555555a361a2 in display_file /home/skd/benchmark-setup/binutils/CVE-2017-15938/source/binutils/nm.c:1318\n    #11 0x555555a38c42 in main /home/skd/benchmark-setup/binutils/CVE-2017-15938/source/binutils/nm.c:1792\n    #12 0x7ffff5b23c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x555555a2d879 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-15938/source/binutils/nm-new+0x62d879)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-14940":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout f5b358c8aa564c58b0a3201b82cc782124d80bb9"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -g\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"scan_unit_for_symbols in dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-14940",
        "project":"binutils",
        "hash":"f5b358c8aa564c58b0a3201b82cc782124d80bb9",
        "test_info":"=================================================================\n==452295==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5555555f9acb bp 0x7fffffffd940 sp 0x7fffffffd7f0 T0)\n==452295==The signal is caused by a READ memory access.\n==452295==Hint: address points to the zero page.\n    #0 0x5555555f9aca in scan_unit_for_symbols dwarf2.c:3213\n    #1 0x5555555fb8f0 in comp_unit_maybe_decode_line_info dwarf2.c:3617\n    #2 0x5555555fb97b in comp_unit_find_line dwarf2.c:3643\n    #3 0x5555556001a1 in _bfd_dwarf2_find_nearest_line dwarf2.c:4601\n    #4 0x5555555656ef in _bfd_elf_find_line /home/skd/benchmark-setup/binutils/CVE-2017-14940/source/bfd/elf.c:8694\n    #5 0x5555554a270b in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-14940/source/binutils/nm.c:1003\n    #6 0x5555554a2d88 in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-14940/source/binutils/nm.c:1084\n    #7 0x5555554a39e5 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-14940/source/binutils/nm.c:1200\n    #8 0x5555554a425c in display_file /home/skd/benchmark-setup/binutils/CVE-2017-14940/source/binutils/nm.c:1318\n    #9 0x5555554a5f08 in main /home/skd/benchmark-setup/binutils/CVE-2017-14940/source/binutils/nm.c:1792\n    #10 0x7ffff6844c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x55555549e6d9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-14940/source/binutils/nm-new+0x9e6d9)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-9040":{
        "file_name":"binutils/readelf.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 75ec1fdbb797a389e4fe4aaf2e15358a070dcc19"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address -fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./binutils/readelf -a ../VUL4C/exploit"
        ],
        "nvd_info":"GNU Binutils 2017-04-03 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash), related to the process_mips_specific function in readelf.c, via a crafted ELF file that triggers a large memory-allocation attempt.",
        "cve_id":"CVE-2017-9040",
        "project":"binutils",
        "hash":"75ec1fdbb797a389e4fe4aaf2e15358a070dcc19",
        "test_info":"==420183==WARNING: AddressSanitizer failed to allocate 0x40000000000070 bytes\n==420183==AddressSanitizer's allocator is terminating the process instead of returning 0\n==420183==If you don't like this behavior set allocator_may_return_null=1\n==420183==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/sanitizer_common/sanitizer_allocator.cc:218 \"((0)) != (0)\" (0x0, 0x0)\n    #0 0x7ffff6f01bf2  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe9bf2)\n    #1 0x7ffff6f20575 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x108575)\n    #2 0x7ffff6f07332  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xef332)\n    #3 0x7ffff6e3fe46  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x27e46)\n    #4 0x7ffff6ef6b0a in __interceptor_malloc (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb0a)\n    #5 0x55555562ab51 in xmalloc xmalloc.c:147\n    #6 0x55555561ddfe in cmalloc /home/skd/benchmark-setup/binutils/CVE-2017-9040/source/binutils/dwarf.c:8259\n    #7 0x5555555cd355 in process_mips_specific /home/skd/benchmark-setup/binutils/CVE-2017-9040/source/binutils/readelf.c:15352\n    #8 0x5555555d8e17 in process_arch_specific /home/skd/benchmark-setup/binutils/CVE-2017-9040/source/binutils/readelf.c:17427\n    #9 0x5555555d9e95 in process_object /home/skd/benchmark-setup/binutils/CVE-2017-9040/source/binutils/readelf.c:17650\n    #10 0x5555555db9d0 in process_file /home/skd/benchmark-setup/binutils/CVE-2017-9040/source/binutils/readelf.c:18033\n    #11 0x5555555dbda8 in main /home/skd/benchmark-setup/binutils/CVE-2017-9040/source/binutils/readelf.c:18105\n    #12 0x7ffff5d27c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x555555569489 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-9040/source/binutils/readelf+0x169489)",
        "commit_message":"Fix runtime seg-fault in readelf when parsing a corrupt MIPS binary.\n\nPR binutils/21344\n* readelf.c (process_mips_specific): Check for an out of range GOT\nentry before reading the module pointer."
    },
    "CVE-2017-15024":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -g\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"find_abstract_instance_name in dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, allows remote attackers to cause a denial of service (infinite recursion and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-15024",
        "project":"binutils",
        "hash":"8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1",
        "test_info":"=================================================================\n==452301==ERROR: AddressSanitizer: stack-overflow on address 0x7fffff7feff8 (pc 0x7ffff6ef6ade bp 0x7fffff7ff860 sp 0x7fffff7ff000 T0)\n    #0 0x7ffff6ef6add in __interceptor_malloc (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeadd)\n    #1 0x5555554c4a4f in bfd_malloc /home/skd/benchmark-setup/binutils/CVE-2017-15024/source/bfd/libbfd.c:193\n    #2 0x5555556ef614 in bfd_get_full_section_contents /home/skd/benchmark-setup/binutils/CVE-2017-15024/source/bfd/compress.c:248\n    #3 0x555555707fbc in bfd_simple_get_relocated_section_contents /home/skd/benchmark-setup/binutils/CVE-2017-15024/source/bfd/simple.c:193\n    #4 0x5555555eba51 in read_section dwarf2.c:556\n    #5 0x5555555ec5c3 in read_indirect_string dwarf2.c:730\n    #6 0x5555555ef083 in read_attribute_value dwarf2.c:1189\n    #7 0x5555555efd8d in read_attribute dwarf2.c:1306\n    #8 0x5555555f7f89 in find_abstract_instance_name dwarf2.c:2913\n    #9 0x5555555f8144 in find_abstract_instance_name dwarf2.c:2930\n    #10 0x5555555f8144 in find_abstract_instance_name dwarf2.c:2930\n    #11 0x5555555f8144 in find_abstract_instance_name dwarf2.c:2930\n    #12 0x5555555f8144 in find_abstract_instance_name dwarf2.c:2930\n    #13 0x5555555f8144 in find_abstract_instance_name dwarf2.c:2930",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-14745":{
        "file_name":"bfd/elf64-x86-64.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 7a31b38ef87d133d8204cae67a97f1989d25fa18"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address -fsanitize=undefined\" -j10",
            "cp binutils/objdump ../"
        ],
        "test_command":[
            "./binutils/objdump -D ../VUL4C/exploit"
        ],
        "nvd_info":"The *_get_synthetic_symtab functions in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, interpret a -1 value as a sorting count instead of an error flag, which allows remote attackers to cause a denial of service (integer overflow and application crash) or possibly have unspecified other impact via a crafted ELF file, related to elf32-i386.c and elf64-x86-64.c.",
        "cve_id":"CVE-2017-14745",
        "project":"binutils",
        "hash":"7a31b38ef87d133d8204cae67a97f1989d25fa18",
        "test_info":"=================================================================\n==420188==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555555d92843 bp 0x7fffffffd710 sp 0x7fffffffd6e0 T0)\n==420188==The signal is caused by a READ memory access.\n==420188==Hint: address points to the zero page.\n    #0 0x555555d92842 in compare_relocs /home/skd/benchmark-setup/binutils/CVE-2017-14745/source/bfd/elf64-x86-64.c:6632\n    #1 0x7ffff5b42a5f  (/lib/x86_64-linux-gnu/libc.so.6+0x40a5f)\n    #2 0x7ffff5b4453b in qsort_r (/lib/x86_64-linux-gnu/libc.so.6+0x4253b)\n    #3 0x555555d9304b in elf_x86_64_get_synthetic_symtab /home/skd/benchmark-setup/binutils/CVE-2017-14745/source/bfd/elf64-x86-64.c:6722\n    #4 0x555555c02499 in dump_bfd objdump.c:3525\n    #5 0x555555c028a1 in display_object_bfd objdump.c:3603\n    #6 0x555555c02ed2 in display_any_bfd objdump.c:3692\n    #7 0x555555c02f49 in display_file objdump.c:3713\n    #8 0x555555c0423c in main objdump.c:4015\n    #9 0x7ffff5b23c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555be6bf9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-14745/source/binutils/objdump+0x7e6bf9)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-15022":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -g\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, does not validate the DW_AT_name data type, which allows remote attackers to cause a denial of service (bfd_hash_hash NULL pointer dereference, or out-of-bounds access, and application crash) via a crafted ELF file, related to scan_unit_for_symbols and parse_comp_unit.",
        "cve_id":"CVE-2017-15022",
        "project":"binutils",
        "hash":"8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1",
        "test_info":"=================================================================\n==452298==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5555554c2827 bp 0x7fffffffd7e0 sp 0x7fffffffd7b0 T0)\n==452298==The signal is caused by a READ memory access.\n==452298==Hint: address points to the zero page.\n    #0 0x5555554c2826 in bfd_hash_hash /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/bfd/hash.c:441\n    #1 0x5555554c298d in bfd_hash_lookup /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/bfd/hash.c:467\n    #2 0x5555555eb706 in insert_info_hash_table dwarf2.c:487\n    #3 0x5555555fbed8 in comp_unit_hash_info dwarf2.c:3742\n    #4 0x5555555fd87c in stash_maybe_update_info_hash_tables dwarf2.c:4086\n    #5 0x5555555fdfb8 in stash_maybe_enable_info_hash_tables dwarf2.c:4180\n    #6 0x5555555fffe1 in _bfd_dwarf2_find_nearest_line dwarf2.c:4579\n    #7 0x555555565726 in _bfd_elf_find_line /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/bfd/elf.c:8694\n    #8 0x5555554a270b in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/binutils/nm.c:1003\n    #9 0x5555554a2d88 in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/binutils/nm.c:1084\n    #10 0x5555554a39e5 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/binutils/nm.c:1200\n    #11 0x5555554a425c in display_file /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/binutils/nm.c:1318\n    #12 0x5555554a5f08 in main /home/skd/benchmark-setup/binutils/CVE-2017-15022/source/binutils/nm.c:1792\n    #13 0x7ffff6844c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #14 0x55555549e6d9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-15022/source/binutils/nm-new+0x9e6d9)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-14729":{
        "file_name":"bfd/elfxx-x86.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout f5b358c8aa564c58b0a3201b82cc782124d80bb9"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "make CFLAGS=\"-ldl -lutil -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address -fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"The *_get_synthetic_symtab functions in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, do not ensure a unique PLT entry for a symbol, which allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted ELF file, related to elf32-i386.c and elf64-x86-64.c.",
        "cve_id":"CVE-2017-14729",
        "project":"binutils",
        "hash":"f5b358c8aa564c58b0a3201b82cc782124d80bb9",
        "test_info":"=================================================================\n==420187==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a000000574 at pc 0x7ffff6e9177a bp 0x7fffffffdb00 sp 0x7fffffffd2a8\nWRITE of size 6 at 0x61a000000574 thread T0\n    #0 0x7ffff6e91779  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79779)\n    #1 0x555555ae0b5a in _bfd_x86_elf_get_synthetic_symtab /home/skd/benchmark-setup/binutils/CVE-2017-14729/source/bfd/elfxx-x86.c:1946\n    #2 0x555555ac83e6 in elf_x86_64_get_synthetic_symtab /home/skd/benchmark-setup/binutils/CVE-2017-14729/source/bfd/elf64-x86-64.c:4963\n    #3 0x555555a34579 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-14729/source/binutils/nm.c:1155\n    #4 0x555555a35942 in display_file /home/skd/benchmark-setup/binutils/CVE-2017-14729/source/binutils/nm.c:1318\n    #5 0x555555a383e2 in main /home/skd/benchmark-setup/binutils/CVE-2017-14729/source/binutils/nm.c:1792\n    #6 0x7ffff5b23c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x555555a2d019 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-14729/source/binutils/nm-new+0x62d019)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-14939":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout f5b358c8aa564c58b0a3201b82cc782124d80bb9"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address -fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"decode_line_info in dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, mishandles a length calculation, which allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file, related to read_1_byte.",
        "cve_id":"CVE-2017-14939",
        "project":"binutils",
        "hash":"f5b358c8aa564c58b0a3201b82cc782124d80bb9",
        "test_info":"=================================================================\n==452294==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x613000000512 at pc 0x555555c3d8a1 bp 0x7fffffffd670 sp 0x7fffffffd660\nREAD of size 1 at 0x613000000512 thread T0\n    #0 0x555555c3d8a0 in read_1_byte dwarf2.c:616\n    #1 0x555555c4a48a in decode_line_info dwarf2.c:2311\n    #2 0x555555c547d4 in comp_unit_maybe_decode_line_info dwarf2.c:3608\n    #3 0x555555c54a44 in comp_unit_find_line dwarf2.c:3643\n    #4 0x555555c5d28e in _bfd_dwarf2_find_nearest_line dwarf2.c:4755\n    #5 0x555555b694b2 in _bfd_elf_find_line /home/skd/benchmark-setup/binutils/CVE-2017-14939/source/bfd/elf.c:8694\n    #6 0x555555a33911 in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-14939/source/binutils/nm.c:1003\n    #7 0x555555a3425d in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-14939/source/binutils/nm.c:1084\n    #8 0x555555a353fc in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-14939/source/binutils/nm.c:1200\n    #9 0x555555a35f12 in display_file /home/skd/benchmark-setup/binutils/CVE-2017-14939/source/binutils/nm.c:1318\n    #10 0x555555a389b2 in main /home/skd/benchmark-setup/binutils/CVE-2017-14939/source/binutils/nm.c:1792\n    #11 0x7ffff5b23c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #12 0x555555a2d5e9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-14939/source/binutils/nm-new+0x62d5e9)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2018-10372":{
        "file_name":"binutils/dwarf.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 68e91e42492551e165b103d819c021c4953da10b"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make -j10"
        ],
        "test_command":[
            "./binutils/readelf -w ../VUL4C/exploit"
        ],
        "nvd_info":"process_cu_tu_index in dwarf.c in GNU Binutils 2.30 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted binary file, as demonstrated by readelf.",
        "cve_id":"CVE-2018-10372",
        "project":"binutils",
        "hash":"68e91e42492551e165b103d819c021c4953da10b",
        "test_info":"=================================================================\n==119917==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x607000000298 at pc 0x5555556624ad bp 0x7fffffffdca0 sp 0x7fffffffdc90\nREAD of size 8 at 0x607000000298 thread T0\n    #0 0x5555556624ac in process_cu_tu_index /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/dwarf.c:9290\n    #1 0x555555663547 in load_cu_tu_indexes /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/dwarf.c:9411\n    #2 0x5555556635d0 in find_cu_tu_set /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/dwarf.c:9429\n    #3 0x5555555f7047 in display_debug_section /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/readelf.c:13703\n    #4 0x5555555f7946 in process_section_contents /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/readelf.c:13796\n    #5 0x55555561416a in process_object /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/readelf.c:18684\n    #6 0x555555616b58 in process_file /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/readelf.c:19104\n    #7 0x555555616ef9 in main /home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/readelf.c:19163\n    #8 0x7ffff5d27c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #9 0x55555558f489 in _start (/home/newBenchmark/Benchmark/benchmark/binutils/CVE-2018-10372/source/binutils/readelf+0x18f489)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-9042":{
        "file_name":"binutils/readelf.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout ef6a5ae7bd1dd7b528f5cf368d98056603003c35"
        ],
        "compile_command":[
            "./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=signed-integer-overflow -g\" CXXFLAGS=\"-fsanitize=signed-integer-overflow -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=signed-integer-overflow\" -j10"
        ],
        "test_command":[
            "./binutils/readelf -a ../VUL4C/exploit"
        ],
        "nvd_info":"readelf.c in GNU Binutils 2017-04-12 has a \"cannot be represented in type long\" issue, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted ELF file.",
        "cve_id":"CVE-2017-9042",
        "project":"binutils",
        "hash":"ef6a5ae7bd1dd7b528f5cf368d98056603003c35",
        "test_info":"readelf.c:9447:39: runtime error: signed integer overflow: 7443 - -9223372036854775080 cannot be represented in type 'long int'",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-15025":{
        "file_name":"bfd/dwarf2.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 515f23e63c0074ab531bc954f84ca40c6281a724"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fno-omit-frame-pointer -fsanitize=address -ggdb -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -ggdb\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -ggdb\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10",
            "cp binutils/nm-new ../"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"decode_line_info in dwarf2.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted ELF file.",
        "cve_id":"CVE-2017-15025",
        "project":"binutils",
        "hash":"515f23e63c0074ab531bc954f84ca40c6281a724",
        "test_info":"=================================================================\n==452302==ERROR: AddressSanitizer: FPE on unknown address 0x5555555f5809 (pc 0x5555555f5809 bp 0x7fffffffd940 sp 0x7fffffffd760 T0)\n    #0 0x5555555f5808 in decode_line_info dwarf2.c:2442\n    #1 0x5555555fb828 in comp_unit_maybe_decode_line_info dwarf2.c:3610\n    #2 0x5555555fb9b1 in comp_unit_find_line dwarf2.c:3645\n    #3 0x555555600e0b in _bfd_dwarf2_find_nearest_line dwarf2.c:4757\n    #4 0x555555565735 in _bfd_elf_find_line /home/skd/benchmark-setup/binutils/CVE-2017-15025/source/bfd/elf.c:8695\n    #5 0x5555554a270b in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-15025/source/binutils/nm.c:1003\n    #6 0x5555554a2d88 in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-15025/source/binutils/nm.c:1084\n    #7 0x5555554a39e5 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-15025/source/binutils/nm.c:1200\n    #8 0x5555554a425c in display_file /home/skd/benchmark-setup/binutils/CVE-2017-15025/source/binutils/nm.c:1318\n    #9 0x5555554a5f08 in main /home/skd/benchmark-setup/binutils/CVE-2017-15025/source/binutils/nm.c:1792\n    #10 0x7ffff6844c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x55555549e6d9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-15025/source/binutils/nm-new+0x9e6d9)",
        "commit_message":"PR22169, heap-based buffer overflow in read_1_byte\n\nThe .debug_line header length field doesn't include the length field\nitself, ie. it's the size of the rest of .debug_line.\n\nPR 22169\n* dwarf2.c (decode_line_info): Correct .debug_line unit_length check."
    },
    "CVE-2017-9038":{
        "file_name":"binutils/readelf.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 7fa393306ed8b93019d225548474c0540b8928f7"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address -fsanitize=undefined\" -j10"
        ],
        "test_command":[
            "./binutils/readelf -a ../VUL4C/exploit"
        ],
        "nvd_info":"GNU Binutils 2.28 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted ELF file, related to the byte_get_little_endian function in elfcomm.c, the get_unwind_section_word function in readelf.c, and ARM unwind information that contains invalid word offsets.",
        "cve_id":"CVE-2017-9038",
        "project":"binutils",
        "hash":"7fa393306ed8b93019d225548474c0540b8928f7",
        "test_info":"=================================================================\n==420178==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000039 at pc 0x55555560b45a bp 0x7fffffffdaa0 sp 0x7fffffffda90\nREAD of size 1 at 0x602000000039 thread T0\n    #0 0x55555560b459 in byte_get_little_endian /home/skd/benchmark-setup/binutils/CVE-2017-9038/source/binutils/elfcomm.c:210\n    #1 0x5555555c1da5 in process_mips_specific /home/skd/benchmark-setup/binutils/CVE-2017-9038/source/binutils/readelf.c:15190\n    #2 0x5555555ca335 in process_arch_specific /home/skd/benchmark-setup/binutils/CVE-2017-9038/source/binutils/readelf.c:16565\n    #3 0x5555555cb2a9 in process_object /home/skd/benchmark-setup/binutils/CVE-2017-9038/source/binutils/readelf.c:16770\n    #4 0x5555555ccd89 in process_file /home/skd/benchmark-setup/binutils/CVE-2017-9038/source/binutils/readelf.c:17138\n    #5 0x5555555cd159 in main /home/skd/benchmark-setup/binutils/CVE-2017-9038/source/binutils/readelf.c:17209\n    #6 0x7ffff5d27c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x55555555d3c9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-9038/source/binutils/readelf+0x15d3c9)",
        "commit_message":"Add generated files"
    },
    "CVE-2017-15020":{
        "file_name":"bfd/dwarf1.c",
        "get_command":[
            "git clone git://sourceware.org/git/binutils-gdb.git source",
            "cd source/",
            "git checkout 8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1"
        ],
        "compile_command":[
            "ASAN_OPTIONS=detect_leaks=0 CC=gcc CXX=g++ CFLAGS=\"-DFORTIFY_SOURCE=2 -fstack-protector-all -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -g -Wno-error\" CXXFLAGS=\"$CFLAGS\" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'",
            "ASAN_OPTIONS=detect_leaks=0 make CFLAGS=\"-ldl -lutil -fsanitize=address -g\" CXXFLAGS=\"-fsanitize=address -ldl -lutil -g\" LDFLAGS=\" -ldl -lutil -fsanitize=address\" -j10"
        ],
        "test_command":[
            "./binutils/nm-new -A -a -l -S -s --special-syms --synthetic --with-symbol-versions -D ../VUL4C/exploit"
        ],
        "nvd_info":"dwarf1.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29, mishandles pointers, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted ELF file, related to parse_die and parse_line_table, as demonstrated by a parse_die heap-based buffer over-read.",
        "cve_id":"CVE-2017-15020",
        "project":"binutils",
        "hash":"8d296e2d4d8ed6ffbe29bb8cc6548a3871de6ad1",
        "test_info":"=================================================================\n==452296==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6130000006d3 at pc 0x7ffff6e6966e bp 0x7fffffffda00 sp 0x7fffffffd1a8\nREAD of size 298 at 0x6130000006d3 thread T0\n    #0 0x7ffff6e6966d  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x5166d)\n    #1 0x5555555e9730 in parse_die /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/bfd/dwarf1.c:254\n    #2 0x5555555eaeb5 in _bfd_dwarf1_find_nearest_line /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/bfd/dwarf1.c:521\n    #3 0x555555565396 in _bfd_elf_find_nearest_line /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/bfd/elf.c:8658\n    #4 0x5555554a2804 in print_symbol /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/binutils/nm.c:1004\n    #5 0x5555554a2d88 in print_symbols /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/binutils/nm.c:1084\n    #6 0x5555554a39e5 in display_rel_file /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/binutils/nm.c:1200\n    #7 0x5555554a425c in display_file /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/binutils/nm.c:1318\n    #8 0x5555554a5f08 in main /home/skd/benchmark-setup/binutils/CVE-2017-15020/source/binutils/nm.c:1792\n    #9 0x7ffff6844c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x55555549e6d9 in _start (/home/skd/benchmark-setup/binutils/CVE-2017-15020/source/binutils/nm-new+0x9e6d9)",
        "commit_message":"Automatic date update in version.in"
    },
    "CVE-2017-6834":{
        "file_name":"libaudiofile/modules/MSADPCM.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"Heap-based buffer overflow in the ulaw2linear_buf function in G711.cpp in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0, 0.2.7 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6834",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==220871==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7ffff35ff800 at pc 0x7ffff7b56464 bp 0x7fffffffd940 sp 0x7fffffffd938\nWRITE of size 2 at 0x7ffff35ff800 thread T0\n    #0 0x7ffff7b56463 in ulaw2linear_buf(unsigned char const*, short*, int) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6834/source/libaudiofile/modules/G711.cpp:42:13\n    #1 0x7ffff7b5614e in G711::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6834/source/libaudiofile/modules/G711.cpp:206:3\n    #2 0x7ffff7b390a8 in afReadFrames /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6834/source/libaudiofile/data.cpp:222:14\n    #3 0x4c50b7 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6834/source/sfcommands/sfconvert.c:340:29\n    #4 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6834/source/sfcommands/sfconvert.c:248:17\n    #5 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #6 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6834/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6838":{
        "file_name":"sfcommands/sfconvert.c",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=gcc-5 CXX=g++-5 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=undefined -g\" LDFLAGS=\"-fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"Integer overflow in sfcommands/sfconvert.c in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6838",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"sfconvert.c:327:42: runtime error: signed integer overflow: 65536 * 252936 cannot be represented in type 'int'",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6828":{
        "file_name":"libaudiofile/WAVE.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout b62c902"
        ],
        "compile_command":[
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfinfo ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the readValue function in FileHandle.cpp in audiofile (aka libaudiofile and Audio File Library) 0.3.6 allows remote attackers to have unspecified impact via a crafted WAV file.",
        "cve_id":"CVE-2017-6828",
        "project":"audiofile",
        "hash":"b62c902dd258125cac86cd2df21fc898035a43d3",
        "test_info":"=================================================================\n==190358==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a000000508 at pc 0x00000043362b bp 0x7fffffffcdd0 sp 0x7fffffffc5a0\nWRITE of size 2 at 0x61a000000508 thread T0\n    #0 0x43362a in read (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/sfcommands/.libs/sfinfo+0x43362a)\n    #1 0x7ffff7af35a4 in FilePOSIX::read(void*, unsigned long) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/File.cpp:126:9\n    #2 0x7ffff7afab95 in bool readValue<short>(File*, short*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/FileHandle.cpp:353:12\n    #3 0x7ffff7af824f in bool readSwap<short>(File*, short*, int) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/FileHandle.cpp:375:7\n    #4 0x7ffff7af8217 in _AFfilehandle::readS16(short*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/FileHandle.cpp:397:9\n    #5 0x7ffff7b26b5b in WAVEFile::parseFormat(Tag const&, unsigned int) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/WAVE.cpp:289:5\n    #6 0x7ffff7b2c3ab in WAVEFile::readInit(_AFfilesetup*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/WAVE.cpp:733:13\n    #7 0x7ffff7b41a63 in _afOpenFile(int, File*, char const*, _AFfilehandle**, _AFfilesetup*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/openclose.cpp:355:15\n    #8 0x7ffff7b427ce in afOpenFile /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/libaudiofile/openclose.cpp:217:6\n    #9 0x4c39eb in printfileinfo /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/sfcommands/printinfo.c:45:22\n    #10 0x4c378b in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/sfcommands/sfinfo.c:113:4\n    #11 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #12 0x41b4f9 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6828/source/sfcommands/.libs/sfinfo+0x41b4f9)",
        "commit_message":"Fix undefined behavior in sign conversion."
    },
    "CVE-2017-6836":{
        "file_name":"libaudiofile/modules/MSADPCM.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10",
            "cd sfcommands",
            "clang -Wall -fsanitize=address -fno-omit-frame-pointer -g -fsanitize=address -o sfinfo sfinfo.o printinfo.o  ../libaudiofile/.libs/libaudiofile.so -Wl,-rpath -Wl,$dir/libaudiofile/.libs",
            "clang -Wall -fsanitize=address -fno-omit-frame-pointer -g -fsanitize=address -o sfconver sfconvert.o printinfo.o  ../libaudiofile/.libs/libaudiofile.so -Wl,-rpath -Wl,$dir/libaudiofile/.libs"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"Heap-based buffer overflow in the Expand3To4Module::run function in libaudiofile/modules/SimpleModule.h in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6836",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==231041==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7ffff7e8a800 at pc 0x7ffff7b63286 bp 0x7fffffffd930 sp 0x7fffffffd928\nWRITE of size 4 at 0x7ffff7e8a800 thread T0\n    #0 0x7ffff7b63285 in void Expand3To4Module::run<int>(unsigned char const*, int*, int) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6836/source/libaudiofile/modules/./SimpleModule.h:268:14\n    #1 0x7ffff7b63032 in Expand3To4Module::run(Chunk&, Chunk&) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6836/source/libaudiofile/modules/./SimpleModule.h:241:4\n    #2 0x7ffff7b7e1c6 in SimpleModule::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6836/source/libaudiofile/modules/SimpleModule.cpp:29:2\n    #3 0x7ffff7b390a8 in afReadFrames /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6836/source/libaudiofile/data.cpp:222:14\n    #4 0x4c50b7 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6836/source/sfcommands/sfconvert.c:340:29\n    #5 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6836/source/sfcommands/sfconvert.c:248:17\n    #6 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #7 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6836/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6832":{
        "file_name":"libaudiofile/WAVE.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"Heap-based buffer overflow in the decodeBlock in MSADPCM.cpp in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0, 0.2.7 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6832",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==210706==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62d00001c45a at pc 0x7ffff7b7576c bp 0x7fffffffd110 sp 0x7fffffffd108\nWRITE of size 2 at 0x62d00001c45a thread T0\n    #0 0x7ffff7b7576b in MSADPCM::decodeBlock(unsigned char const*, short*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/libaudiofile/modules/MSADPCM.cpp:222:14\n    #1 0x7ffff7b4cb6a in BlockCodec::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/libaudiofile/modules/BlockCodec.cpp:55:3\n    #2 0x7ffff7b5a9b7 in Module::pull(unsigned long) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/libaudiofile/modules/Module.cpp:71:12\n    #3 0x7ffff7b7bd61 in RebufferModule::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/libaudiofile/modules/RebufferModule.cpp:122:3\n    #4 0x7ffff7b390a8 in afReadFrames /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/libaudiofile/data.cpp:222:14\n    #5 0x4c50b7 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/sfcommands/sfconvert.c:340:29\n    #6 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/sfcommands/sfconvert.c:248:17\n    #7 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #8 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6832/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6830":{
        "file_name":"libaudiofile/modules/MSADPCM.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"Heap-based buffer overflow in the alaw2linear_buf function in G711.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6830",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==200540==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7ffff7e8a800 at pc 0x7ffff7b56564 bp 0x7fffffffd940 sp 0x7fffffffd938\nWRITE of size 2 at 0x7ffff7e8a800 thread T0\n    #0 0x7ffff7b56563 in alaw2linear_buf(unsigned char const*, short*, int) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6830/source/libaudiofile/modules/G711.cpp:54:13\n    #1 0x7ffff7b56200 in G711::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6830/source/libaudiofile/modules/G711.cpp:209:3\n    #2 0x7ffff7b390a8 in afReadFrames /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6830/source/libaudiofile/data.cpp:222:14\n    #3 0x4c50b7 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6830/source/sfcommands/sfconvert.c:340:29\n    #4 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6830/source/sfcommands/sfconvert.c:248:17\n    #5 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #6 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6830/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6839":{
        "file_name":"libaudiofile/modules/BlockCodec.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=gcc-5 CXX=g++-5 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=undefined -g\" CXXFLAGS=\"-fsanitize=undefined -g\" LDFLAGS=\"-fsanitize=undefined\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"Integer overflow in modules/MSADPCM.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6839",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"MSADPCM.cpp:115:27: runtime error: signed integer overflow: 4941081 * 512 cannot be represented in type 'int'",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6835":{
        "file_name":"libaudiofile/WAVE.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"The reset1 function in libaudiofile/modules/BlockCodec.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (divide-by-zero error and crash) via a crafted file.",
        "cve_id":"CVE-2017-6835",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==225955==ERROR: AddressSanitizer: FPE on unknown address 0x7ffff7b4cde0 (pc 0x7ffff7b4cde0 bp 0x7fffffffd810 sp 0x7fffffffd770 T0)\n    #0 0x7ffff7b4cde0 in BlockCodec::reset1() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6835/source/libaudiofile/modules/BlockCodec.cpp:74:40\n    #1 0x7ffff7b5e66e in ModuleState::reset(_AFfilehandle*, Track*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6835/source/libaudiofile/modules/ModuleState.cpp:218:9\n    #2 0x7ffff7b5c9f1 in ModuleState::setup(_AFfilehandle*, Track*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6835/source/libaudiofile/modules/ModuleState.cpp:190:7\n    #3 0x7ffff7b3ed14 in afGetFrameCount /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6835/source/libaudiofile/format.cpp:205:41\n    #4 0x4c5061 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6835/source/sfcommands/sfconvert.c:329:29\n    #5 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6835/source/sfcommands/sfconvert.c:248:17\n    #6 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #7 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6835/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6827":{
        "file_name":"libaudiofile/WAVE.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout b62c902"
        ],
        "compile_command":[
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfinfo ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the MSADPCM::initializeCoefficients function in MSADPCM.cpp in audiofile (aka libaudiofile and Audio File Library) 0.3.6 allows remote attackers to have unspecified impact via a crafted audio file.",
        "cve_id":"CVE-2017-6827",
        "project":"audiofile",
        "hash":"b62c902dd258125cac86cd2df21fc898035a43d3",
        "test_info":"=================================================================\n==153023==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a000000508 at pc 0x00000049308a bp 0x7fffffffd4d0 sp 0x7fffffffcc98\nREAD of size 33872 at 0x61a000000508 thread T0\n    #0 0x493089 in __asan_memcpy (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/sfcommands/.libs/sfinfo+0x493089)\n    #1 0x7ffff7b78d35 in MSADPCM::initializeCoefficients() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/libaudiofile/modules/MSADPCM.cpp:369:3\n    #2 0x7ffff7b78e62 in MSADPCM::createDecompress(Track*, File*, bool, bool, long*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/libaudiofile/modules/MSADPCM.cpp:387:16\n    #3 0x7ffff7b793a1 in _af_ms_adpcm_init_decompress(Track*, File*, bool, bool, long*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/libaudiofile/modules/MSADPCM.cpp:445:9\n    #4 0x7ffff7b5b973 in ModuleState::initFileModule(_AFfilehandle*, Track*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/libaudiofile/modules/ModuleState.cpp:72:18\n    #5 0x7ffff7b5bde4 in ModuleState::init(_AFfilehandle*, Track*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/libaudiofile/modules/ModuleState.cpp:98:6\n    #6 0x7ffff7b41f82 in _afOpenFile(int, File*, char const*, _AFfilehandle**, _AFfilesetup*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/libaudiofile/openclose.cpp:396:18\n    #7 0x7ffff7b427ce in afOpenFile /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/libaudiofile/openclose.cpp:217:6\n    #8 0x4c39eb in printfileinfo /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/sfcommands/printinfo.c:45:22\n    #9 0x4c378b in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/sfcommands/sfinfo.c:113:4\n    #10 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #11 0x41b4f9 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6827/source/sfcommands/.libs/sfinfo+0x41b4f9)",
        "commit_message":"Fix undefined behavior in sign conversion."
    },
    "CVE-2017-6831":{
        "file_name":"libaudiofile/WAVE.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"Heap-based buffer overflow in the decodeBlockWAVE function in IMA.cpp in Audio File Library (aka audiofile) 0.3.6, 0.3.5, 0.3.4, 0.3.3, 0.3.2, 0.3.1, 0.3.0 and 0.2.7 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6831",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==205620==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62f0000286e8 at pc 0x7ffff7b57a1d bp 0x7fffffffd320 sp 0x7fffffffd318\nWRITE of size 2 at 0x62f0000286e8 thread T0\n    #0 0x7ffff7b57a1c in IMA::decodeBlockWAVE(unsigned char const*, short*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/libaudiofile/modules/IMA.cpp:188:13\n    #1 0x7ffff7b570d7 in IMA::decodeBlock(unsigned char const*, short*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/libaudiofile/modules/IMA.cpp:110:10\n    #2 0x7ffff7b4cb6a in BlockCodec::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/libaudiofile/modules/BlockCodec.cpp:55:3\n    #3 0x7ffff7b5a9b7 in Module::pull(unsigned long) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/libaudiofile/modules/Module.cpp:71:12\n    #4 0x7ffff7b7bd61 in RebufferModule::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/libaudiofile/modules/RebufferModule.cpp:122:3\n    #5 0x7ffff7b390a8 in afReadFrames /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/libaudiofile/data.cpp:222:14\n    #6 0x4c50b7 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/sfcommands/sfconvert.c:340:29\n    #7 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/sfcommands/sfconvert.c:248:17\n    #8 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #9 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6831/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6829":{
        "file_name":"libaudiofile/modules/IMA.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"The decodeSample function in IMA.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.",
        "cve_id":"CVE-2017-6829",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==195447==ERROR: AddressSanitizer: global-buffer-overflow on address 0x7ffff7bb207a at pc 0x7ffff7b58337 bp 0x7fffffffd250 sp 0x7fffffffd248\nREAD of size 2 at 0x7ffff7bb207a thread T0\n    #0 0x7ffff7b58336 in decodeSample(adpcmState&, unsigned char) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/libaudiofile/modules/IMA.cpp:144:13\n    #1 0x7ffff7b57885 in IMA::decodeBlockWAVE(unsigned char const*, short*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/libaudiofile/modules/IMA.cpp:186:15\n    #2 0x7ffff7b570d7 in IMA::decodeBlock(unsigned char const*, short*) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/libaudiofile/modules/IMA.cpp:110:10\n    #3 0x7ffff7b4cb6a in BlockCodec::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/libaudiofile/modules/BlockCodec.cpp:55:3\n    #4 0x7ffff7b5a9b7 in Module::pull(unsigned long) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/libaudiofile/modules/Module.cpp:71:12\n    #5 0x7ffff7b7bd61 in RebufferModule::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/libaudiofile/modules/RebufferModule.cpp:122:3\n    #6 0x7ffff7b390a8 in afReadFrames /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/libaudiofile/data.cpp:222:14\n    #7 0x4c50b7 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/sfcommands/sfconvert.c:340:29\n    #8 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/sfcommands/sfconvert.c:248:17\n    #9 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #10 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6829/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-6833":{
        "file_name":"libaudiofile/WAVE.cpp",
        "get_command":[
            "git clone https://github.com/mpruett/audiofile.git source",
            "cd source",
            "git checkout d19a5ac"
        ],
        "compile_command":[
            "git checkout d19a5ac",
            "CC=clang-10 CXX=clang++-10 ./autogen.sh --disable-docs CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address\"",
            "make -j10"
        ],
        "test_command":[
            "./sfcommands/sfconvert ../VUL4C/exploit out.mp3 format aiff"
        ],
        "nvd_info":"The runPull function in libaudiofile/modules/BlockCodec.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (divide-by-zero error and crash) via a crafted file.",
        "cve_id":"CVE-2017-6833",
        "project":"audiofile",
        "hash":"d19a5ace5ae891c778cbc710d78634de6084b846",
        "test_info":"=================================================================\n==215789==ERROR: AddressSanitizer: FPE on unknown address 0x7ffff7b4c83e (pc 0x7ffff7b4c83e bp 0x7fffffffd690 sp 0x7fffffffd530 T0)\n    #0 0x7ffff7b4c83e in BlockCodec::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6833/source/libaudiofile/modules/BlockCodec.cpp:50:46\n    #1 0x7ffff7b5a9b7 in Module::pull(unsigned long) /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6833/source/libaudiofile/modules/Module.cpp:71:12\n    #2 0x7ffff7b7bd61 in RebufferModule::runPull() /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6833/source/libaudiofile/modules/RebufferModule.cpp:122:3\n    #3 0x7ffff7b390a8 in afReadFrames /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6833/source/libaudiofile/data.cpp:222:14\n    #4 0x4c50b7 in copyaudiodata /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6833/source/sfcommands/sfconvert.c:340:29\n    #5 0x4c4c04 in main /home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6833/source/sfcommands/sfconvert.c:248:17\n    #6 0x7ffff6b07c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #7 0x41b889 in _start (/home/newBenchmark/Benchmark/benchmark/audiofile/CVE-2017-6833/source/sfcommands/.libs/sfconvert+0x41b889)",
        "commit_message":"Release version 0.3.6 of the Audio File Library."
    },
    "CVE-2017-8365":{
        "file_name":"src/sndfile.c",
        "get_command":[
            "git clone https://github.com/libsndfile/libsndfile.git source",
            "cd source",
            "git checkout 1d928bf"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --enable-gcc-werror --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./programs/sndfile-convert ../VUL4C/exploit out.tmp"
        ],
        "nvd_info":"The i2les_array function in pcm.c in libsndfile 1.0.28 allows remote attackers to cause a denial of service (buffer over-read and application crash) via a crafted audio file.",
        "cve_id":"CVE-2017-8365",
        "project":"libsndfile",
        "hash":"1d928bffdb65e827c3e7d17ece0e123b4a70ec6c",
        "test_info":"=================================================================\n==407922==ERROR: AddressSanitizer: global-buffer-overflow on address 0x5555557c1bfc at pc 0x55555550224a bp 0x7fffffffbfd0 sp 0x7fffffffbfc0\nREAD of size 4 at 0x5555557c1bfc thread T0\n    #0 0x555555502249 in i2let_array /home/skd/benchmark-setup/libsndfile/CVE-2017-8365/source/src/pcm.c:683\n    #1 0x55555550801a in pcm_write_i2let /home/skd/benchmark-setup/libsndfile/CVE-2017-8365/source/src/pcm.c:1740\n    #2 0x55555543f509 in sf_writef_int /home/skd/benchmark-setup/libsndfile/CVE-2017-8365/source/src/sndfile.c:2342\n    #3 0x55555542f7e2 in sfe_copy_data_int /home/skd/benchmark-setup/libsndfile/CVE-2017-8365/source/programs/common.c:88\n    #4 0x55555542f1f7 in main /home/skd/benchmark-setup/libsndfile/CVE-2017-8365/source/programs/sndfile-convert.c:340\n    #5 0x7ffff5d56c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x55555542dc59 in _start (/home/skd/benchmark-setup/libsndfile/CVE-2017-8365/source/programs/sndfile-convert+0x2dc59)",
        "commit_message":"Version 1.0.28"
    },
    "CVE-2017-8363":{
        "file_name":"src/flac.c",
        "get_command":[
            "git clone https://github.com/libsndfile/libsndfile.git source",
            "cd source",
            "git checkout 1d928bf"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --enable-gcc-werror --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./programs/sndfile-convert ../VUL4C/exploit out.wav"
        ],
        "nvd_info":"The flac_buffer_copy function in flac.c in libsndfile 1.0.28 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted audio file.",
        "cve_id":"CVE-2017-8363",
        "project":"libsndfile",
        "hash":"1d928bffdb65e827c3e7d17ece0e123b4a70ec6c",
        "test_info":"=================================================================\n==407921==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x621000001110 at pc 0x555555464fa7 bp 0x7fffffffde80 sp 0x7fffffffde70\nREAD of size 4 at 0x621000001110 thread T0\n    #0 0x555555464fa6 in flac_buffer_copy /home/skd/benchmark-setup/libsndfile/CVE-2017-8363/source/src/flac.c:267\n    #1 0x5555554690a3 in flac_read_loop /home/skd/benchmark-setup/libsndfile/CVE-2017-8363/source/src/flac.c:928\n    #2 0x5555554694f3 in flac_read_flac2i /home/skd/benchmark-setup/libsndfile/CVE-2017-8363/source/src/flac.c:979\n    #3 0x55555543aba1 in sf_readf_int /home/skd/benchmark-setup/libsndfile/CVE-2017-8363/source/src/sndfile.c:1835\n    #4 0x55555542f7c6 in sfe_copy_data_int /home/skd/benchmark-setup/libsndfile/CVE-2017-8363/source/programs/common.c:87\n    #5 0x55555542f1f7 in main /home/skd/benchmark-setup/libsndfile/CVE-2017-8363/source/programs/sndfile-convert.c:340\n    #6 0x7ffff5d56c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x55555542dc59 in _start (/home/skd/benchmark-setup/libsndfile/CVE-2017-8363/source/programs/sndfile-convert+0x2dc59)",
        "commit_message":"Version 1.0.28"
    },
    "CVE-2017-8361":{
        "file_name":"src/sndfile.c",
        "get_command":[
            "git clone https://github.com/libsndfile/libsndfile.git source",
            "cd source",
            "git checkout 1d928bf"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --enable-gcc-werror --disable-shared",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./programs/sndfile-convert ../VUL4C/exploit out.wav"
        ],
        "nvd_info":"The flac_buffer_copy function in flac.c in libsndfile 1.0.28 allows remote attackers to cause a denial of service (buffer overflow and application crash) or possibly have unspecified other impact via a crafted audio file.",
        "cve_id":"CVE-2017-8361",
        "project":"libsndfile",
        "hash":"1d928bffdb65e827c3e7d17ece0e123b4a70ec6c",
        "test_info":"=================================================================\n==407920==ERROR: AddressSanitizer: global-buffer-overflow on address 0x5555557c1ba0 at pc 0x555555465014 bp 0x7fffffffdcf0 sp 0x7fffffffdce0\nWRITE of size 4 at 0x5555557c1ba0 thread T0\n    #0 0x555555465013 in flac_buffer_copy /home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/src/flac.c:267\n    #1 0x555555465fd1 in sf_flac_write_callback /home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/src/flac.c:390\n    #2 0x7ffff6bee80e  (/usr/lib/x86_64-linux-gnu/libFLAC.so.8+0x4d80e)\n    #3 0x7ffff6bf1d1c in FLAC__stream_decoder_process_single (/usr/lib/x86_64-linux-gnu/libFLAC.so.8+0x50d1c)\n    #4 0x5555554690d8 in flac_read_loop /home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/src/flac.c:932\n    #5 0x5555554694f3 in flac_read_flac2i /home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/src/flac.c:979\n    #6 0x55555543aba1 in sf_readf_int /home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/src/sndfile.c:1835\n    #7 0x55555542f7c6 in sfe_copy_data_int /home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/programs/common.c:87\n    #8 0x55555542f1f7 in main /home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/programs/sndfile-convert.c:340\n    #9 0x7ffff5d56c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x55555542dc59 in _start (/home/skd/benchmark-setup/libsndfile/CVE-2017-8361/source/programs/sndfile-convert+0x2dc59)",
        "commit_message":"Version 1.0.28"
    },
    "CVE-2018-19664":{
        "file_name":"wrbmp.c",
        "get_command":[
            "git clone https://github.com/libjpeg-turbo/libjpeg-turbo.git source",
            "cd source/",
            "git checkout beefb62"
        ],
        "compile_command":[
            "export CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -g\"",
            "export CFLAGS=\"-fsanitize=address -fsanitize=undefined -g\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10",
            "cp ./djpeg ../"
        ],
        "test_command":[
            "./djpeg -colors 256 -bmp ../VUL4C/exploit"
        ],
        "nvd_info":"libjpeg-turbo 2.0.1 has a heap-based buffer over-read in the put_pixel_rows function in wrbmp.c, as demonstrated by djpeg.",
        "cve_id":"CVE-2018-19664",
        "project":"libjpeg",
        "hash":"beefb62a6fbd0f98abc7dcde1e5638463b179687",
        "test_info":"=================================================================\n==407933==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6100000000f7 at pc 0x55555543acc1 bp 0x7fffffffdcb0 sp 0x7fffffffdca0\nREAD of size 1 at 0x6100000000f7 thread T0\n    #0 0x55555543acc0 in put_pixel_rows /home/skd/benchmark-setup/libjpeg/CVE-2018-19664/source/wrbmp.c:145\n    #1 0x55555542d097 in main /home/skd/benchmark-setup/libjpeg/CVE-2018-19664/source/djpeg.c:762\n    #2 0x7ffff52fec86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #3 0x555555427f69 in _start (/home/skd/benchmark-setup/libjpeg/CVE-2018-19664/source/djpeg+0x27f69)",
        "commit_message":"wrbmp.c: Use IsExtRGB() macro where appropriate\n\n(to improve readability)"
    },
    "CVE-2012-2806":{
        "file_name":"jdmarker.c",
        "get_command":[
            "git clone https://github.com/libjpeg-turbo/libjpeg-turbo.git source",
            "cd source/",
            "git checkout 4f24016"
        ],
        "compile_command":[
            "autoreconf -fiv",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10",
            "cp ./djpeg ../"
        ],
        "test_command":[
            "./djpeg ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the get_sos function in jdmarker.c in libjpeg-turbo 1.2.0 allows remote attackers to cause a denial of service (application crash) and possibly execute arbitrary code via a large component count in the header of a JPEG image.",
        "cve_id":"CVE-2012-2806",
        "project":"libjpeg",
        "hash":"4f24016bde11aa4282900ff071a6c8481027e063",
        "test_info":"jdmarker.c:327:25: runtime error: index 4 out of bounds for type 'jpeg_component_info *[4]'\n=================================================================\n==407930==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffe258 at pc 0x5555555610fe bp 0x7fffffffdd30 sp 0x7fffffffdd20\nWRITE of size 8 at 0x7fffffffe258 thread T0\n    #0 0x5555555610fd in get_sos /home/skd/benchmark-setup/libjpeg/CVE-2012-2806/source/jdmarker.c:327\n    #1 0x555555570509 in read_markers /home/skd/benchmark-setup/libjpeg/CVE-2012-2806/source/jdmarker.c:1016\n    #2 0x55555555c350 in consume_markers /home/skd/benchmark-setup/libjpeg/CVE-2012-2806/source/jdinput.c:386\n    #3 0x55555555297d in jpeg_consume_input /home/skd/benchmark-setup/libjpeg/CVE-2012-2806/source/jdapimin.c:301\n    #4 0x55555555250a in jpeg_read_header /home/skd/benchmark-setup/libjpeg/CVE-2012-2806/source/jdapimin.c:249\n    #5 0x555555536f0c in main /home/skd/benchmark-setup/libjpeg/CVE-2012-2806/source/djpeg.c:542\n    #6 0x7ffff5d27c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #7 0x555555533649 in _start (/home/skd/benchmark-setup/libjpeg/CVE-2012-2806/source/djpeg+0x133649)",
        "commit_message":"Preserve all 128 bits of xmm6 and xmm7\n\n\ngit-svn-id: svn+ssh://svn.code.sf.net/p/libjpeg-turbo/code/branches/1.2.x@829 632fc199-4ca6-4c93-a231-07263d6284db"
    },
    "CVE-2018-14498":{
        "file_name":"rdbmp.c",
        "get_command":[
            "git clone https://github.com/libjpeg-turbo/libjpeg-turbo.git source",
            "cd source/",
            "git checkout f4b8a5cf03943b4b2915ae9e9cc100cffbc261e1"
        ],
        "compile_command":[
            "export CXXFLAGS=\"-fsanitize=address -fsanitize=undefined -g\"",
            "export CFLAGS=\"-fsanitize=address -fsanitize=undefined -g\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./cjpeg -outfile /tmp/null ../VUL4C/exploit"
        ],
        "nvd_info":"get_8bit_row in rdbmp.c in libjpeg-turbo through 1.5.90 and MozJPEG through 3.3.1 allows attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted 8-bit BMP in which one or more of the color indices is out of range for the number of palette entries.",
        "cve_id":"CVE-2018-14498",
        "project":"libjpeg",
        "hash":"f4b8a5cf03943b4b2915ae9e9cc100cffbc261e1",
        "test_info":"=================================================================\n==407932==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x611000000150 at pc 0x55555544b783 bp 0x7fffffffdd10 sp 0x7fffffffdd00\nREAD of size 1 at 0x611000000150 thread T0\n    #0 0x55555544b782 in get_8bit_row /home/skd/benchmark-setup/libjpeg/CVE-2018-14498/source/rdbmp.c:209\n    #1 0x55555544f7d7 in preload_image /home/skd/benchmark-setup/libjpeg/CVE-2018-14498/source/rdbmp.c:405\n    #2 0x5555554371fc in main /home/skd/benchmark-setup/libjpeg/CVE-2018-14498/source/cjpeg.c:664\n    #3 0x7ffff52ffc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #4 0x555555433aa9 in _start (/home/skd/benchmark-setup/libjpeg/CVE-2018-14498/source/cjpeg+0x33aa9)",
        "commit_message":"BUILDING.md: Correct iOS/Android examples\n\ntoolchain.cmake should be created in the build directory, so the scripts\nneed to cd to that directory before generating that file.\n\nCloses #254"
    },
    "CVE-2017-15232":{
        "file_name":"jquant1.c",
        "get_command":[
            "git clone https://github.com/libjpeg-turbo/libjpeg-turbo.git source",
            "cd source/",
            "git checkout 3212005"
        ],
        "compile_command":[
            "autoreconf -fiv",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" -j10",
            "cp ./djpeg ../"
        ],
        "test_command":[
            "./djpeg -crop 1x1+16+16 -onepass -dither ordered -dct float -colors 8 -targa -grayscale -outfile out.tmp ../VUL4C/exploit"
        ],
        "nvd_info":"libjpeg-turbo 1.5.2 has a NULL Pointer Dereference in jdpostct.c and jquant1.c via a crafted JPEG file.",
        "cve_id":"CVE-2017-15232",
        "project":"libjpeg",
        "hash":"32120054c224d1911ebe33dc664c0f730a7782b2",
        "test_info":"jquant1.c:536:5: runtime error: load of null pointer of type 'JSAMPLE *'\nASAN:DEADLYSIGNAL\n=================================================================\n==407931==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5555556341c3 bp 0x7fffffffdab0 sp 0x7fffffffda20 T0)\n==407931==The signal is caused by a READ memory access.\n==407931==Hint: address points to the zero page.\n    #0 0x5555556341c2 in quantize_ord_dither /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/jquant1.c:536\n    #1 0x55555562840b in post_process_1pass /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/jdpostct.c:145\n    #2 0x555555693db0 in process_data_simple_main /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/jdmainct.c:311\n    #3 0x5555555ce039 in jpeg_read_scanlines /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/jdapistd.c:282\n    #4 0x5555555ce2de in read_and_discard_scanlines /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/jdapistd.c:316\n    #5 0x5555555ce670 in increment_simple_rowgroup_ctr /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/jdapistd.c:342\n    #6 0x5555555d05c7 in jpeg_skip_scanlines /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/jdapistd.c:504\n    #7 0x5555555abc43 in main /home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/djpeg.c:729\n    #8 0x7ffff5d27c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #9 0x5555555a6ec9 in _start (/home/skd/benchmark-setup/libjpeg/CVE-2017-15232/source/djpeg+0x1a6ec9)",
        "commit_message":"Java: Fix NullPointerException in YUVImage\n\nplanes == null is a valid argument to setBuf() if alloc == true, so we\nneed to make sure that planes is non-null before validating its length.\nWe also need to allocate one dimension of the planes array if it's null.\n\nFixes #168"
    },
    "CVE-2017-9208":{
        "file_name":"libqpdf/QPDF.cc",
        "get_command":[
            "git clone https://github.com/qpdf/qpdf.git source",
            "cd source",
            "git checkout b7302a9"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --enable-shared=no",
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./qpdf/build/qpdf ../VUL4C/exploit -"
        ],
        "nvd_info":"libqpdf.a in QPDF 6.0.0 allows remote attackers to cause a denial of service (infinite recursion and stack consumption) via a crafted PDF document, related to releaseResolved functions, aka qpdf-infiniteloop1.",
        "cve_id":"CVE-2017-9208",
        "project":"qpdf",
        "hash":"b7302a9b727d28d59bff0f0f7d8d62ff6486aef6",
        "test_info":"=================================================================\n==29657==ERROR: AddressSanitizer: stack-overflow on address 0x7fffff7feff8 (pc 0x5555554360e4 bp 0x7fffff7ff000 sp 0x7fffff7ff000 T0)\n    #0 0x5555554360e3 in std::vector<QPDFObjectHandle, std::allocator<QPDFObjectHandle> >::begin() /usr/include/c++/7/bits/stl_vector.h:563\n    #1 0x555555500dee in QPDF_Array::releaseResolved() libqpdf/QPDF_Array.cc:16\n    #2 0x55555546faa7 in QPDFObject::ObjAccessor::releaseResolved(QPDFObject*) include/qpdf/QPDFObject.hh:67\n    #3 0x55555549ce5a in QPDFObjectHandle::releaseResolved() libqpdf/QPDFObjectHandle.cc:80\n    #4 0x555555501d96 in QPDFObjectHandle::ReleaseResolver::releaseResolved(QPDFObjectHandle&) include/qpdf/QPDFObjectHandle.hh:554\n    #5 0x555555504b45 in QPDF_Dictionary::releaseResolved() libqpdf/QPDF_Dictionary.cc:23\n    #6 0x55555546faa7 in QPDFObject::ObjAccessor::releaseResolved(QPDFObject*) include/qpdf/QPDFObject.hh:67\n    #7 0x55555549ce5a in QPDFObjectHandle::releaseResolved() libqpdf/QPDFObjectHandle.cc:80",
        "commit_message":"Prepare 6.0.0 release"
    },
    "CVE-2017-9210":{
        "file_name":"libqpdf/QPDFObjectHandle.cc",
        "get_command":[
            "git clone https://github.com/qpdf/qpdf.git source",
            "cd source",
            "git checkout b7302a9"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --enable-shared=no",
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./qpdf/build/qpdf ../VUL4C/exploit -"
        ],
        "nvd_info":"libqpdf.a in QPDF 6.0.0 allows remote attackers to cause a denial of service (infinite recursion and stack consumption) via a crafted PDF document, related to unparse functions, aka qpdf-infiniteloop3.",
        "cve_id":"CVE-2017-9210",
        "project":"qpdf",
        "hash":"b7302a9b727d28d59bff0f0f7d8d62ff6486aef6",
        "test_info":"=================================================================\n==61669==ERROR: AddressSanitizer: stack-overflow on address 0x7fffff7fecc8 (pc 0x7ffff6e71e6f bp 0x7fffff7ff530 sp 0x7fffff7fec90 T0)\n    #0 0x7ffff6e71e6e  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x59e6e)\n    #1 0x7ffff669479f in __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x9479f)\n    #2 0x7ffff6691465 in __dynamic_cast (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x91465)\n    #3 0x7ffff6705d4f in bool std::has_facet<std::ctype<char> >(std::locale const&) (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x105d4f)\n    #4 0x7ffff66f8ab3 in std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&) (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0xf8ab3)\n    #5 0x7ffff66f8f1f in std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*) (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0xf8f1f)\n    #6 0x7ffff671ae95 in std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream(std::_Ios_Openmode) (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x11ae95)\n    #7 0x555555580f97 in QUtil::int_to_string_base[abi:cxx11](long long, int, int) libqpdf/QUtil.cc:47\n    #8 0x555555580e2b in QUtil::int_to_string[abi:cxx11](long long, int) libqpdf/QUtil.cc:32\n    #9 0x55555550889a in QPDF_Integer::unparse[abi:cxx11]() libqpdf/QPDF_Integer.cc:17\n    #10 0x5555554a233f in QPDFObjectHandle::unparseResolved[abi:cxx11]() libqpdf/QPDFObjectHandle.cc:699",
        "commit_message":"Prepare 6.0.0 release"
    },
    "CVE-2017-9209":{
        "file_name":"libqpdf/QPDF.cc",
        "get_command":[
            "git clone https://github.com/qpdf/qpdf.git source",
            "cd source",
            "git checkout b7302a9"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --enable-shared=no",
            "make CFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\" -j10"
        ],
        "test_command":[
            "./qpdf/build/qpdf ../VUL4C/exploit -"
        ],
        "nvd_info":"libqpdf.a in QPDF 6.0.0 allows remote attackers to cause a denial of service (infinite recursion and stack consumption) via a crafted PDF document, related to QPDFObjectHandle::parseInternal, aka qpdf-infiniteloop2.",
        "cve_id":"CVE-2017-9209",
        "project":"qpdf",
        "hash":"b7302a9b727d28d59bff0f0f7d8d62ff6486aef6",
        "test_info":"=================================================================\n==61668==ERROR: AddressSanitizer: stack-overflow on address 0x7fffff7fefe8 (pc 0x7ffff6ef66fe bp 0x7fffff7ff830 sp 0x7fffff7fefd0 T0)\n    #0 0x7ffff6ef66fd in __interceptor_free (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xde6fd)\n    #1 0x7ffff5ce6e19 in _IO_free_backup_area (/lib/x86_64-linux-gnu/libc.so.6+0x8de19)\n    #2 0x7ffff5ce3d18 in _IO_file_seekoff (/lib/x86_64-linux-gnu/libc.so.6+0x8ad18)\n    #3 0x7ffff5ce1d78 in fseeko (/lib/x86_64-linux-gnu/libc.so.6+0x88d78)\n    #4 0x5555555820d2 in QUtil::seek(_IO_FILE*, long long, int) libqpdf/QUtil.cc:163\n    #5 0x555555587595 in FileInputSource::seek(long long, int) libqpdf/FileInputSource.cc:108\n    #6 0x555555587183 in FileInputSource::findAndSkipNextEOL() libqpdf/FileInputSource.cc:73\n    #7 0x55555558cd63 in OffsetInputSource::findAndSkipNextEOL() libqpdf/OffsetInputSource.cc:17\n    #8 0x555555588c41 in InputSource::readLine[abi:cxx11](unsigned long) libqpdf/InputSource.cc:33",
        "commit_message":"Prepare 6.0.0 release"
    },
    "CVE-2016-5844":{
        "file_name":"libarchive/archive_read_support_format_iso9660.c",
        "get_command":[
            "git clone https://github.com/libarchive/libarchive.git source",
            "cd source/",
            "git checkout 167e97b"
        ],
        "compile_command":[
            "./build/autogen.sh",
            "CC=clang CXX=clang++ ./configure --without-openssl",
            "make CFLAGS=\"-Wno-error -fsanitize=address -fsanitize=signed-integer-overflow -static -ggdb\" CXXFLAGS=\"-Wno-error -fsanitize=address -fsanitize=signed-integer-overflow -static -ggdb\" LDFLAGS=\"-Wno-error -fsanitize=address -fsanitize=signed-integer-overflow\" -j10"
        ],
        "test_command":[
            "./bsdtar -tf ../VUL4C/exploit"
        ],
        "nvd_info":"Integer overflow in the ISO parser in libarchive before 3.2.1 allows remote attackers to cause a denial of service (application crash) via a crafted ISO file.",
        "cve_id":"CVE-2016-5844",
        "project":"libarchive",
        "hash":"167e97be1d35c1e0947d768adbf94712244aad6b",
        "test_info":"libarchive/archive_read_support_format_iso9660.c:1094:32: runtime error: signed integer overflow: 8388631 * 2048 cannot be represented in type 'int'",
        "commit_message":"Libarchive 3.2.0"
    },
    "CVE-2016-10350":{
        "file_name":"libarchive/archive_read_support_format_cab.c",
        "get_command":[
            "git clone https://github.com/libarchive/libarchive.git source",
            "cd source/",
            "git checkout 2d2b3e9"
        ],
        "compile_command":[
            "cd build",
            "./autogen.sh",
            "cd ../",
            "CC=gcc-5 CXX=g++-5 ./configure --without-openssl",
            "make CFLAGS=\"-fsanitize=address -static -ggdb -Wno-error\" CXXFLAGS=\"-fsanitize=address -static -ggdb -Wno-error\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./bsdtar -tf ../VUL4C/exploit"
        ],
        "nvd_info":"The archive_read_format_cab_read_header function in archive_read_support_format_cab.c in libarchive 3.2.2 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted file.",
        "cve_id":"CVE-2016-10350",
        "project":"libarchive",
        "hash":"2d2b3e928605f795515b03f060fd638c265b0778",
        "test_info":"=================================================================\n==1286446==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61500000fa01 at pc 0x5555554856ad bp 0x7fffffffdc20 sp 0x7fffffffdc10\nREAD of size 1 at 0x61500000fa01 thread T0\n    #0 0x5555554856ac in archive_le16dec libarchive/archive_endian.h:108\n    #1 0x555555486ed7 in cab_read_header libarchive/archive_read_support_format_cab.c:672\n    #2 0x555555488b47 in archive_read_format_cab_read_header libarchive/archive_read_support_format_cab.c:903\n    #3 0x55555545e4df in _archive_read_next_header2 libarchive/archive_read.c:649\n    #4 0x55555545e7ae in _archive_read_next_header libarchive/archive_read.c:687\n    #5 0x555555509c4a in archive_read_next_header libarchive/archive_virtual.c:148\n    #6 0x55555543aba2 in read_archive tar/read.c:261\n    #7 0x555555439c98 in tar_mode_t tar/read.c:94\n    #8 0x5555554370db in main tar/bsdtar.c:803\n    #9 0x7ffff6655c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x5555554337d9 in _start (/home/newBenchmark/Benchmark/benchmark/libarchive/CVE-2016-10350/source/bsdtar+0x337d9)",
        "commit_message":"Restore compatibility with Perl Archive::Tar that was broken with #825"
    },
    "CVE-2016-10349":{
        "file_name":"libarchive/archive_read_support_format_cab.c",
        "get_command":[
            "git clone https://github.com/libarchive/libarchive.git source",
            "cd source/",
            "git checkout 2d2b3e9"
        ],
        "compile_command":[
            "cd build",
            "./autogen.sh",
            "cd ../",
            "CC=gcc-5 CXX=g++-5 ./configure --without-openssl",
            "make CFLAGS=\"-fsanitize=address -static -ggdb -Wno-error\" CXXFLAGS=\"-fsanitize=address -static -ggdb -Wno-error\" LDFLAGS=\"-fsanitize=address\" -j10"
        ],
        "test_command":[
            "./bsdtar -tf ../VUL4C/exploit"
        ],
        "nvd_info":"The archive_le32dec function in archive_endian.h in libarchive 3.2.2 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted file.",
        "cve_id":"CVE-2016-10349",
        "project":"libarchive",
        "hash":"2d2b3e928605f795515b03f060fd638c265b0778",
        "test_info":"=================================================================\n==1286439==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61500000fa05 at pc 0x555555485756 bp 0x7fffffffdc10 sp 0x7fffffffdc00\nREAD of size 1 at 0x61500000fa05 thread T0\n    #0 0x555555485755 in archive_le32dec libarchive/archive_endian.h:122\n    #1 0x555555486d61 in cab_read_header libarchive/archive_read_support_format_cab.c:669\n    #2 0x555555488b47 in archive_read_format_cab_read_header libarchive/archive_read_support_format_cab.c:903\n    #3 0x55555545e4df in _archive_read_next_header2 libarchive/archive_read.c:649\n    #4 0x55555545e7ae in _archive_read_next_header libarchive/archive_read.c:687\n    #5 0x555555509c4a in archive_read_next_header libarchive/archive_virtual.c:148\n    #6 0x55555543aba2 in read_archive tar/read.c:261\n    #7 0x555555439c98 in tar_mode_t tar/read.c:94\n    #8 0x5555554370db in main tar/bsdtar.c:803\n    #9 0x7ffff6655c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x5555554337d9 in _start (/home/newBenchmark/Benchmark/benchmark/libarchive/CVE-2016-10349/source/bsdtar+0x337d9)",
        "commit_message":"Restore compatibility with Perl Archive::Tar that was broken with #825"
    },
    "CVE-2017-14039":{
        "file_name":"src/lib/openjp2/t2.c",
        "get_command":[
            "git clone https://github.com/uclouvain/openjpeg.git source",
            "cd source",
            "git checkout 9624b2fa4722edf77fbac631e7dacaae12c91672"
        ],
        "compile_command":[
            "export LDFLAGS=\"-fsanitize=address -g\"",
            "export CXXFLAGS=\"-fsanitize=address -g\"",
            "export CFLAGS=\"-fsanitize=address -g\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./bin/opj_compress -r 20,10,1 -jpip -EPH -SOP -cinema2K 24 -n 1 -i ../VUL4C/exploit -o null.j2k"
        ],
        "nvd_info":"A heap-based buffer overflow was discovered in the opj_t2_encode_packet function in lib/openjp2/t2.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service or possibly unspecified other impact.",
        "cve_id":"CVE-2017-14039",
        "project":"openjpeg",
        "hash":"9624b2fa4722edf77fbac631e7dacaae12c91672",
        "test_info":"=================================================================\n==792743==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6080000000f4 at pc 0x7ffff68b596e bp 0x7fffffff8010 sp 0x7fffffff8000\nWRITE of size 1 at 0x6080000000f4 thread T0\n    #0 0x7ffff68b596d in opj_t2_encode_packet /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/t2.c:632\n    #1 0x7ffff68b30c5 in opj_t2_encode_packets /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/t2.c:316\n    #2 0x7ffff68d806a in opj_tcd_t2_encode /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/tcd.c:2217\n    #3 0x7ffff68cfee9 in opj_tcd_encode_tile /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/tcd.c:1390\n    #4 0x7ffff677b9bb in opj_j2k_write_sod /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/j2k.c:4661\n    #5 0x7ffff67c2867 in opj_j2k_write_all_tile_parts /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/j2k.c:11586\n    #6 0x7ffff67c0a9e in opj_j2k_post_write_tile /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/j2k.c:11287\n    #7 0x7ffff67bdd8f in opj_j2k_encode /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/j2k.c:11028\n    #8 0x7ffff67e48c2 in opj_encode /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/lib/openjp2/openjpeg.c:775\n    #9 0x5555554b61f6 in main /home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/src/bin/jp2/opj_compress.c:1993\n    #10 0x7ffff4bd4c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #11 0x5555554a9129 in _start (/home/yuntong/vulnfix/benchmark-setup/openjpeg/CVE-2017-14039/source/bin/opj_compress+0xa9129)",
        "commit_message":"opj_t2_encode_packet(): only emit an error about insufficiently large output buffer in FINAL_PASS mode. Fixes (master-only) regression added in 0b4fef6d1901254e41ab74ed681daba477d724c3"
    },
    "CVE-2017-14041":{
        "file_name":"src/bin/jp2/convert.c",
        "get_command":[
            "git clone https://github.com/uclouvain/openjpeg.git source",
            "cd source",
            "git checkout 3d7cde5fc9fbc5618d02160900d32e02ed12a00e"
        ],
        "compile_command":[
            "export LDFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CXXFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CFLAGS=\"-fsanitize=address,undefined -g\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./bin/opj_compress -n 1 -i ../VUL4C/exploit -o null.j2k"
        ],
        "nvd_info":"A stack-based buffer overflow was discovered in the pgxtoimage function in bin/jp2/convert.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service or possibly remote code execution.",
        "cve_id":"CVE-2017-14041",
        "project":"openjpeg",
        "hash":"3d7cde5fc9fbc5618d02160900d32e02ed12a00e",
        "test_info":"=================================================================\n==158054==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffff86c0 at pc 0x7ffff6e7b1da bp 0x7fffffff82e0 sp 0x7fffffff7a68\nWRITE of size 36 at 0x7fffffff86c0 thread T0\n    #0 0x7ffff6e7b1d9  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x631d9)\n    #1 0x7ffff6e7c327 in __interceptor___isoc99_vfscanf (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x64327)\n    #2 0x7ffff6e7c426 in __interceptor___isoc99_fscanf (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x64426)\n    #3 0x5555554c2397 in pgxtoimage /home/skd/benchmark-setup/openjpeg/CVE-2017-14041/source/src/bin/jp2/convert.c:1170\n    #4 0x5555554b52b2 in main /home/skd/benchmark-setup/openjpeg/CVE-2017-14041/source/src/bin/jp2/opj_compress.c:1828\n    #5 0x7ffff4bd5c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x5555554a8fa9 in _start (/home/skd/benchmark-setup/openjpeg/CVE-2017-14041/source/bin/opj_compress+0xa8fa9)",
        "commit_message":"Preparing Release v2.2.0"
    },
    "CVE-2017-14151":{
        "file_name":"src/lib/openjp2/tcd.c",
        "get_command":[
            "git clone https://github.com/uclouvain/openjpeg.git source",
            "cd source",
            "git checkout 3d7cde5fc9fbc5618d02160900d32e02ed12a00e"
        ],
        "compile_command":[
            "export LDFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CXXFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CFLAGS=\"-fsanitize=address,undefined -g\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./bin/opj_compress -n 1 -i ../VUL4C/exploit -o null.j2c"
        ],
        "nvd_info":"An off-by-one error was discovered in opj_tcd_code_block_enc_allocate_data in lib/openjp2/tcd.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service (heap-based buffer overflow affecting opj_mqc_flush in lib/openjp2/mqc.c and opj_t1_encode_cblk in lib/openjp2/t1.c) or possibly remote code execution.",
        "cve_id":"CVE-2017-14151",
        "project":"openjpeg",
        "hash":"3d7cde5fc9fbc5618d02160900d32e02ed12a00e",
        "test_info":"/home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/t1.c:2042:55: runtime error: signed integer overflow: 34086911 * 64 cannot be represented in type 'int'\n=================================================================\n==158055==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000000b6 at pc 0x7ffff67dd48a bp 0x7fffffff80d0 sp 0x7fffffff80c0\nWRITE of size 1 at 0x6020000000b6 thread T0\n    #0 0x7ffff67dd489 in opj_mqc_byteout /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/mqc.c:198\n    #1 0x7ffff67df623 in opj_mqc_flush /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/mqc.c:323\n    #2 0x7ffff68b1fe7 in opj_t1_encode_cblk /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/t1.c:2213\n    #3 0x7ffff68b0fd0 in opj_t1_encode_cblks /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/t1.c:2061\n    #4 0x7ffff68d83d5 in opj_tcd_t1_encode /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/tcd.c:2184\n    #5 0x7ffff68d05a2 in opj_tcd_encode_tile /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/tcd.c:1362\n    #6 0x7ffff677c534 in opj_j2k_write_sod /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/j2k.c:4661\n    #7 0x7ffff67c299e in opj_j2k_write_first_tile_part /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/j2k.c:11507\n    #8 0x7ffff67c1224 in opj_j2k_post_write_tile /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/j2k.c:11265\n    #9 0x7ffff67be5a2 in opj_j2k_encode /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/j2k.c:11014\n    #10 0x7ffff67e50d5 in opj_encode /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/lib/openjp2/openjpeg.c:775\n    #11 0x5555554b6076 in main /home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/src/bin/jp2/opj_compress.c:1990\n    #12 0x7ffff4bd5c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #13 0x5555554a8fa9 in _start (/home/skd/benchmark-setup/openjpeg/CVE-2017-14151/source/bin/opj_compress+0xa8fa9)",
        "commit_message":"Preparing Release v2.2.0"
    },
    "CVE-2017-12982":{
        "file_name":"src/bin/jp2/convertbmp.c",
        "get_command":[
            "git clone https://github.com/uclouvain/openjpeg.git source",
            "cd source",
            "git checkout 3d7cde5fc9fbc5618d02160900d32e02ed12a00e"
        ],
        "compile_command":[
            "export LDFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CXXFLAGS=\"-fsanitize=address,undefined -g\"",
            "export CFLAGS=\"-fsanitize=address,undefined -g\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./bin/opj_compress -n 1 -i ../VUL4C/exploit -o null.j2c"
        ],
        "nvd_info":"The bmp_read_info_header function in bin/jp2/convertbmp.c in OpenJPEG 2.2.0 does not reject headers with a zero biBitCount, which allows remote attackers to cause a denial of service (memory allocation failure) in the opj_image_create function in lib/openjp2/image.c, related to the opj_aligned_alloc_n function in opj_malloc.c.",
        "cve_id":"CVE-2017-12982",
        "project":"openjpeg",
        "hash":"3d7cde5fc9fbc5618d02160900d32e02ed12a00e",
        "test_info":"==158052==ERROR: AddressSanitizer failed to allocate 0x5ea7983000 (406538694656) bytes of LargeMmapAllocator (error code: 12)\n==158052==Process memory map follows:\n\t0x00007fff7000-0x00008fff7000\n\t0x00008fff7000-0x02008fff7000\n\t0x02008fff7000-0x10007fff8000\n\t0x555555400000-0x555555542000\t/home/skd/benchmark-setup/openjpeg/CVE-2017-12982/source/bin/opj_compress\n\t0x555555741000-0x555555742000\t/home/skd/benchmark-setup/openjpeg/CVE-2017-12982/source/bin/opj_compress\n\t0x555555742000-0x555555812000\t/home/skd/benchmark-setup/openjpeg/CVE-2017-12982/source/bin/opj_compress\n\t0x600000000000-0x602000000000\n\t...\n==158052==End of process memory map.\n==158052==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cc:118 \"((0 && \"unable to mmap\")) != (0)\" (0x0, 0x0)\n    #0 0x7ffff6f01bf2  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe9bf2)\n    #1 0x7ffff6f20575 in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x108575)\n    #2 0x7ffff6f0b482  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xf3482)\n    #3 0x7ffff6f17895  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xff895)\n    #4 0x7ffff6e448f1  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x2c8f1)\n    #5 0x7ffff6e3f1ad  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x271ad)\n    #6 0x7ffff6ef7753 in posix_memalign (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdf753)",
        "commit_message":"Preparing Release v2.2.0"
    },
    "CVE-2016-7445":{
        "file_name":"src/bin/jp2/convert.c",
        "get_command":[
            "wget https://github.com/uclouvain/openjpeg/archive/v2.1.1.tar.gz",
            "tar xvf v2.1.1.tar.gz",
            "mv openjpeg-2.1.1 source",
            "cd source"
        ],
        "compile_command":[
            "export CXXFLAGS=\"-fsanitize=address -g\"",
            "export CFLAGS=\"-fsanitize=address -g\"",
            "cmake -DCMAKE_BUILD_TYPE=Debug CMakeLists.txt",
            "make -j10"
        ],
        "test_command":[
            "./bin/opj_compress -i ../VUL4C/exploit -o null.j2k"
        ],
        "nvd_info":"convert.c in OpenJPEG before 2.1.2 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via vectors involving the variable s.",
        "cve_id":"CVE-2016-7445",
        "project":"openjpeg",
        "hash":"f053508f6fc26aa95839f747bc7cbf257bd43996",
        "test_info":"ASAN:DEADLYSIGNAL\n=================================================================\n==1612==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55555561738d bp 0x7fffffff8030 sp 0x7fffffff8010 T0)\n==1612==The signal is caused by a READ memory access.\n==1612==Hint: address points to the zero page.\n    #0 0x55555561738c in skip_white /exp/validate/openjpeg/CVE-2016-7445/openjpeg-2.1.1/src/bin/jp2/convert.c:1331\n    #1 0x555555617426 in skip_int /exp/validate/openjpeg/CVE-2016-7445/openjpeg-2.1.1/src/bin/jp2/convert.c:1347\n    #2 0x555555618656 in read_pnm_header /exp/validate/openjpeg/CVE-2016-7445/openjpeg-2.1.1/src/bin/jp2/convert.c:1493\n    #3 0x55555561961c in pnmtoimage /exp/validate/openjpeg/CVE-2016-7445/openjpeg-2.1.1/src/bin/jp2/convert.c:1582\n    #4 0x55555560781b in main /exp/validate/openjpeg/CVE-2016-7445/openjpeg-2.1.1/src/bin/jp2/opj_compress.c:1722\n    #5 0x7ffff4f05c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x5555555fb479 in _start (/exp/validate/openjpeg/CVE-2016-7445/openjpeg-2.1.1/bin/opj_compress+0xa7479)",
        "commit_message":"Fix PNM file reading (#847)\nMalformed PNM file could cause a crash in opj_compress.\nChecks were added to prevent this.\n\nFixes #843\nUpdates #440"
    },
    "CVE-2016-9828":{
        "file_name":"util/outputtxt.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout 6f91d1a"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -ggdb\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\""
        ],
        "test_command":[
            "./util/listswf ../VUL4C/exploit"
        ],
        "nvd_info":"The dumpBuffer function in read.c in the listswf tool in libming 0.4.7 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted SWF file.",
        "cve_id":"CVE-2016-9828",
        "project":"libming",
        "hash":"6f91d1aa8f2351c2226020df015d3f05e453f3ee",
        "test_info":"=================================================================\n==407927==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5555554617e8 bp 0x7fffffffe130 sp 0x7fffffffe110 T0)\n==407927==The signal is caused by a READ memory access.\n==407927==Hint: address points to the zero page.\n    #0 0x5555554617e7 in dumpBuffer /home/skd/benchmark-setup/libming/CVE-2016-9828/source/util/read.c:441\n    #1 0x5555554293b7 in outputSWF_UNKNOWNBLOCK /home/skd/benchmark-setup/libming/CVE-2016-9828/source/util/outputtxt.c:2870\n    #2 0x55555542987b in outputBlock /home/skd/benchmark-setup/libming/CVE-2016-9828/source/util/outputtxt.c:2937\n    #3 0x55555542a7ff in readMovie /home/skd/benchmark-setup/libming/CVE-2016-9828/source/util/main.c:277\n    #4 0x55555542af36 in main /home/skd/benchmark-setup/libming/CVE-2016-9828/source/util/main.c:350\n    #5 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #6 0x555555416859 in _start (/home/skd/benchmark-setup/libming/CVE-2016-9828/source/util/listswf+0x16859)",
        "commit_message":"Set date for 0.4.7."
    },
    "CVE-2016-9264":{
        "file_name":"util/listmp3.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source/",
            "git checkout cc6a386"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --disable-freetype",
            "make CFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\" CXXFLAGS=\"-static -fsanitize=address -fsanitize=undefined -g\"",
            "cp util/listmp3 ../"
        ],
        "test_command":[
            "./util/listmp3 ../VUL4C/exploit"
        ],
        "nvd_info":"Buffer overflow in the printMP3Headers function in listmp3.c in Libming 0.4.7 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted mp3 file.",
        "cve_id":"CVE-2016-9264",
        "project":"libming",
        "hash":"cc6a386555a2fb13589f92473dd65b289a38d02d",
        "test_info":"listmp3.c:128:40: runtime error: index 3 out of bounds for type 'int [3]'\nlistmp3.c:128:18: runtime error: load of address 0x55555560520c with insufficient space for an object of type 'int'\n0x55555560520c: note: pointer points here\n  00 7d 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00\n              ^\n=================================================================\n==407923==ERROR: AddressSanitizer: global-buffer-overflow on address 0x55555560520c at pc 0x555555402be6 bp 0x7fffffffe1e0 sp 0x7fffffffe1d0\nREAD of size 4 at 0x55555560520c thread T0\n    #0 0x555555402be5 in printMP3Headers /home/skd/benchmark-setup/libming/CVE-2016-9264/source/util/listmp3.c:128\n    #1 0x55555540366d in main /home/skd/benchmark-setup/libming/CVE-2016-9264/source/util/listmp3.c:191\n    #2 0x7ffff5d27c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #3 0x555555402749 in _start (/home/skd/benchmark-setup/libming/CVE-2016-9264/source/util/listmp3+0x2749)",
        "commit_message":"Fix \"set but not used\" warning"
    },
    "CVE-2018-8964":{
        "file_name":"util/decompile.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout c4d20b1"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\""
        ],
        "test_command":[
            "./util/swftophp ../VUL4C/exploit"
        ],
        "nvd_info":"In libming 0.4.8, the decompileDELETE function of decompile.c has a use-after-free. Remote attackers could leverage this vulnerability to cause a denial of service via a crafted swf file.",
        "cve_id":"CVE-2018-8964",
        "project":"libming",
        "hash":"c4d20b127bac8cfd13fc7a965f3ffdf3d59e5793",
        "test_info":"=================================================================\n==1286429==ERROR: AddressSanitizer: heap-use-after-free on address 0x6030000000a0 at pc 0x555555422d36 bp 0x7fffffffdfe0 sp 0x7fffffffdfd0\nREAD of size 8 at 0x6030000000a0 thread T0\n    #0 0x555555422d35 in getName /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/decompile.c:398\n    #1 0x55555542fa40 in decompileDELETE /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/decompile.c:3057\n    #2 0x5555554304eb in decompileAction /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/decompile.c:3320\n    #3 0x555555430840 in decompileActions /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/decompile.c:3419\n    #4 0x555555430958 in decompile5Action /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/decompile.c:3441\n    #5 0x55555541d67d in outputSWF_DOACTION /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/outputscript.c:1551\n    #6 0x55555541fca7 in outputBlock /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/outputscript.c:2083\n    #7 0x555555420c77 in readMovie /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/main.c:281\n    #8 0x5555554213b4 in main /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/main.c:354\n    #9 0x7ffff648dc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555413a79 in _start (/home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8964/source/util/swftophp+0x13a79)\n==This is just the expected output of one of the exploits",
        "commit_message":"Merge pull request #124 from hlef/master\nFix several issues in listfdb and some compiler warnings"
    },
    "CVE-2018-8806":{
        "file_name":"util/decompile.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout c4d20b1"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\""
        ],
        "test_command":[
            "./util/swftophp ../VUL4C/exploit"
        ],
        "nvd_info":"In libming 0.4.8, there is a use-after-free in the decompileArithmeticOp function of decompile.c. Remote attackers could use this vulnerability to cause a denial-of-service via a crafted swf file.",
        "cve_id":"CVE-2018-8806",
        "project":"libming",
        "hash":"c4d20b127bac8cfd13fc7a965f3ffdf3d59e5793",
        "test_info":"=================================================================\n==1286421==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000000040 at pc 0x5555554228c3 bp 0x7fffffffdfe0 sp 0x7fffffffdfd0\nREAD of size 8 at 0x603000000040 thread T0\n    #0 0x5555554228c2 in getString /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/decompile.c:349\n    #1 0x5555554258e1 in decompileArithmeticOp /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/decompile.c:1080\n    #2 0x5555554304a3 in decompileAction /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/decompile.c:3310\n    #3 0x555555430840 in decompileActions /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/decompile.c:3419\n    #4 0x555555430958 in decompile5Action /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/decompile.c:3441\n    #5 0x55555541d67d in outputSWF_DOACTION /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/outputscript.c:1551\n    #6 0x55555541fca7 in outputBlock /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/outputscript.c:2083\n    #7 0x555555420c77 in readMovie /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/main.c:281\n    #8 0x5555554213b4 in main /home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/main.c:354\n    #9 0x7ffff648dc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555413a79 in _start (/home/newBenchmark/Benchmark/benchmark/libming/CVE-2018-8806/source/util/swftophp+0x13a79)",
        "commit_message":"Merge pull request #124 from hlef/master\nFix several issues in listfdb and some compiler warnings"
    },
    "CVE-2016-9829":{
        "file_name":"util/parser.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout 6f91d1a"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --disable-freetype",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\""
        ],
        "test_command":[
            "./util/listswf ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the parseSWF_DEFINEFONT function in parser.c in the listswf tool in libming 0.4.7 allows remote attackers to have unspecified impact via a crafted SWF file.",
        "cve_id":"CVE-2016-9829",
        "project":"libming",
        "hash":"6f91d1aa8f2351c2226020df015d3f05e453f3ee",
        "test_info":"=================================================================\n==407928==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000050 at pc 0x55555544db74 bp 0x7fffffffe130 sp 0x7fffffffe120\nWRITE of size 2 at 0x602000000050 thread T0\n    #0 0x55555544db73 in parseSWF_DEFINEFONT /home/skd/benchmark-setup/libming/CVE-2016-9829/source/util/parser.c:1656\n    #1 0x55555542e8e8 in blockParse /home/skd/benchmark-setup/libming/CVE-2016-9829/source/util/blocktypes.c:145\n    #2 0x55555542a754 in readMovie /home/skd/benchmark-setup/libming/CVE-2016-9829/source/util/main.c:265\n    #3 0x55555542af36 in main /home/skd/benchmark-setup/libming/CVE-2016-9829/source/util/main.c:350\n    #4 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #5 0x555555416859 in _start (/home/skd/benchmark-setup/libming/CVE-2016-9829/source/util/listswf+0x16859)",
        "commit_message":"Set date for 0.4.7."
    },
    "CVE-2016-9265":{
        "file_name":"util/listmp3.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout 6f91d1a"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --disable-freetype",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\""
        ],
        "test_command":[
            "./util/listmp3 ../VUL4C/exploit"
        ],
        "nvd_info":"The printMP3Headers function in listmp3.c in Libming 0.4.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted mp3 file.",
        "cve_id":"CVE-2016-9265",
        "project":"libming",
        "hash":"6f91d1aa8f2351c2226020df015d3f05e453f3ee",
        "test_info":"=================================================================\n==407924==ERROR: AddressSanitizer: FPE on unknown address 0x5555554019be (pc 0x5555554019be bp 0x7fffffffe260 sp 0x7fffffffe210 T0)\n    #0 0x5555554019bd in printMP3Headers /home/skd/benchmark-setup/libming/CVE-2016-9265/source/util/listmp3.c:172\n    #1 0x555555401ae8 in main /home/skd/benchmark-setup/libming/CVE-2016-9265/source/util/listmp3.c:191\n    #2 0x7ffff6a48c86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #3 0x555555401269 in _start (/home/skd/benchmark-setup/libming/CVE-2016-9265/source/util/listmp3+0x1269)",
        "commit_message":"Set date for 0.4.7."
    },
    "CVE-2016-9831":{
        "file_name":"util/old/listswf.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout 6f91d1a"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\""
        ],
        "test_command":[
            "./util/listswf ../VUL4C/exploit"
        ],
        "nvd_info":"Heap-based buffer overflow in the parseSWF_RGBA function in parser.c in the listswf tool in libming 0.4.7 allows remote attackers to have unspecified impact via a crafted SWF file.",
        "cve_id":"CVE-2016-9831",
        "project":"libming",
        "hash":"6f91d1aa8f2351c2226020df015d3f05e453f3ee",
        "test_info":"==407929==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x624000003f10 at pc 0x55555543e301 bp 0x7fffffffe070 sp 0x7fffffffe060\nWRITE of size 1 at 0x624000003f10 thread T0\n    #0 0x55555543e300 in parseSWF_RGBA /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/parser.c:66\n    #1 0x555555444981 in parseSWF_MORPHGRADIENTRECORD /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/parser.c:746\n    #2 0x555555444acc in parseSWF_MORPHGRADIENT /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/parser.c:761\n    #3 0x555555444c12 in parseSWF_MORPHFILLSTYLE /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/parser.c:777\n    #4 0x555555444e16 in parseSWF_MORPHFILLSTYLES /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/parser.c:804\n    #5 0x555555453446 in parseSWF_DEFINEMORPHSHAPE /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/parser.c:2098\n    #6 0x55555542e8e8 in blockParse /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/blocktypes.c:145\n    #7 0x55555542a754 in readMovie /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/main.c:265\n    #8 0x55555542af36 in main /home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/main.c:350\n    #9 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555416859 in _start (/home/skd/benchmark-setup/libming/CVE-2016-9831/source/util/listswf+0x16859)",
        "commit_message":"Set date for 0.4.7."
    },
    "CVE-2016-9266":{
        "file_name":"util/listmp3.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout 6f91d1a"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --disable-freetype",
            "make CFLAGS=\"-static -fsanitize=shift -g\" CXXFLAGS=\"-static -fsanitize=shift -g\" LDFLAGS=\"-fsanitize=shift\""
        ],
        "test_command":[
            "./util/listmp3 ../VUL4C/exploit"
        ],
        "nvd_info":"listmp3.c in libming 0.4.7 allows remote attackers to unspecified impact via a crafted mp3 file, which triggers an invalid left shift.",
        "cve_id":"CVE-2016-9266",
        "project":"libming",
        "hash":"6f91d1aa8f2351c2226020df015d3f05e453f3ee",
        "test_info":"listmp3.c:94:23: runtime error: left shift of negative value -1\nlistmp3.c:95:23: runtime error: left shift of negative value -1",
        "commit_message":"Set date for 0.4.7."
    },
    "CVE-2016-9827":{
        "file_name":"util/parser.c",
        "get_command":[
            "git clone https://github.com/libming/libming.git source",
            "cd source",
            "git checkout 6f91d1a"
        ],
        "compile_command":[
            "./autogen.sh",
            "./configure --disable-freetype",
            "make CFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" CXXFLAGS=\"-static -fsanitize=address -fno-omit-frame-pointer -g\" LDFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\""
        ],
        "test_command":[
            "./util/listswf ../VUL4C/exploit"
        ],
        "nvd_info":"The _iprintf function in outputtxt.c in the listswf tool in libming 0.4.7 allows remote attackers to cause a denial of service (buffer over-read) via a crafted SWF file.",
        "cve_id":"CVE-2016-9827",
        "project":"libming",
        "hash":"6f91d1aa8f2351c2226020df015d3f05e453f3ee",
        "test_info":"=================================================================\n==407926==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000011 at pc 0x7ffff6e8c075 bp 0x7fffffffdf80 sp 0x7fffffffd6f8\nREAD of size 2 at 0x602000000011 thread T0\n    #0 0x7ffff6e8c074  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x74074)\n    #1 0x7ffff6f0154f  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xe954f)\n    #2 0x7ffff6e8c1ed  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x741ed)\n    #3 0x7ffff6e8cdad in vprintf (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x74dad)\n    #4 0x555555416a87 in _iprintf /home/skd/benchmark-setup/libming/CVE-2016-9827/source/util/outputtxt.c:144\n    #5 0x555555424266 in outputSWF_PROTECT /home/skd/benchmark-setup/libming/CVE-2016-9827/source/util/outputtxt.c:1873\n    #6 0x55555542985a in outputBlock /home/skd/benchmark-setup/libming/CVE-2016-9827/source/util/outputtxt.c:2933\n    #7 0x55555542a7ff in readMovie /home/skd/benchmark-setup/libming/CVE-2016-9827/source/util/main.c:277\n    #8 0x55555542af36 in main /home/skd/benchmark-setup/libming/CVE-2016-9827/source/util/main.c:350\n    #9 0x7ffff682bc86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)\n    #10 0x555555416859 in _start (/home/skd/benchmark-setup/libming/CVE-2016-9827/source/util/listswf+0x16859)",
        "commit_message":"Set date for 0.4.7."
    }
}