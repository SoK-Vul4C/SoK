<S2SV_ModStart> . buf = 1 <S2SV_ModEnd> ; } if
<S2SV_ModStart> 1 ] ; if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> = NULL ; if ( n -> bad_return == NULL ) { <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , & buf , false
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) return - 1 <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> ( buf ) { if ( n -> bad_return == NULL ) return 0 ;
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) { <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , address - 1 <S2SV_ModEnd> ) ; }
<S2SV_ModStart> abfd ) { if ( <unk> -> bad_return > 1024 ) { <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> abfd ) { if ( <unk> -> bad_return ) { <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> ( * buf <S2SV_ModEnd> ) ; }
<S2SV_ModStart> NULL ; } if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> , * buf , false
<S2SV_ModStart> len - 8 <S2SV_ModEnd> ) ; }
<S2SV_ModStart> = NULL ; if ( n -> bad_return == NULL ) { ret = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> ( * buf , false
<S2SV_ModStart> 1 ] ; if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; return 0 ; }
<S2SV_ModStart> 1 ] ; if ( n -> bad_return == NULL ) { ret = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> 1 ] ; if ( n -> bad_return == NULL ) return 0 ;
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) return ( - 1 ) ;
<S2SV_ModStart> = NULL ; if ( n -> bad_return == NULL ) { ret = - EINVAL ; goto n ; }
<S2SV_ModStart> abfd ) { if ( <unk> -> bad_return > NULL ) { <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto offset ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) { <S2SV_ModStart> ) ; } }
<S2SV_ModStart> , size ) { if ( n -> bad_return == NULL ) return - 1 <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> ( buf ) { if ( strlen ( buf ) > 0 ) { <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> , 1 ) ; if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> 1 ] ; if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto offset ; }
<S2SV_ModStart> , 1 ) { if ( n -> plt_entry_size == NULL ) return - 1 <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) return NULL <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) return 0 <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) return sec <S2SV_ModStart> j ) ; }
<S2SV_ModStart> ( buf ) { if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto offset ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) { <S2SV_ModStart> j += 8 ; }
<S2SV_ModStart> abfd ) { if ( <unk> -> bad_return == NULL ) { r = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> abfd ) { if ( <unk> -> bad_return == NULL ) { <unk> ( buf ) ; return 0 ; }
<S2SV_ModStart> NULL ; } if ( n -> bad_return == NULL ) { ret = - EINVAL ; goto n ; }
<S2SV_ModStart> , 1 ) ; if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto offset ; }
<S2SV_ModStart> abfd ) { if ( <unk> -> bad_return == NULL ) { r = <unk> ( buf ) ; goto offset ; }
<S2SV_ModStart> , 1 ) { if ( strlen ( buf ) >= NULL ) { <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) return ( - 1 ) ; <S2SV_ModStart> -> bad_return ) ; }
<S2SV_ModStart> = NULL ; if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; goto n ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) return ( - 1 ) ; <S2SV_ModStart> plts ) ; }
<S2SV_ModStart> = NULL ; if ( n -> bad_return == NULL ) { ret = - EIO ; goto n ; }
<S2SV_ModStart> NULL ; } if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; return 0 ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; return 0 ; }
<S2SV_ModStart> = NULL ; if ( n -> bad_return == NULL ) { ret = <unk> ( buf ) ; goto offset ; }
<S2SV_ModStart> , 1 ) ; if ( n -> bad_return == NULL ) { r = <unk> ( buf ) ; return 0 ; }
<S2SV_ModStart> , 1 ) { if ( n -> bad_return == NULL ) { ret = <unk> ( buf ) ; goto offset ; }
