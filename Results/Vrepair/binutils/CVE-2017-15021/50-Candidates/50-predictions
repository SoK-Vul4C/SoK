<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> 3 ) ) return 0
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( bfd_get_section_size ) ) return 0
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( bfd_get_section_size ) ) return NULL
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> 3 ) ) return - 1
<S2SV_ModStart> ~ crc_offset ; if ( ! <S2SV_ModStart> 3 ) ) return 0
<S2SV_ModStart> ~ crc_offset ; if ( ! <S2SV_ModStart> ( bfd_get_section_size ) ) return 0
<S2SV_ModStart> ~ crc_offset ; if ( ! <S2SV_ModStart> ( bfd_get_section_size ) ) return NULL
<S2SV_ModStart> ~ crc_offset ; if ( ! <S2SV_ModStart> 3 ) ) return - 1
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( bfd_get_section_size ) ) return - 1
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( crc_offset ) ) return 0
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( crc_offset ) ) return NULL
<S2SV_ModStart> ~ bfd_get_section_size ( ( __force char * sect )
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> , bfd_get_section_size ) ) return NULL
<S2SV_ModStart> ~ bfd_get_section_size ( ( )
<S2SV_ModStart> ~ bfd_get_section_size ( ( __force char * sect * )
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( ) ) return 0
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> 3 ) ) return NULL
<S2SV_ModStart> ~ bfd_get_section_size ( ( ) <S2SV_ModEnd> ) ; return
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ( <S2SV_ModStart> 3 ) >= NULL ) return
<S2SV_ModStart> ~ bfd_get_section_size ; if ( Stream_GetRemainingLength ( sect ) ) return
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ( <S2SV_ModStart> ) ) return - 1
<S2SV_ModStart> ~ crc_offset ; if ( ! <S2SV_ModStart> ( bfd_get_section_size ) ) return - 1
<S2SV_ModStart> ~ bfd_get_section_size ( ( __force char * sect >= NULL )
<S2SV_ModStart> ~ bfd_get_section_size ; if ( strlen ( sect ) ) return
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ( <S2SV_ModStart> 3 ) >= 0 ) return
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ) ) return - 1
<S2SV_ModStart> ~ bfd_get_section_size ; if ( !
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <unk> ( ) ) return NULL ;
<S2SV_ModStart> ~ crc_offset ; if ( ! <S2SV_ModStart> ( crc_offset ) ) return 0
<S2SV_ModStart> ~ crc_offset ; if ( ! <S2SV_ModStart> ( crc_offset ) ) return NULL
<S2SV_ModStart> ~ bfd_get_section_size ( ( u64 )
<S2SV_ModStart> ~ bfd_get_section_size ( ( __force char * sect >= bfd_get_section_size )
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ( <S2SV_ModStart> 3 ) >= bfd_get_section_size ) return
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( * ) ) return NULL
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( bfd_get_section_size , "%s" ,
<S2SV_ModStart> ~ crc_offset ( ( __force char * sect )
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> , bfd_get_section_size ) ) return 0
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ( <S2SV_ModStart> 3 ) , ( ( int )
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ! <S2SV_ModStart> ( ) ) return NULL
<S2SV_ModStart> ~ bfd_get_section_size ( ( __force char * sect & * sect )
<S2SV_ModStart> ~ bfd_get_section_size ( ( __force char * sect & ( * )
<S2SV_ModStart> if ( ( osStrchr <S2SV_ModEnd> ( sect ,
<S2SV_ModStart> ~ bfd_get_section_size ( ( unsigned
<S2SV_ModStart> ~ crc_offset ( ( )
<S2SV_ModStart> ; if ( HeapOverflowSanityCheck <S2SV_ModEnd> ( sect ,
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ( <S2SV_ModStart> 3 ) >= NULL ) return (
<S2SV_ModStart> ~ bfd_get_section_size ; if ( ( <S2SV_ModStart> ) ) return ( - 1 )
<S2SV_ModStart> ~ bfd_get_section_size ( ( int )
<S2SV_ModStart> ~ crc_offset ; if ( !
<S2SV_ModStart> ~ crc_offset ( ( u64 )
