<S2SV_ModStart> ; if ( key_is_negative ( current_position <S2SV_ModEnd> ) ) {
<S2SV_ModStart> if ( ( key_is_negative ( current_position <S2SV_ModEnd> ) ) {
<S2SV_ModStart> ; if ( key_is_negative ( current_position <S2SV_ModEnd> ) ) { <S2SV_ModStart> , skipsize ) ; } if (
<S2SV_ModStart> if ( ( osStrchr <S2SV_ModEnd> ( iso9660 ,
<S2SV_ModStart> if ( joliet != SUID_DUMP_USER && <S2SV_ModEnd> ! skipsize (
<S2SV_ModStart> ; if ( key_is_negative ( current_position <S2SV_ModEnd> ) ) { <S2SV_ModStart> , skipsize ) ; return
<S2SV_ModStart> ; if ( key_is_negative ( current_position <S2SV_ModEnd> ) ) { <S2SV_ModStart> ; if ( ( current_position >
<S2SV_ModStart> if ( ( key_is_negative ( current_position <S2SV_ModEnd> ) ) ;
<S2SV_ModStart> if ( joliet != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return NULL ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ARCHIVE_FATAL ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , NULL , "Rejecting<S2SV_blank>malformed<S2SV_blank>cpio<S2SV_blank>archive:<S2SV_blank>symlink<S2SV_blank>contents<S2SV_blank>exceed<S2SV_blank>1<S2SV_blank>megabyte" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( iso9660 != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return NULL ; } if (
<S2SV_ModStart> if ( joliet != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return ARCHIVE_FATAL ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ( - ENOENT ) ; } if (
<S2SV_ModStart> if ( LOGICAL_BLOCK_SIZE != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return NULL ; } if (
<S2SV_ModStart> ; if ( key_is_negative ( current_position <S2SV_ModEnd> ) ) { <S2SV_ModStart> , joliet ) ; } if (
<S2SV_ModStart> if ( joliet != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return ( - 1 ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> type ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ( - 1 ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , size , "Tag<S2SV_blank>starts<S2SV_blank>past<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer<S2SV_blank>(%u<S2SV_blank>><S2SV_blank>%u)" , ARCHIVE_FATAL ) ; return ( ; } if (
<S2SV_ModStart> if ( iso9660 != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return ARCHIVE_FATAL ; } if (
<S2SV_ModStart> if ( ( key_is_negative ( current_position <S2SV_ModEnd> ) ) { <S2SV_ModStart> = skipsize ( ( current_position ) ; if (
<S2SV_ModStart> if ( joliet != NULL ) { archive_set_error ( a -> primary , a -> skipsize , NULL ) ; return NULL ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , size , "Tag<S2SV_blank>starts<S2SV_blank>past<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer<S2SV_blank>(%u<S2SV_blank>><S2SV_blank>%u)" , ARCHIVE_FATAL ) ; return ARCHIVE_FATAL ; } if (
<S2SV_ModStart> if ( joliet != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ( - 1 ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> allowed_extensions ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> type ) ; return ARCHIVE_FATAL ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , size , "Tag<S2SV_blank>starts<S2SV_blank>past<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer<S2SV_blank>(%u<S2SV_blank>><S2SV_blank>%u)" , ARCHIVE_FATAL ) ; return ARCHIVE_FATAL ; } if ( <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , "Tag<S2SV_blank>starts<S2SV_blank>past<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer<S2SV_blank>(%u<S2SV_blank>><S2SV_blank>%u)" , ARCHIVE_FATAL ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( iso9660 != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return ( - 1 ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , size , "Tag<S2SV_blank>starts<S2SV_blank>past<S2SV_blank>end<S2SV_blank>of<S2SV_blank>buffer<S2SV_blank>(%u<S2SV_blank>><S2SV_blank>%u)" , ARCHIVE_FATAL ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( & a -> archive , skipsize , NULL ) ; return ( <S2SV_ModStart> , skipsize ) ; } if ( (
<S2SV_ModStart> if ( joliet != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ARCHIVE_FATAL ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> LOGICAL_BLOCK_SIZE , NULL ) ; return ARCHIVE_FATAL ; } if (
<S2SV_ModStart> if ( iso9660 != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ( - 1 ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> name ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( LOGICAL_BLOCK_SIZE != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ( - 1 ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> allowed_extensions ) ; return ( - ENOENT ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> remote ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return NULL ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> flags ) ; return ARCHIVE_FATAL ; } if ( <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , NULL , 10 ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> name ) ; return ( - 1 ) ; } if (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , block , a -> name ) ; return ( - ENOENT ) ; } if (
<S2SV_ModStart> if ( * name != NULL && a -> primary != NULL ) { archive_set_error ( & a -> archive , size , "Rejecting<S2SV_blank>malformed<S2SV_blank>cpio<S2SV_blank>archive:<S2SV_blank>symlink<S2SV_blank>contents<S2SV_blank>exceed<S2SV_blank>1<S2SV_blank>megabyte" ) ; return ( ; } if (
<S2SV_ModStart> if ( ( skipsize != NULL ) { archive_set_error ( a -> primary , a -> archive , block , NULL , "Rejecting<S2SV_blank>malformed<S2SV_blank>cpio<S2SV_blank>archive:<S2SV_blank>symlink<S2SV_blank>contents<S2SV_blank>exceed<S2SV_blank>1<S2SV_blank>megabyte" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( ( current_position != NULL ) { archive_set_error ( a -> primary , a -> archive , skipsize , NULL ) ; return ( ARCHIVE_FATAL ) ; } if ( <S2SV_ModStart> , 0 ) ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> if ( * name != NULL && a -> primary != NULL ) { archive_set_error ( & a -> archive , block , NULL , "yes" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModStart> , skipsize ) ; }

