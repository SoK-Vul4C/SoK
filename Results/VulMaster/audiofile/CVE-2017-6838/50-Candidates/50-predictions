<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount > UINT32_MAX / frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> 1 ) ; <S2SV_ModEnd> void * buffer <S2SV_ModStart> = malloc ( frameSize * kBufferFrameCount <S2SV_ModEnd> ) ; AFframecount
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount > SIZE_MAX / frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if (! buffer ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount * frameSize > allocSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize / kBufferFrameCount > frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < kBufferFrameCount ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize / kBufferFrameCount > frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount > UINT32_MAX / frameSize ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t size = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( size < 0 ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if (! buffer ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad copyaudiodata data.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t size = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( size < 0 ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; success = false ; break ; } buffer = malloc ( size
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t size = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( size < 0 ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if (! buffer ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } memset ( buffer, 0, allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize / kBufferFrameCount!= frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( buffer == NULL ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad copyaudiodata.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad buffer pointer.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad data pointer.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad frame data.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < kBufferFrameCount ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if (! buffer ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } if (! allocSize ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const <S2SV_ModEnd> void * buffer <S2SV_ModStart> = malloc ( ( size_t )
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount > SIZE_MAX / frameSize ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if (! buffer ) { fprintf ( stderr, "Bad buffer pointer.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount == 0 ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if (! buffer ) { fprintf ( stderr, "Bad buffer data.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize / kBufferFrameCount!= frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; const size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount >= frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize / frameSize > kBufferFrameCount ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if (! buffer ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } if (! allocSize ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t bufferLength = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( bufferLength / frameSize > kBufferFrameCount ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( buffer == NULL ) { fprintf ( stderr, "Bad buffer pointer.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize / frameSize > kBufferFrameCount ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; success = false ; break ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad memory copyaudiodata.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t size = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( buffer == NULL ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < mallocSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount == 0 ) return false ; void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const unsigned <S2SV_ModStart> = 65536 ; const size_t mallocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( mallocSize < frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t size = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( size < 0 ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } <S2SV_ModEnd> AFframecount totalFrames =
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount == 0 ) { fprintf ( stderr, "Bad buffer of audio track data.\\n" ) ; return false ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const <S2SV_ModEnd> void * buffer <S2SV_ModStart> = malloc ( frameSize * kBufferFrameCount <S2SV_ModEnd> ) ; AFframecount
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount > UINT32_MAX / frameSize ) { fprintf ( stderr, "Bad read of audio track data.\\n" ) ; success = false ; break ; } void * buffer = malloc ( allocSize
<S2SV_ModStart> ) ; const size_t <S2SV_ModEnd> kBufferFrameCount = 65536 <S2SV_ModStart> = 65536 ; size_t allocSize = <S2SV_ModEnd> kBufferFrameCount * frameSize <S2SV_ModStart> kBufferFrameCount * frameSize ; if ( kBufferFrameCount > UINT32_MAX / frameSize ) { fprintf ( stderr, "Bad buffer size.\\n" ) ; return false ; } memset ( buffer, 0, allocSize
