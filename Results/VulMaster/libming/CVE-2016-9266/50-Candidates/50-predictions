<S2SV_ModStart> ( flags = fgetb <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetb ( f ) << 24 ; flags += fgetb ( f ) << 16 ; flags += fgetb ( f ) << 8 ; flags += fgetb <S2SV_ModEnd> ( f )
<S2SV_ModStart> ( flags = fgetb <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetb ( f ) << 16 ; flags += fgetb ( f ) << 8 ; flags += fgetb <S2SV_ModEnd> ( f )
<S2SV_ModStart> ( flags = fgetd <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetd ( f ) << 24 ; flags += fgetd ( f ) << 16 ; flags += fgetd ( f ) << 8 ; flags += fgetd <S2SV_ModEnd> ( f )
<S2SV_ModStart> ( flags = fgetb <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetb ( f ) << 24 ; flags += fgetb ( f ) << 16 ; flags += fgetb ( f ) << 8 ; flags += fgetb ( f ) <S2SV_ModEnd> ; if (
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetd <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetd ( f ) << 16 ; flags += fgetd ( f ) << 8 ; flags += fgetd <S2SV_ModEnd> ( f )
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetd <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetd ( f ) << 24 ; flags += fgetd ( f ) << 16 ; flags += fgetd ( f ) << 8 ; flags += fgetd ( f ) <S2SV_ModEnd> ; if (
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT <S2SV_ModEnd> ; if (
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_SENSITIVE ) == MP3_SENSITIVE ) && ( fgetc ( f ) == '1' || fgetc ( f ) == '2' || fgetc ( f ) == '3' ) ) <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetc_t <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetc_t ( f ) << 24 ; flags += fgetc_t ( f ) << 16 ; flags += fgetc_t ( f ) << 8 ; flags += fgetc_t <S2SV_ModEnd> ( f )
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_I ) && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags ==
<S2SV_ModStart> ( flags = fgetd <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetd ( f ) << 24 ; flags += fgetd <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetd ( f ) << 16 ; flags += fgetd ( f ) << 8 ; flags += fgetd <S2SV_ModEnd> ( f )
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF ) <S2SV_ModEnd> break ; if <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } <S2SV_ModEnd> if ( (
<S2SV_ModStart> ( flags = fgetu <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += fgetu ( f ) << 24 ; flags += fgetu ( f ) << 16 ; flags += fgetu ( f ) << 8 ; flags += fgetu <S2SV_ModEnd> ( f )
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_I ) && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags ==
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF ) <S2SV_ModEnd> break ; if <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_I ) && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) <S2SV_ModEnd> ) == EOF <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else { error ( "unknown MP3 flags!" ) ; } <S2SV_ModEnd> if ( (
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_SENSITIVE ) == MP3_SENSITIVE ) && ( fgetc ( f ) == '1' || fgetc ( f ) == '2' ) ) == MP3_SENSITIVE ) && ( fgetc ( f ) == '3' || fgetc ( f ) == '4' ) ) == MP3_SENSITIVE <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags &
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_I ) && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) <S2SV_ModEnd> ) == EOF <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT <S2SV_ModEnd> ; if (
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 )
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_SENSITIVE ) == MP3_SENSITIVE ) && ( fgetc ( f ) == '1' || fgetc ( f ) == '2' || fgetc ( f ) == '3' ) ) <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF ) <S2SV_ModEnd> break ; if <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 )
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) | ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) | ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == EOF <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 )
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModEnd> EOF ) break <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_SENSITIVE ) == MP3_SENSITIVE ) && ( fgetc ( f ) == '1' ) && ( fgetc ( f ) == '2' ) && ( fgetc ( f ) == '3' ) ) <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> fgetc ( f ) << 8 )
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else { error ( "invalid MP3 flags!" ) ; } <S2SV_ModEnd> if ( (
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } while ( flags!= 0xFF && flags!= EOF ) <S2SV_ModEnd> ; if ( <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } else { error ( "unknown MP3 flags!" ) ; } <S2SV_ModEnd> if ( (
<S2SV_ModStart> ( flags = fgetb <S2SV_ModEnd> ( f ) <S2SV_ModStart> ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT ; flags += ( flags & MP3_FLAGS_MASK ) >> MP3_FLAGS_SHIFT <S2SV_ModEnd> ; if (
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAG_SENSITIVE ) == MP3_SENSITIVE ) && ( fgetc ( f ) == '1' ) && ( fgetc ( f ) == '2' ) && ( fgetc ( f ) == '3' ) ) <S2SV_ModEnd> ) break ; <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> fgetc ( f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetu ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS ) == MP3_FLAGS_I ) && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) } while ( flags!= 0xFF && flags!= EOF ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
<S2SV_ModStart> ( flags = fgetb ( f ) ) == EOF ) break ; if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = 0 ; break ; } if ( ( flags & MP3_FLAGS_MASK ) == MP3_FLAGS_HIGHBITDEPTH ) { flags = fgetc ( f ) ; } if ( flags == <S2SV_ModStart> ; flags += ( <S2SV_ModStart> ) << 16 ) ; flags += ( <S2SV_ModEnd> fgetc ( f <S2SV_ModStart> f ) << 8 ) ; flags += ( <S2SV_ModEnd> fgetc ( f
