<S2SV_ModStart> ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_2_SHIFT <S2SV_ModEnd> ; channels =
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_REF ) >> MP3_SAMPLERATE_REF_SHIFT <S2SV_ModEnd> ; channels =
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else if ( flags & MP3_SAMPLERATE_1 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; channels = ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO )? 1 : 2 ; switch ( flags & MP3_VERSION ) { case MP3_VERSION_1 : case MP3_VERSION_2 : case MP3_VERSION_3 : case MP3_VERSION_4 : case MP3_VERSION_5 : case MP3_VERSION_6 : case MP3_VERSION_7 : case MP3_VERSION_8 : case MP3_VERSION_10 : case MP3_VERSION_12 : case MP3_VERSION_12 : if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_16 ) >> MP3_SAMPLERATE_16_SHIFT ; samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_MASK ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else if ( flags & MP3_SAMPLERATE_1 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } else if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_2_SHIFT ; } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else if ( flags & MP3_SAMPLERATE_1 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else if ( flags & MP3_SAMPLERATE_1 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } else if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } } else { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_SHIFT ; } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } else { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_SHIFT ; } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_1_SHIFT ; } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } else { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_1_SHIFT ; } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_2_SHIFT ; } } } }
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } } else { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_SHIFT ; } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } else { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_SHIFT ; } } }
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else if ( flags & MP3_SAMPLERATE_1 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } else if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } else if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_2_SHIFT
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_3 ) >> MP3_SAMPLERATE_3_SHIFT ; } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_1_SHIFT ; } else { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_SHIFT ; } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_1_SHIFT ; } else { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_SHIFT ; } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( samplerate_idx!= MP3_SAMPLERATE_1 ) samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_2_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_2_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_2_SHIFT ; } } } else { samplerate_idx = ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; } else if ( flags & MP3_SAMPLERATE_1 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } else if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_1_SHIFT ; } else if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_2_SHIFT ; }
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) samplerate_idx = ( flags & MP3_SAMPLERATE_2 ) >> MP3_SAMPLERATE_2_SHIFT ; } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; } if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; channels = ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO )? 1 : 2 ; switch ( flags & MP3_VERSION ) { case MP3_VERSION_1 : case MP3_VERSION_2 : case MP3_VERSION_3 : case MP3_VERSION_4 : case MP3_VERSION_5 : case MP3_VERSION_6 : case MP3_VERSION_7 : case MP3_VERSION_8 : case MP3_VERSION_10 : case MP3_VERSION_12 : case MP3_VERSION_13 : if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_2_SHIFT ; if ( flags & MP3_SAMPLERATE_3 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_4 ) >> MP3_SAMPLERATE_SHIFT ; } } } else { samplerate_idx = 0 ; } <S2SV_ModEnd> channels = (
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_3 ) >> MP3_SAMPLERATE_1_SHIFT ; } if ( flags & MP3_SAMPLERATE_4 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_5 ) >> MP3_SAMPLERATE_5_SHIFT ; } if ( flags &
<S2SV_ModStart> ( flags & MP3_SAMPLERATE_0 ) >> MP3_SAMPLERATE_0_SHIFT ; samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; if ( flags & MP3_SAMPLERATE_2 ) { samplerate_idx = ( flags & MP3_SAMPLERATE_1 ) >> MP3_SAMPLERATE_1_SHIFT ; } } } if ( flags &
