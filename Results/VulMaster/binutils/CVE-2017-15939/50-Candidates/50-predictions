<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * stringp = read_8_bytes ( abfd, buf, buf_end, & bytes_read ) ; buf += bytes_read ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * uintp = _bfd_safe_read_leb128 ( abfd, buf, buf_end, & bytes_read ) ; buf += bytes_read ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = _bfd_safe_read_leb128 ( abfd, buf, & bytes_read, FALSE, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end -
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * stringp = _bfd_safe_read_leb128 ( abfd, buf, buf_end, & bytes_read ) ; buf += bytes_read ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * uintp = read_8_bytes ( abfd, buf, buf_end, & bytes_read ) ; buf += bytes_read ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = _bfd_safe_read_leb128 ( abfd, buf, & bytes_read, FALSE, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = read_8_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = read_8_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data5 : * uintp = read_5_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf_end -
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end -
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - <S2SV_ModEnd> ) ; buf
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data5 : * uintp = read_5_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * stringp = read_8_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data3 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * uintp = _bfd_safe_read_leb128 ( abfd, buf, buf_end, & bytes_read ) ; buf += bytes_read ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = _bfd_safe_read_leb128 ( abfd, buf, & bytes_read, FALSE, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; default : _bfd_error_handler ( _ ( "Dwarf Error: Unknown format content type %Lu." ), format_type ) ) ; return FALSE ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data3 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * uintp = _bfd_safe_read_leb128 ( abfd, buf, buf_end, & bytes_read ) ; buf += bytes_read ;
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * stringp = read_8_bytes ( abfd, buf, buf_end, & bytes_read ) ; buf += bytes_read ; } }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; default : _bfd_error_handler ( _ ( "Dwarf Error: Unknown format content type %Lu." ), format_type ) ) ; return FALSE ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data5 : * uintp = read_5_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data4 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data5 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data6 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data7 ) { * stringp = & string_trash ; } if ( formati < DW_FORM_data8 ) { * uintp = read_8_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data5 : * uintp = read_5_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = _bfd_safe_read_leb128 ( abfd, buf, & bytes_read, FALSE, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_block : break ; } }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = _bfd_safe_read_leb128 ( abfd, buf, & bytes_read, FALSE, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_block : break ; } }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = _bfd_safe_read_leb128 ( abfd, buf, & bytes_read, FALSE, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = read_8_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data8 : * uintp = read_8_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data5 : * uintp = read_5_bytes ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end -
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && format < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_bytes ( abfd, buf, buf_end - buf ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_bytes ( abfd, buf, buf_end - buf, & bytes_read ) ; buf += bytes_read ; break ; }
<S2SV_ModStart> fileinfo fe ; if ( format >= DW_FORM_data1 && formati < DW_FORM_data2 ) { * stringp = & string_trash ; char * * uintp = & uint_trash ; switch ( formati ) { case DW_FORM_data1 : * uintp = read_1_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data2 : * uintp = read_2_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data3 : * uintp = read_3_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data4 : * uintp = read_4_byte ( abfd, buf, buf_end ) ; buf += bytes_read ; break ; case DW_FORM_data5 : * uintp = read_5_byte ( abfd, buf, buf_end ) ; buf += bytes_read ;
