<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( <S2SV_ModEnd> arm_sec -> rela
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { return FALSE ; } if (
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) ) { return FALSE ; } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> - 4 ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModEnd> ( bfd_signed_vma )
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; return FALSE ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModEnd> arm_sec -> rela
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( word_offset > ( sec -> sh_size - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) <S2SV_ModEnd> ) return FALSE
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> - 4 ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) || ( sec -> sh_size < 5 && word_offset >= sec -> sh_size ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( ( bfd_signed_vma ) word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) ) || ( ( bfd_signed_vma ) word_offset < sec -> sh_size ) || ( ( bfd_signed_vma ) word_offset > <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> sec -> sh_size - 4 ) <S2SV_ModEnd> ) || (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; return FALSE ; } if ( <S2SV_ModEnd> arm_sec -> rela
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; continue ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size )
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; break ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; continue ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModEnd> ( bfd_signed_vma )
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) ) <S2SV_ModEnd> ) return FALSE
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) <S2SV_ModEnd> || ( (
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; continue ; } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( ( bfd_signed_vma ) word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) ) { return FALSE ; } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( word_offset > <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModEnd> arm_sec -> rela
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; continue ; } if (
<S2SV_ModStart> ; if ( arm_sec -> nrelas == 0 ) { if ( word_offset >= ( sec -> sh_size - 4 ) ) return FALSE ; if ( word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> - 4 ) { if ( word_offset >= ( sec -> sh_size - 4 ) ) return FALSE ; break ; } if ( word_offset > ( sec -> sh_size - 4 ) ) return FALSE ; if ( word_offset >= ( sec -> sh_size - 4 ) ) return FALSE <S2SV_ModEnd> ; word =
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( ( bfd_signed_vma ) word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= ( sec -> sh_size - 4 ) ) return FALSE ; if ( word_offset > ( sec -> sh_size - 5 ) && word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; break ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; continue ; } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; continue ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ) ; break ; } <S2SV_ModEnd> word = byte_get
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) && ( arm_sec -> sh_size < 4 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 5 ) ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( arm_sec -> sh_size < 4 ) ) ) { warn ( _ ( "Skipping invalid arm relocation type %s\\n" ), arm_sec -> sh_name ) ) ; continue ; } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) <S2SV_ModEnd> || ( (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModEnd> ( bfd_signed_vma )
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> - 4 ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) || ( sec -> sh_size < 5 && word_offset >= sec -> sh_size ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; return FALSE ; } } if ( word_offset > ( sec -> sh_size - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> - 4 ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset >= sec -> sh_size - 4 <S2SV_ModEnd> ) || (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( ( bfd_signed_vma ) word_offset < <S2SV_ModEnd> sec -> sh_size
<S2SV_ModStart> ; if ( ( <S2SV_ModStart> - 4 ) ) || ( ( bfd_signed_vma ) word_offset < sec -> sh_size ) || ( ( bfd_signed_vma ) word_offset > sec -> sh_size ) <S2SV_ModEnd> ) || (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> - 4 ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > ( sec -> sh_size - 4 ) || ( sec -> sh_size < 5 && word_offset >= sec -> sh_size ) || ( ( bfd_signed_vma ) word_offset >= sec -> sh_size ) && ( ( bfd_vma ) word_offset >= sec -> sh_size ) ) ) return FALSE ; } if (
<S2SV_ModStart> ; if ( arm_sec -> sh_size < 4 ) { if ( word_offset >= sec -> sh_size ) { warn ( _ ( "Skipping invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( <S2SV_ModStart> - 4 ) && word_offset < <S2SV_ModEnd> sec -> sh_size <S2SV_ModStart> -> sh_size ) && word_offset >= sec -> sh_size ) { warn ( _ ( "Invalid relocation type %s\\n" ), arm_sec -> sh_name ) ; continue ; } if ( word_offset > <S2SV_ModEnd> sec -> sh_size
