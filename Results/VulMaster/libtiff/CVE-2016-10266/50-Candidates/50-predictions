<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( - 1U ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( rowsperstrip == 0 ) return ( ( tmsize_t ) ( - 1 ) ) ) ;
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( - 1U ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( - 1U ) ) ; return ( 0 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu:Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) ( td -> td_imagelength - rowsperstrip - 1U ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_nstrips ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Magick strip overflow", ( unsigned long ) ( - 1U ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( uint32 ) ( td -> td_imagelength - rowsperstrip ) ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) ( td -> td_imagelength - rowsperstrip ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( size_t ) ( td -> td_imagelength - rowsperstrip ) ) ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) ( td -> td_imagelength - rowsperstrip ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_nstrips ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Magick strip overflow", ( unsigned long ) ( - 1U ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu:Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) ( td -> td_imagelength - rowsperstrip ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( - 1U ) ) ; return ( ( tmsize_t ) ( - 1 ) ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) size ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) height ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( ( strip > 0xFFFFFFFFU - rowsperstrip ) || ( strip > 0xFFFFFFFFU - rowsperstrip ) ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( rowsperstrip == 0 ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( - 1 ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu:Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu:strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > size ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) size ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu:Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( ( tmsize_t ) ( - 1 ) ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( rowsperstrip - 1U ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu:Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) tif -> tif_nstrips ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_imagelength ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range", ( unsigned long ) strip, ( unsigned long ) td -> td_nstrips ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( size_t ) ( td -> td_imagelength - rowsperstrip ) ) ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) ( td -> td_imagelength - rowsperstrip ) ) ; return ( 0 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( - 1 ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) ( - 1U ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( ( strip > 0xFFFFFFFFU - rowsperstrip ) || ( strip > 0xFFFFFFFFU - rowsperstrip ) ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) td -> td_nstrips ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ; return ( 0 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu:Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Magick strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Magick strip overflow", ( unsigned long ) ( td -> td_imagelength - rowsperstrip ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( rowsperstrip == 0 ) return ( 0 ) ;
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Divide by zero", ( unsigned long ) ( td -> td_nstrips - 1U ) ) ; return ( - 1 ) ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: strip out of range, max %lu", ( unsigned long ) strip, ( unsigned long ) rowsperstrip ) ) ; return ( - 1 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > ( UINT32_MAX - rowsperstrip - 1U ) / rowsperstrip ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Division by zero", ( unsigned long ) ( - 1U ) ) ; return ( 0 ) ; }
<S2SV_ModStart> -> td_imagelength ; if ( strip > 0xFFFFFFFFU - td -> td_imagelength ) { TIFFErrorExt ( tif -> tif_clientdata, "TIFFReadEncodedStrip", "%lu: Magick strip overflow", ( unsigned long ) ( td -> td_imagelength - 1U ) ) ; return ( - 1 ) ) ; }
