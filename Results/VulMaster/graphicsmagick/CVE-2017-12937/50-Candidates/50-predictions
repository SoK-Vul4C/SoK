<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image )
<S2SV_ModStart> p & ( 0x01 << bit ) )!= 0x01 <S2SV_ModEnd> ) ThrowReaderException ( <S2SV_ModStart> p & ( 0x01 << bit ) )!= 0x01 <S2SV_ModEnd> ) ThrowReaderException (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; if (
<S2SV_ModStart> p & ( 0x01 << bit ) )!= ( 0x01 << bit ) <S2SV_ModEnd> ) ; if <S2SV_ModStart> p & ( 0x01 << bit ) )!= ( 0x01 << bit ) <S2SV_ModEnd> ) ; if
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image )
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maptype
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 32 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maptype
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 ; if ( ( sun_info. magic!= 0x59a66a95 ) && ( sun_info. height!= 0 ) && ( sun_info. depth!= 1 ) && ( sun_info. height!= 1 ) && ( sun_info. depth!= 2 ) && ( sun_info. depth!= 3 ) && ( sun_info. depth!= 4 ) && ( sun_info. depth!= 5 ) ) ThrowReaderException ( CorruptImageError, MemoryAllocationFailed, image ) ) ; break ; } case RMT_NONE : { if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. maplength!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ) ; break ; } case
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 5 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 6 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 5 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; for ( i = 0 ; i < image -> colors ; i ++ ) image -> colormap [ i ]. blue = ScaleCharToQuantum ( sun_colormap [ i ] ) ; } break ; } if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( ( sun_info. columns!= 0 ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; }
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 32 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; for ( i = 0 ; i < image -> colors ; i ++ ) image -> colormap [ i ]. blue = ScaleCharToQuantum ( sun_colormap [ i ] ) ; } break ; } if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( ( sun_info. columns!= 0 ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; }
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 32 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. height!= 0x01 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 ; if ( ( sun_info. magic!= 0x59a66a95 ) && ( sun_info. height!= 0 ) && ( sun_info. depth!= 1 ) && ( sun_info. height!= 1 ) && ( sun_info. depth!= 2 ) && ( sun_info. depth!= 3 ) && ( sun_info. depth!= 4 ) && ( sun_info. depth!= 5 ) ) ThrowReaderException ( CorruptImageError, MemoryAllocationFailed, image ) ) ; break ; } case RMT_RAW : { unsigned char * sun_colormap ; if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. maplength!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ) ; break ; }
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maptype
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; if ( <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 5 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 6 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 7 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; } if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; for ( i = 0 ; i < image -> colors ; i ++ ) image -> colormap [ i ]. blue = ScaleCharToQuantum ( sun_colormap [ i ] ) ; } break ; } if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( ( sun_info. columns!= 0 ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 32 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maptype
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; if ( <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 32 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. type!= RT_STANDARD ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 2 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. maplength!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed,
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; for ( i = 0 ; i < image -> colors ; i ++ ) image -> colormap [ i ]. blue = ScaleCharToQuantum ( sun_colormap [ i ] ) ; } break ; } if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( ( sun_info. columns!= 0 ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; }
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd> ; indexes [ <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; for ( i = 0 ; i < image -> colors ; i ++ ) image -> colormap [ i ]. blue = ScaleCharToQuantum ( sun_colormap [ i ] ) ; } break ; } if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( ( sun_info. columns!= 0 ) && ( sun_info. height!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )!= ( 0x01 << bit <S2SV_ModEnd> )? 0x01 <S2SV_ModStart> p & ( 0x01 << bit ) )!= ( 0x01 << bit ) ) { status = MagickFail ; break ; } if ( ( sun_info. depth > image -> columns ) || ( sun_info. height > image -> rows ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ) ; if ( ( sun_info. maptype == RMT_NONE ) && ( sun_info. maplength!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( ( sun_info. depth > 1 ) && ( sun_info. maplength!= 0 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 8 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed,
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 ; indexes [ x + 7 - bit ] = <S2SV_ModEnd> sun_info. maplength <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 ; indexes [ x + 7 - bit ] = <S2SV_ModEnd> sun_info. maplength <S2SV_ModStart> p & ( 0x01 << bit ) ) { indexes [ x + 7 - bit ] = <S2SV_ModEnd> sun_info. maplength <S2SV_ModStart> sun_info. maplength <S2SV_ModEnd> ; if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. depth!= 4 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 5 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 ; if ( ( sun_info. magic!= 0x59a66a95 ) && ( sun_info. height!= 0 ) && ( sun_info. depth!= 1 ) && ( sun_info. height!= 1 ) && ( sun_info. depth!= 2 ) && ( sun_info. depth!= 3 ) && ( sun_info. depth!= 4 ) && ( sun_info. depth!= 5 ) && ( sun_info. depth!= 6 ) ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ) <S2SV_ModEnd> ; break ;
<S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) )? 0x01 : 0x00 <S2SV_ModEnd>, image ) <S2SV_ModStart> p & ( 0x01 << bit ) ) { if ( sun_info. depth!= 3 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if ( sun_info. height!= 0 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 1 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; if ( sun_info. depth!= 2 ) ThrowReaderException ( ResourceLimitError, MemoryAllocationFailed, image ) ; break ; } if (
