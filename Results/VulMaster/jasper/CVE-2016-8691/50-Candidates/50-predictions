<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < 8 ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < 3 ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 1 ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < JAS_SIZ_NUM_comps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 3 ; siz -> comps [ i ]. prec = 4 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < 1 ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < 4 ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < 7 ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = JAS_FALSE ; siz -> comps [ i ]. prec = JAS_FALSE ; } else { siz -> comps [ i ]. sgnd = JAS_TRUE ; siz -> comps [ i ]. prec = JAS_FALSE ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < 3 ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < JAS_SIZ_NUM_COMP ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. prec = 0 ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < JAS_SIZ_NUM_COMP ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 1 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 2 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 3 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 0 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; }
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < 8 ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 0 ; } else { siz -> comps [ i ]. sgnd = 1 ; }
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else if ( tmp & 0x7f ) { siz -> comps [ i ]. sgnd = 0 ; siz -> comps [ i ]. prec = 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( siz -> numcomps < JAS_SIZ_NUM_comps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = ( tmp & 0x7f ) + 1 ; } else { siz -> comps [ i ]. sgnd = 0 ; } <S2SV_ModEnd> } if (
<S2SV_ModStart> 1 ; } if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 1 ; siz -> comps [ i ]. prec = 1 ; } else if ( tmp & 0x7f == siz -> numcomps ) { siz -> comps [ i ]. sgnd = 2 ; siz -> comps [ i ]. prec = 3 ; } else { siz -> comps [ i ]. sgnd = 0 ; }
