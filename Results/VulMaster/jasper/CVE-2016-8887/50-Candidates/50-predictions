<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } <S2SV_ModEnd> if ( box
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { JAS_Eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { JAS_Eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( * box -> ops -> getdata ) ( box, tmpstream ) ) { JAS_eprintf ( "cannot parse box data\\n" ) ; goto error ; } } jas_stream_close ( tmpstream <S2SV_ModEnd> ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( * box -> ops -> getdata ) ( box, tmpstream ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } } jas_stream_close ( tmpstream <S2SV_ModEnd> ) ; if
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { goto error ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } <S2SV_ModEnd> if ( box
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < 4 ) { jas_eprintf ( "warning: box data length is too small\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: box data length is too small\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: box data length is too small\\n" ) ; goto error ; } box -> datalen -= JP2_BOX_HDRLEN ( true )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: box data length is too large\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot parse box data\\n" ) ; goto error ; } } jas_stream_close ( tmpstream <S2SV_ModEnd> ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } } jas_stream_close ( tmpstream )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: box header has a negative length\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: box header has a negative length\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: box data has a negative length\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: box data has a negative length\\n" ) ; goto error ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) + 1 ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) + 1 ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot parse box data\\n" ) ; goto error ; } } jas_stream_close ( tmpstream <S2SV_ModEnd> ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < 4 ) { jas_eprintf ( "warning: invalid box data length\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: invalid box data length\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: invalid box data length\\n" ) ; goto error ; } box -> datalen -= JP2_BOX_HDRLEN ( true )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf (
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } <S2SV_ModEnd> jas_stream_rewind ( tmpstream
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; }
<S2SV_ModStart> len = len ; if ( box -> datalen < 4 ) { jas_eprintf ( "warning: invalid box data length\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: invalid box data length\\n" ) ; goto error ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: invalid box data length\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( false ) ) {
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; if (
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { jas_eprintf ( "warning: cannot copy box data\\n" ) ; goto error ; } JAS_ASSERT ( 0 == box -> datalen )
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( true ) ; } if ( box -> len
<S2SV_ModStart> len = len ; if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) ; } if ( box -> len < JP2_BOX_HDRLEN ( false ) ) { box -> datalen = JP2_BOX_HDRLEN ( true ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; } if ( box -> datalen < JP2_BOX_HDRLEN ( true ) ) { box -> datalen = JP2_BOX_HDRLEN ( false ) - JP2_BOX_HDRLEN ( false ) ; }
