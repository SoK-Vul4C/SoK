<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY >= p -> height - 1 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height - 1 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height - 1 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY >= p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY >= ( p -> height - 1 ) ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 1 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 1 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height - 1 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> ; break ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } break ; <S2SV_ModStart> += 8 ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> ; break ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif for ( j = ( int ) tocopy ; j > 0 ; j -- ) { if ( * ( context -> frbuff_p. p32 ++ ) == GifIndexToTrueColor ( i -> palette, * pixels ++ ) ) ; } } # endif
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 4 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height - 4 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 2 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height - 4 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 1 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height - 2 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 2 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 4 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY > p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> ; break ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } break ; <S2SV_ModStart> += 8 ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # else if ( p -> height & NGIFLIB_MODE_INDEXED ) { # endif
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } else { context -> frbuff_p. p32 = 0 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY >= i -> height ) { context -> pass ++ ; context -> curY = 0 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> height ) { context -> pass ++ ;
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> p -> height - 2 <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height - 1 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } else { context -> frbuff_p. p32 = 0 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 4 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 4 ) <S2SV_ModStart> += 2 ; if ( context -> curY >= p -> height - 4 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height )
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY >= i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 2 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY > p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> ; break ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif if ( context -> curY >= p -> height - 1 ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } break ;
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 4 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 4 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } else { context -> curY = 0 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 8 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY > p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> height ) { context -> pass ++ ;
<S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> += 2 ; if ( context -> curY >= ( u32 ) p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= ( u32 )
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } break ; default :
<S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> -> height ) { context -> pass ++ ; <S2SV_ModEnd> context -> curY <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 2 ; }
<S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> -> height ) { context -> pass ++ ; <S2SV_ModEnd> context -> curY <S2SV_ModStart> += 2 ; if ( context -> curY >= ( u32 ) p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 2 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> ; break ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif if ( context -> curY <S2SV_ModStart> += 8 ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif if ( * ( context -> frbuff_p. p32 ++ ) == GifIndexToTrueColor ( i -> palette, * pixels ++ ) ) ; } # endif
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY >= p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY >= p -> height ) { context -> pass ++ ; context -> curY = 0 ; }
<S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= i <S2SV_ModEnd> -> height ) <S2SV_ModStart> += 2 ; if ( context -> curY >= i -> height ) { context -> pass ++ ; context -> curY = 0 ; }
<S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> -> curY >= ( u32 ) <S2SV_ModStart> += 2 ; if ( context -> curY >= ( u32 ) p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } <S2SV_ModStart> -> curY >= ( u32 ) p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 2 ; } break ; case 4 : context -> curY += 2 ;
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> ; break ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif if ( context -> curY <S2SV_ModStart> += 8 ; # ifndef NGIFLIB_INDEXED_ONLY if ( p -> mode & NGIFLIB_MODE_INDEXED ) { # endif if ( context -> curY >= p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 4 ; } break ;
<S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 2 ) <S2SV_ModStart> -> curY >= ( <S2SV_ModStart> p -> height - 1 ) <S2SV_ModStart> += 2 ; if ( context -> curY < i -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; }
<S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> context -> curY > <S2SV_ModEnd> p -> height <S2SV_ModStart> += 4 ; <S2SV_ModEnd> break ; case <S2SV_ModStart> += 2 ; if ( context -> curY < p -> height ) { context -> pass ++ ; context -> curY = i -> posY + 1 ; } else { context -> frbuff_p. p32 = 0 ; }
