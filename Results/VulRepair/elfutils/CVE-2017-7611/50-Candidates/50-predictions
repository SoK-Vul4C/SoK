<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd>, idx, <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd>, idx, <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd>, idx,
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd>, idx,
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd>, idx, <S2SV_ModStart> == NULL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd>, idx, <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> entry <S2SV_blank> size <S2SV_blank> does <S2SV_blank> not <S2SV_blank> match <S2SV_blank> Elf32_Word\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd>, idx, <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> entry <S2SV_blank> size <S2SV_blank> does <S2SV_blank> not <S2SV_blank> match <S2SV_blank> Elf32_Word\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> entry <S2SV_blank> size <S2SV_blank> does <S2SV_blank> not <S2SV_blank> match <S2SV_blank> Elf32_Word\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> entry <S2SV_blank> size <S2SV_blank> does <S2SV_blank> not <S2SV_blank> match <S2SV_blank> Elf32_Word\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> ET_REL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ) ; }
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> == NULL ) { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ) ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx
<S2SV_ModStart> { ERROR ( gettext ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> only <S2SV_blank> relocatable <S2SV_blank> files <S2SV_blank> can <S2SV_blank> have <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> section <S2SV_blank> not <S2SV_blank> for <S2SV_blank> symbol <S2SV_blank> table\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\':sh_link <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> extended <S2SV_blank> section <S2SV_blank> index <S2SV_blank> [%2d] <S2SV_blank> is <S2SV_blank> invalid\\n" <S2SV_ModEnd> ), idx <S2SV_ModStart> ( "\\\n <S2SV_blank> section <S2SV_blank> [%2d] <S2SV_blank> \'%s\': <S2SV_blank> entry <S2SV_blank> size <S2SV_blank> does <S2SV_blank> not <S2SV_blank> match <S2SV_blank> Elf32_Word\\n" <S2SV_ModEnd> ), idx
