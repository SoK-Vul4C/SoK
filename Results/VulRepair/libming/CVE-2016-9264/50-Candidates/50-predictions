<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; else if
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( flags & MP3_BITRATE ) == MP3_
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; else if
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; else if
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE )!= MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_SAMPLERATE ) == MP3_SAMPL
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( flags & MP3_BITRATE ) == MP3_
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; else if
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE )!= MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_3 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE )!= MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ;
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; else if
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( flags & MP3_BITRATE ) == MP3_
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( flags & MP3_BITRATE ) == MP3_
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE )!= MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; else if
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; } else
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_3 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] <S2SV_ModEnd> ; else if
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bit
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE ) == MP3
<S2SV_ModStart> ; samplerate_idx = ( flags & MP3_SAMPLERATE ) >> MP3_SAMPLERATE_SHIFT ; if ( ( flags & MP3_CHANNEL ) == MP3_CHANNEL_MONO ) channels = 1 ; else if ( ( flags & MP3_LAYER ) == MP3_LAYER_3 ) bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l1_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else bitrate = mp1l3_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_1 ) bitrate = mp1l2_bitrate_table [ bitrate_idx ] ; else if ( ( flags & MP3_BITRATE ) == MP3_BITRATE_2 ) bit
