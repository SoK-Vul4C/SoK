<S2SV_ModStart> ; if ( crc_offset <S2SV_ModEnd> >= bfd_get_section_size (
<S2SV_ModStart> ; if ( crc_offset < 0 || crc_offset > bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size
<S2SV_ModStart> ; if ( crc_offset < 0 || crc_offset >= bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; }
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size
<S2SV_ModStart> ; if ( crc_offset <S2SV_ModEnd> >= bfd_get_section_size ( <S2SV_ModStart> ; if ( crc_offset <S2SV_ModEnd> >= bfd_get_section_size (
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) <S2SV_ModEnd> return NULL ;
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; }
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { * crc32 = 0 ; return NULL ; }
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) <S2SV_ModEnd> return NULL ;
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { * crc32 = 0 ; return NULL ; }
<S2SV_ModStart> ; if ( crc_offset + 4 > bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) return NULL ; * crc32 = bfd_get_32 ( abfd, contents + crc_offset
<S2SV_ModStart> & ~ 3 ; if ( crc_offset > bfd_get_section_size ( sect ) - 4 ) crc_offset = bfd_get_section_size ( sect ) - 4 ;
<S2SV_ModStart> ; if ( ( crc_offset + 4 ) > bfd_get_section_size ( sect ) - 4 ) { free ( contents ) ; return NULL ; }
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset ) ;
<S2SV_ModStart> crc_offset >= bfd_get_section_size ( abfd <S2SV_ModEnd> ) return NULL
<S2SV_ModStart> crc_offset >= bfd_get_section_size <S2SV_ModEnd> ( sect )
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ) ) ) { free ( contents ) ; return NULL ; }
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { * crc32 = 0 ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; }
<S2SV_ModStart> ~ 3 ; if ( crc_offset > bfd_get_section_size ( sect ) - 4 ) crc_offset = bfd_get_section_size ( sect ) - 4 ;
<S2SV_ModStart> ; if ( crc_offset < 0 || crc_offset + 4 > bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { * crc32 = 0 ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset ) ;
<S2SV_ModStart> & ~ 3 ; if ( crc_offset < 0 || crc_offset > bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ) ) ) { free ( contents ) ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ) ) ) { free ( contents ) ; return NULL ; }
<S2SV_ModStart> ~ 3 ; if ( crc_offset < 0 || crc_offset > bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) return NULL ; * crc32 = bfd_get_32 ( abfd, contents + crc_offset ) ;
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ) ) ) return NULL ; * crc32 = bfd_get_32 ( abfd, contents + crc_offset
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { * crc32 = 0 ; } else { * crc32 = bfd_get_32 ( abfd, contents + crc_offset ) ; }
<S2SV_ModStart> ; if ( crc_offset <S2SV_ModEnd> >= bfd_get_section_size ( <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; }
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> crc_offset >= bfd_get_section_size
<S2SV_ModStart> ; if ( crc_offset > bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { * crc32 = 0 ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) return NULL ; * crc32 = bfd_get_32 (
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { * crc32 = 0 ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> sect ) ) { free ( contents ) ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset ) ;
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ) ) ) { free ( contents ) ; return NULL ; } * crc32 = bfd_get_32 ( abfd, contents + crc_offset ) ;
<S2SV_ModStart> & ~ 3 ; if ( crc_offset > bfd_get_section_size ( sect ) - 4 ) crc_offset = bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ( sect ) ) return NULL ; * crc32 = bfd_get_32 ( abfd, contents + crc_offset
<S2SV_ModStart> if ( crc_offset < 0 || crc_offset > bfd_get_section_size ( sect ) - 4
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> crc_offset >= bfd_get_section_size
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size <S2SV_ModStart> ) ) { * crc32 = 0 ; return NULL ; }
