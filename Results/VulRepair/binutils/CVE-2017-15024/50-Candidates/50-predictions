<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size *
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size *
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; <S2SV_ModEnd> nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 0 ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; <S2SV_ModEnd> nested_funcs [ nesting_level <S2SV_ModStart> ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 <S2SV_ModEnd> ; while (
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; <S2SV_ModEnd> nested_funcs [ nesting_level <S2SV_ModStart> ] = 0 ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 <S2SV_ModEnd> ; while (
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size *
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; nested_funcs [ nesting_level ] = 0 ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( <S2SV_ModEnd> nested_funcs == NULL <S2SV_ModStart> return FALSE ; <S2SV_ModEnd> nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 0 ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ]
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ;
<S2SV_ModStart> -> info_ptr_end ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; int <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; int <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> ; nested_funcs = bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ;
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> = ( struct funcinfo <S2SV_ModEnd> * ) bfd_malloc <S2SV_ModStart> * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ]
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( <S2SV_ModEnd> nested_funcs == NULL <S2SV_ModStart> return FALSE ; <S2SV_ModEnd> nested_funcs [ nesting_level <S2SV_ModStart> ] = 0 ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> ; nested_funcs = bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc ( <S2SV_ModEnd> nested_funcs_size * sizeof <S2SV_ModStart> * ) ) ; if ( nested_funcs == NULL ) return FALSE ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 1 ; <S2SV_ModEnd> while ( nesting_level
<S2SV_ModStart> -> info_ptr_end ; <S2SV_ModEnd> struct funcinfo * <S2SV_ModStart> * nested_funcs ; bfd_size_type <S2SV_ModEnd> nested_funcs_size ; nested_funcs <S2SV_ModStart> * * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> * ) bfd_malloc <S2SV_ModEnd> ( nested_funcs_size * <S2SV_ModStart> ; nested_funcs [ nesting_level ] = 0 ; nested_funcs [ nesting_level ] = 0 ; <S2SV_ModEnd> while ( nesting_level <S2SV_ModStart> ; nested_funcs [ nesting_level
