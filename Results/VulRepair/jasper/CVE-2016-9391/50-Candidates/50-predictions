<S2SV_ModStart> ; assert ( <S2SV_ModEnd> v & JAS_ONES
<S2SV_ModStart> int m ; JAS_ASSERT ( <S2SV_ModEnd> v & JAS_ONES
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return 0 ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; }
<S2SV_ModStart> ; assert ( <S2SV_ModEnd> jpc_bitstream_putbits ( bitstream <S2SV_ModStart> m ) ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; } <S2SV_ModEnd> m = n
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } <S2SV_ModEnd> m = n
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, 1 ) ; return 0 ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream,
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } <S2SV_ModEnd> m = n
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) )!= EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, 1 ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) )!= EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; } <S2SV_ModEnd> m = n
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> n ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> n ) & 1 ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream,
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } <S2SV_ModEnd> m = n
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return 1 ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, 1 ) ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } <S2SV_ModEnd> if ( jpc_bitstream_putbit
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } <S2SV_ModEnd> jpc_bitstream_putbit ( bitstream
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, 0 ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> n ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> n ) & 1 ) ; return EOF ; } <S2SV_ModEnd> m = n
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, 0 ) ; return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v << m ) & 1 ) ; return 0 ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ;
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, 0 ) ; return EOF ; } <S2SV_ModEnd> m = n
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } <S2SV_ModEnd> if ( jpc_bitstream_putbit
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return 0 ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, 0 ) ; return 0 ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; }
<S2SV_ModStart> ; assert ( <S2SV_ModEnd> jpc_bitstream_putbits ( bitstream
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream <S2SV_ModEnd>, 1 )
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) == EOF ) return EOF ;
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v ) == EOF ) { return EOF ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } <S2SV_ModEnd> jpc_bitstream_putbit ( bitstream
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 )!= EOF ) { jpc_bitstream_putbit ( bitstream,
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, 0 ) ; }
<S2SV_ModStart> ( n >= <S2SV_ModEnd> 0 && n <S2SV_ModStart> < 32 ) ; if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) )!= EOF ) { jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) ) ; return EOF ; } if ( jpc_bitstream_putbit ( bitstream, v & JAS_ONES ( n ) )!= EOF ) { jpc_bitstream_putbit ( bitstream,
