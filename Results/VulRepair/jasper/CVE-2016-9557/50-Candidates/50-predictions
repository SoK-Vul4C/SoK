<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = jas_stream_putc ( out, 0 ) ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = jas_stream_putc ( out, 0 ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } if ( jas_stream_putc ( out, 0 )!= 0 ) return - 1
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd && prec >= 3 ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } if ( jas_stream_putc ( out, 0 )!= 0 ) return - 1
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } jas_stream_putc ( out, 0 ) ; if ( jas_stream_putc ( out, 0 )!= 0 ) return - 1
<S2SV_ModStart> ; ulong tmp ; s = jas_stream_allocate ( out, prec ) ; if ( s ) { jas_stream_free ( out ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val <S2SV_ModEnd>, prec )
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec + 1 ) ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } jas_stream_putc ( out, 0 ) ; if ( jas_stream_putc ( out, 0 )!= 0 ) return - 1
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } <S2SV_ModEnd> jas_stream_putc ( out
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val <S2SV_ModEnd>, prec )
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } jas_stream_putc ( out, 0 )
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec + 1 ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } if ( jas_stream_putc ( out, 0xff )!= 0xff ) return - 1
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } jas_stream_putc ( out, 0 )
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0xff ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = decode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } if ( jas_stream_putc ( out, 0xff )!= 0xff ) return - 1
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0xff ) ; return - 1 ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0xff ) ; return - 1 ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } <S2SV_ModEnd> jas_stream_putc ( out
<S2SV_ModStart> ; ulong tmp ; s = jas_stream_allocate ( out, prec ) ; if (! s ) { jas_stream_free ( out ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) ; } if ( jas_stream_putc ( out, 0x7f )!= 0x7f ) return - 1
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0xff ) ; return - 1 ; }
<S2SV_ModStart> ; ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } if (! s ) { jas_stream_putc ( out, 0xff ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp ( val, prec ) <S2SV_ModEnd> ; } jas_stream_putc
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = jas_stream_putc ( out, 0 ) ; return - 1 ; }
<S2SV_ModStart> ulong tmp ; if (! sgnd ) { val = encode_twos_comp ( val, prec ) ; } else { val = encode_twos_comp <S2SV_ModEnd> ( val,
