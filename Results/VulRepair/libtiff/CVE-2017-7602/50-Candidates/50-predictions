<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long )
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %ll
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long )
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; }
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu;
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu"
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] ; TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc ) ; } else { TIFFErrorExt ( tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", (
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu"
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) cc
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; }
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size )
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long )
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long )
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu" <S2SV_ModEnd>, ( unsigned
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc,
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long ) size
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long )
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size ) ;
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc ; } else { TIFFErrorExt ( tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size ) ;
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long ) cc
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; }
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu" <S2SV_ModEnd>, ( unsigned
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long ) size )
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank>
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long )
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; }
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu" <S2SV_ModEnd>, ( unsigned
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) cc, ( unsigned long ) size )
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> ; if ( cc == 0 ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu"
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu" <S2SV_ModEnd>, ( unsigned <S2SV_ModStart>
<S2SV_ModStart> } else { if ( size > TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> = ( tmsize_t ) <S2SV_ModEnd> td -> td_stripoffset <S2SV_ModStart> ] > ( uint64 ) TIFF_TMSIZE_T_MAX ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long )
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc ) ; } else { TIFFErrorExt ( tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, (
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long )
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu" <S2SV_ModEnd>, ( unsigned <S2SV_ModStart>
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; }
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> expected <S2SV_blank> %llu" <S2SV_ModEnd>, ( unsigned
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long ) cc
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long
<S2SV_ModStart> } else { if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu <S2SV_blank> bytes, <S2SV_blank> expected <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; return ( ( tmsize_t ) ( - 1 ) ) ; } <S2SV_ModStart> + size ; if ( cc!= size ) { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc, ( unsigned long long ) size ) ; } else { TIFFErrorExt ( tif -> tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu", ( unsigned long long ) cc ) ; } else { TIFFErrorExt ( tif_clientdata, module, "Read <S2SV_blank> error <S2SV_blank> at <S2SV_blank> scanline <S2SV_blank> %lu; <S2SV_blank> got <S2SV_blank> %llu; <S2SV_blank> got <S2SV_blank> %llu" <S2SV_ModEnd>,
