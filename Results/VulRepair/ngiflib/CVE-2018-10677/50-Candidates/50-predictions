<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + <S2SV_ModEnd> i -> posX
<S2SV_ModStart> parent ) ; i -> curX = i -> posX ; i -> curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX <S2SV_ModStart> -> width ; context. frbuff_p. p32 =
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; # endif # endif
<S2SV_ModStart> ; context. Xtogo <S2SV_ModEnd> = i -> <S2SV_ModStart> width ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p32 = i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX ;
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX <S2SV_ModStart> -> width ; context. frbuff_p. p32 =
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX <S2SV_ModStart> -> width ; context. frbuff_p. p32 =
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> width ; context. frbuff_p. p32 = i
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + <S2SV_ModEnd> i -> posX ;
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # endif
<S2SV_ModStart> parent ) ; context. Xtogo <S2SV_ModEnd> = i -> <S2SV_ModStart> width ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p32 = i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> width ; context. frbuff_p. p32 = i
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX ;
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> width ; context. frbuff_p. p32 = i
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX ;
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX * i -> parent -> width + i -> posX ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32
<S2SV_ModStart> ; context. Xtogo <S2SV_ModEnd> = i -> <S2SV_ModStart> width ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p32 = i -> parent -> frbuff. p32 + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. line_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32
<S2SV_ModStart> parent ) ; i -> curX = i -> posX ; i -> curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context. frbuff_p. p32 = i -> parent -> frbuff. p32 + <S2SV_ModEnd> i -> posX
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; # else
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> parent -> width ; context.
<S2SV_ModStart> parent ) ; i -> curX = i -> posX ; i -> curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. frbuff_p. p32 = context. line_p. p32 + ( u32 ) i -> width ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> parent -> width + i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p32 = context. line_p. p32 + ( u32 ) i -> posX ; # endif
<S2SV_ModStart> parent ) ; context. curX = i -> posX ; context. curY = i -> posY ; # ifdef NGIFLIB_INDEXED_ONLY # ifdef NGIFLIB_ENABLE_CALLBACKS context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> parent -> width ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width + i -> posX ; # else context. line_p. p8 = i -> parent -> frbuff. p8 + ( u32 ) i -> posY * i -> parent -> width ; context. line_p. p8 = context. line_p. p8 + ( u32 ) i -> width ; # endif
