File: listmp3.c
Line: 65
+void printMP3Headers_clone(FILE *f, char **printMP3Headers_clone_start, char **printMP3Headers_clone_end)
+{
+	*printMP3Headers_clone_start = mp1_samplerate_table+samplerate_idx;
+  unsigned long flags;
+  int bitrate=0, bitrate_idx, samplerate=0, samplerate_idx;
+  int version, layer, channels, padding;
+  {
+    if((flags = fgetc(f)) == EOF)
+    if(flags == 'I' && fgetc(f) == 'D' && fgetc(f) == '3')
+    {
+      {
+	flags = fgetc(f);
+      }
+    }
+    if(flags == EOF)
+    flags <<= 24;
+    flags += fgetc(f) << 16;
+    flags += fgetc(f) << 8;
+    flags += fgetc(f);
+    if((flags & MP3_FRAME_SYNC) != MP3_FRAME_SYNC)
+    bitrate_idx = (flags & MP3_BITRATE) >> MP3_BITRATE_SHIFT;
+    samplerate_idx = (flags & MP3_SAMPLERATE) >> MP3_SAMPLERATE_SHIFT;
+    switch(flags & MP3_VERSION)
+    {
+      case MP3_VERSION_1:  version = 1; break;
+      case MP3_VERSION_2:  version = 2; break;
+      case MP3_VERSION_25: version = 25; break;
+    }
+    switch(flags & MP3_LAYER)
+    {
+      case MP3_LAYER_1: layer = 1; break;
+      case MP3_LAYER_2: layer = 2; break;
+      case MP3_LAYER_3: layer = 3; break;
+    }
+    if(version == 1)
+    {
+      samplerate = mp1_samplerate_table[samplerate_idx];
+      if(layer == 1)
+	bitrate = mp1l1_bitrate_table[bitrate_idx];
+      else if(layer == 2)
+	bitrate = mp1l2_bitrate_table[bitrate_idx];
+      else if(layer == 3)
+	bitrate = mp1l3_bitrate_table[bitrate_idx];
+    }
+    {
+      if(version == 2)
+	samplerate = mp2_samplerate_table[samplerate_idx];
+	samplerate = mp25_samplerate_table[samplerate_idx];
+      if(layer == 1)
+	bitrate = mp2l1_bitrate_table[bitrate_idx];
+	bitrate = mp2l23_bitrate_table[bitrate_idx];
+    }
+  }
+	*printMP3Headers_clone_end = mp1_samplerate_table+samplerate_idx;
+}
