



#define IW_INCLUDE_UTIL_FUNCTIONS
#include "imagew.h"

#define IW_COPYRIGHT_YEAR "2011" "\xe2\x80\x93" "2015"

#ifdef IW_WINDOWS
#define IW_INLINE __inline
#else
#define IW_INLINE inline
#endif

#define IW_MSG_MAX 200 


typedef double iw_tmpsample;

#ifdef IW_64BIT
# define 1000000 define 1000000
#else
#define IW_DEFAULT_MAX_DIMENSION 40000 
#define IW_DEFAULT_MAX_MALLOC 2000000000
#endif

#define IW_BKGD_STRATEGY_EARLY 1 
#define IW_BKGD_STRATEGY_LATE  2 

#define IW_NUM_CHANNELTYPES 5 
#define IW_CI_COUNT 4 

struct iw_rr_ctx; 


struct iw_resize_settings {
	int family;
	int edge_policy;
	int use_offset;
	int disable_rrctx_cache;
	double param1; 
	double param2; 
	double blur_factor;
	double out_true_size; 
	double translate; 
	double channel_offset[3]; 
	struct iw_rr_ctx *rrctx;
};

struct iw_channelinfo_in {
	int channeltype;
	int disable_fast_get_sample;
	double maxcolorcode_dbl;
	int maxcolorcode_int;
};

struct iw_channelinfo_intermed {
	int channeltype;

	int cvt_to_grayscale; 
	int corresponding_input_channel; 

	int corresponding_output_channel; 

	double bkgd_color_lin; 

	int need_unassoc_alpha_processing; 
};

struct iw_channelinfo_out {
	int ditherfamily;
	int dithersubtype;
	int channeltype;

	
	
	int color_count; 

	double maxcolorcode_dbl;
	int maxcolorcode_int;

	int use_nearest_color_table;

	double bkgd1_color_lin; 
	double bkgd2_color_lin; 
};

struct iw_prng; 


struct iw_opt_ctx {
	int height, width;
	int imgtype;
	int bit_depth;
	size_t bpr;

	
	
	const iw_byte *pixelsptr;

	
	
	iw_byte *tmp_pixels;

	int has_transparency;
	int has_partial_transparency;
	int has_16bit_precision;
	int has_color;
	int palette_is_grayscale;

	struct iw_palette *palette;

	int has_colorkey_trns;
	unsigned int colorkey[3]; 

	int has_bkgdlabel;
	unsigned int bkgdlabel[4]; 
};

struct iw_option_struct {
	char *name;
	char *val;
};



struct iw_req_struct {
	int output_depth; 
	int output_sample_type; 
	int output_maxcolorcode[IW_NUM_CHANNELTYPES];

	
	int color_count[IW_NUM_CHANNELTYPES]; 

	
	int out_true_valid;
	double out_true_width, out_true_height;

	int output_rendering_intent;

	int output_cs_valid;
	struct iw_csdescr output_cs;

	int suppress_output_cslabel;
	int negate_target;

	int bkgd_valid;
	int bkgd_checkerboard; 
	struct iw_color bkgd; 
	struct iw_color bkgd2; 

	int output_bkgd_label_valid;
	struct iw_color output_bkgd_label; 

	int use_bkgd_label_from_file; 
	int suppress_output_bkgd_label;

	
	int output_format;
	int compression; 
	int page_to_read;
	int include_screen;
	int jpeg_samp_factor_h, jpeg_samp_factor_v; 
	int interlaced;
	int bmp_no_fileheader;

	struct iw_option_struct *options;
	int options_count;
	int options_numalloc;
};

struct iw_context {
	int caller_api_version;
	int use_count;
	unsigned int output_profile;

	iw_mallocfn_type mallocfn;
	iw_freefn_type freefn;

	iw_float32 *intermediate32;
	iw_float32 *intermediate_alpha32;
	iw_float32 *final_alpha32;

	struct iw_channelinfo_in img1_ci[IW_CI_COUNT];

	struct iw_image img1;
	struct iw_csdescr img1cs;
	int img1_imgtype_logical;

	int img1_numchannels_physical;
	int img1_numchannels_logical;
	int img1_alpha_channel_index;

	
	int img1_bkgd_label_set;
	struct iw_color img1_bkgd_label_inputcs;
	struct iw_color img1_bkgd_label_lin; 

	struct iw_channelinfo_intermed intermed_ci[IW_CI_COUNT];
	int intermed_imgtype;
	int intermed_numchannels;
	int intermed_alpha_channel_index;
	int intermed_canvas_width, intermed_canvas_height;

	struct iw_image img2;
	struct iw_csdescr img2cs;
	struct iw_channelinfo_out img2_ci[IW_CI_COUNT];
	int img2_numchannels;

	int ditherfamily_by_channeltype[IW_NUM_CHANNELTYPES]; 
	int dithersubtype_by_channeltype[IW_NUM_CHANNELTYPES]; 
	int uses_errdiffdither;
	struct iw_prng *prng; 

	
	struct iw_resize_settings resize_settings[2];

	int to_grayscale;

	int apply_bkgd; 
	int apply_bkgd_strategy; 
	int bkgd_checkerboard; 
	int bkgd_check_size;
	int bkgd_check_origin[2]; 

#define IW_BKGD_COLOR_SOURCE_NONE 0 
#define IW_BKGD_COLOR_SOURCE_FILE 1 
#define IW_BKGD_COLOR_SOURCE_REQ  2 
	int bkgd_color_source; 

	
	
	double bkgd1alpha, bkgd2alpha;

	void *userdata;
	iw_translatefn_type translate_fn;
	iw_warningfn_type warning_fn;

	int input_maxcolorcode_int;  
	double input_maxcolorcode;

	int support_reduced_input_bitdepths;

	int disable_output_lookup_tables;
	int reduced_output_maxcolor_flag;  

	
#define IW_DITHER_MAXROWS 3
	
	double *dither_errors[IW_DITHER_MAXROWS]; 

	int randomize; 
	int random_seed;

	size_t max_malloc;
	int max_width, max_height;

	int error_flag;
	char *error_msg;

	struct iw_opt_ctx optctx;

	int no_gamma; 
	int intclamp; 
	int grayscale_formula; 
	double grayscale_weight[3];
	int pref_units; 

	
	iw_byte opt_grayscale; 
	iw_byte opt_palette;   
	iw_byte opt_16_to_8;   
	iw_byte opt_strip_alpha; 
	iw_byte opt_binary_trns; 

	int canvas_width, canvas_height;
	int input_start_x, input_start_y, input_w, input_h;

	struct iw_req_struct req;

	
	double *input_color_corr_table;
	
	
	
	double *output_rev_color_corr_table;

	double *nearest_color_table;

	struct iw_zlib_module *zlib_module;
};


struct iw_prng *iwpvt_prng_create(struct iw_context *ctx);
void iwpvt_prng_destroy(struct iw_context *ctx, struct iw_prng *prng);
void iwpvt_prng_set_random_seed(struct iw_prng *prng, int s);
iw_uint32 iwpvt_prng_rand(struct iw_prng *prng); 
int iwpvt_util_randomize(struct iw_prng *prng); 
void* iwpvt_default_malloc(void *userdata, unsigned int flags, size_t n);
void iwpvt_default_free(void *userdata, void *mem);
char* iwpvt_strdup_dbl(struct iw_context *ctx, double n);


struct iw_rr_ctx *iwpvt_resize_rows_init(struct iw_context *ctx,
  struct iw_resize_settings *rs, int channeltype, int num_in_pix, int num_out_pix);
void iwpvt_resize_rows_done(struct iw_rr_ctx *rrctx);
void iwpvt_resize_row_main(struct iw_rr_ctx *rrctx, iw_tmpsample *in_pix, iw_tmpsample *out_pix);


void iwpvt_optimize_image(struct iw_context *ctx);
