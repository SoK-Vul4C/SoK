<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> for ( tileno
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> ) ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ;
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ;
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ;
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ||! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { jas_eprintf ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return 0 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; size = sizeof ( jpc_dec_tile_t ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) <S2SV_ModEnd> ) { return <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), size ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> ) ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> -> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ;
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ;
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtileno <S2SV_ModStart> dec -> numvtileno, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ||! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) return - 1 ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return <S2SV_ModEnd> - 1 ; <S2SV_ModStart> dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ) { return - 1 ; } size = JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> for ( tileno
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart>  tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> for ( tileno
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ) { jas_eprintf ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtileno <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ;
<S2SV_ModStart> jpc_dec_cmpt_t * cmpt ; size_t size ; <S2SV_ModStart> -> tileheight ) ; if (! jas_safe_size_mul ( dec -> numhtiles, dec -> numvtiles, & size <S2SV_ModEnd> ) ) { return <S2SV_ModStart> - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size <S2SV_ModEnd> ) ) { <S2SV_ModStart> return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ), sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; if (! ( dec -> tiles = jas_alloc2 ( dec -> numtiles, sizeof ( jpc_dec_tile_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> for ( tileno
<S2SV_ModStart> * cmpt ; size_t size ; <S2SV_ModStart> tileheight ) ; if (! jas_safe_size_mul ( <S2SV_ModEnd> dec -> numhtiles <S2SV_ModStart> dec -> numhtiles, <S2SV_ModEnd> dec -> numvtiles <S2SV_ModStart> dec -> numvtiles, & size ) ) { return - 1 ; } dec -> numtiles = size ; JAS_DBGLOG ( 10, ( "numtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numhtiles <S2SV_blank> = <S2SV_blank> %d; <S2SV_blank> numvtiles <S2SV_blank> = <S2SV_blank> %d;\\n", dec -> numtiles, dec -> numhtiles, dec -> numvtiles ) ) ; return - 1 ; }
