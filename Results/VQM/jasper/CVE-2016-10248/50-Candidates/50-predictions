<S2SV_ModStart> tsfb -> numlvls > 0 && jas_seq2d_size ( a )
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( tsfb -> numlvls > 0 ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_tsfb_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ),
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), tsfb -> numlvls ) ; jas_seq2d_setref ( a, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a )
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( tsfb -> numlvls > 0 ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_tsfb_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_width
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), <S2SV_ModEnd> jas_seq2d_width
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), tsfb -> numlvls ) ; jas_seq2d_setref ( a, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ),
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), tsfb -> numlvls
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ),
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( tsfb -> numlvls > 0 ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_tsfb_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a )
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), tsfb -> numlvls ) ; return jas_tsfb_synthesize2 ( tsfb, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( tsfb -> numlvls > 0 ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_tsfb_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ),
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height (
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_seq2d_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( jas_seq2d_width ( a ) > jas_seq2d_width ( a ) || jas_seq2d_height ( a ) > jas_seq2d_height ( a ) ) { jas_eprintf ( "invalid <S2SV_blank> sampling <S2SV_blank> rate <S2SV_blank> value <S2SV_blank> %d\\n", tsfb -> numlvls, jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a
<S2SV_ModStart> tsfb -> numlvls < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } if ( tsfb -> numlvls > 0 ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> tsfb_synthesize" ) ; } return jas_tsfb_synthesize2 ( tsfb, jas_seq2d_xstart ( a ), jas_seq2d_ystart ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_rowstep ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ), jas_seq2d_width ( a ), jas_seq2d_width ( a ), jas_seq2d_height ( a ),
