<S2SV_ModStart> int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (!
<S2SV_ModStart> int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (!
<S2SV_ModStart> int m ; if ( n < 0 || n >= 32 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (!
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v &
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) ; return EOF <S2SV_ModEnd> ; } <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "invalid <S2SV_blank> number <S2SV_blank> of <S2SV_blank> bits <S2SV_blank> in <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> & ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "invalid <S2SV_blank> number <S2SV_blank> of <S2SV_blank> bits <S2SV_blank> in <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> & ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "invalid <S2SV_blank> number <S2SV_blank> of <S2SV_blank> bits <S2SV_blank> in <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jasm_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "invalid <S2SV_blank> number <S2SV_blank> of <S2SV_blank> bits <S2SV_blank> in <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v &
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jasm_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } else { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; return EOF <S2SV_ModEnd> ; } <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } v <<= 1 ; } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & JAS_ONES ( n ) ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ( ~ JAS_ONES ( n ) ) ) ) ; return EOF <S2SV_ModEnd> ; } <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> m ; if <S2SV_ModEnd> ( n <S2SV_ModStart> ( n < 0 || n >= <S2SV_ModEnd> 32 ) <S2SV_ModStart> 32 ) { return EOF ; } <S2SV_ModEnd> assert (
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & 1 ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & 1 ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } else { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> long v ) ) ) ; return EOF <S2SV_ModEnd> ; } <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> while ( -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & 1 ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "invalid <S2SV_blank> number <S2SV_blank> of <S2SV_blank> bits <S2SV_blank> in <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { return EOF ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } else { jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ) { jas_eprintf ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; return EOF ; } <S2SV_ModEnd> m = n - 1 ; while <S2SV_ModStart> -- n >= 0 ) { if ( jas_bitstream_putbit ( bitstream, ( v & 1 ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> long v ) { int m ; if ( n < 0 || n >= 32 ) { jpc_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jpc_bitstream_putbits" ) ; } <S2SV_ModEnd> assert (! ( v & ( <S2SV_ModStart> ~ JAS_ONES ( n ) ) ) ; while ( -- n >= 0 ) { if ( jpc_bitstream_putbit ( bitstream, ( v >> m ) & 1 ) == EOF ) { return EOF ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
