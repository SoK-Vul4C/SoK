<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert
<S2SV_ModStart> ; bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert (
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( val < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( sgnd ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> assert ( (
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> assert ( (
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( val >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec > 2 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( val < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> value <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; unsigned <S2SV_ModStart> tmp ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( val < 0 ) { jas_deprecated ( "negative <S2SV_blank> precision <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec == 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( val < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec >= 1 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec < 0 || prec >= 2 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec == 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; unsigned <S2SV_ModStart> tmp ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; unsigned <S2SV_ModStart> tmp ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec >= 3 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec >= 4 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( sgnd ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec > 2 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( val < 0 ) { jas_deprecated ( "negative <S2SV_blank> precision <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( sgnd ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> encode_twos_comp" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec >= 1 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong tmp ; if ( prec >= 3 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( sgnd ) { val = encode_twos_comp ( val, prec ) ; } <S2SV_ModEnd> if ( sgnd
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> bool s ; unsigned int tmp ; if ( prec > 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> assert ( (
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ; if ( val < 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; jas_ulong <S2SV_ModEnd> tmp ; assert <S2SV_ModStart> ) ) ; if ( val < 0 ) { jas_deprecated ( "negative <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putc" ) ; }
<S2SV_ModStart> bool s ; unsigned <S2SV_ModStart> & tmp ; if ( prec >= 0 ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; }
<S2SV_ModStart> if ( s ) { jas_deprecated ( "negative <S2SV_blank> prec <S2SV_blank> count <S2SV_blank> for <S2SV_blank> jas_stream_putint" ) ; } <S2SV_ModEnd> assert ( (
