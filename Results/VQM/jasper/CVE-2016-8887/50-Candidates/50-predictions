<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; jas_stream_rewind ( tmpstream ) ; <S2SV_ModStart> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ;
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; if ( box -> datalen > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; }
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf (
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" )
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> large <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> large <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ;
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } else { if ( ( box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; }
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; box -> ops -> getdata = & jp2_box_ops -> getdata <S2SV_ModStart> ) ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; box -> ops -> getdata = & jp2_box_ops -> getdata
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> large <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" )
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" )
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> large <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf (
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = ( * box -> ops -> getdata ) ( box, tmpstream ) ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } else { box -> ops -> getdata = 0 ; } jas_stream_rewind ( tmpstream ) ;
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops ->
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" )
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n
<S2SV_ModStart> -> ops ; box -> ops = & boxinfo -> ops ; box -> len = len ; if ( box -> len == 1 ) { if ( jp2_getuint64 ( in, & extlen ) > 0xffffffffUL ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> 64-bit <S2SV_blank> box <S2SV_blank> length\\n" ) ; extlen = 0xffffffffUL ; } <S2SV_ModStart> datalen ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = ( * box -> ops -> getdata ) ( box, tmpstream ) ) ; box -> ops -> getdata = extlen ; } else { box -> ops -> getdata = extlen ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = extlen
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = ( * box -> ops -> getdata ) ( box, tmpstream ) ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } else { box -> ops -> getdata = & jp2_box_ops -> getdata ; } <S2SV_ModEnd> if ( (
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ;
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> large <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" )
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } else { if ( ( box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ;
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ;
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error ; }
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = ( * box -> ops -> getdata ) ( box, tmpstream ) ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } else { box -> ops -> getdata = 0 ; } <S2SV_ModEnd> if ( (
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if (! ( box -> ops -> getdata ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" )
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { jas_eprintf (
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> large <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = & jp2_box_ops -> getdata ;
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = ( * box -> ops -> getdata ) ( box, tmpstream ) ; } jas_stream_rewind ( tmpstream ) ; if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } else { box -> ops -> getdata = 0 ; } <S2SV_ModEnd> if ( (
<S2SV_ModStart> -> ops ; box -> ops = & boxinfo -> ops ; box -> len = len ; if ( box -> len == 1 ) { if ( jp2_getuint64 ( in, & extlen ) > 0xffffffffUL ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> 64-bit <S2SV_blank> box <S2SV_blank> length\\n" ) ; extlen = 0xffffffffUL ; } <S2SV_ModStart> datalen ) ) { jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = ( * box -> ops -> getdata ) ( box, tmpstream ) ) ; box -> ops -> getdata = extlen ; } else { box -> ops -> getdata = extlen ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = extlen
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind (
<S2SV_ModStart> -> ops ; if ( len > JP2_BOX_HDRLEN ( true ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> handle <S2SV_blank> large <S2SV_blank> box <S2SV_blank> length\\n" ) ; goto error ; } <S2SV_ModStart> = len ; <S2SV_ModEnd> if ( box <S2SV_ModStart> tmpstream ) ) { <S2SV_ModEnd> jas_eprintf ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" <S2SV_ModStart> ( "cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 0 ; } if ( box -> ops -> getdata ) { if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> copy <S2SV_blank> box <S2SV_blank> data\\n" ) ; goto error ; } } jas_stream_rewind ( tmpstream ) ; box -> ops -> getdata = 1 ; if ( ( * box -> ops -> getdata ) ( box, tmpstream ) ) { jas_eprintf ( "warning: <S2SV_blank> cannot <S2SV_blank> get <S2SV_blank> data\\n" ) ; goto error ; } } <S2SV_ModEnd> box -> ops
