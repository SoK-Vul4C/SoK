<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } if (
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if ( jp2_getuint32 <S2SV_ModEnd> ( in,
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( <S2SV_ModEnd> uint_fast32_t ) )
<S2SV_ModStart> 0 ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (! (
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents ) || jp2_getuint8 ( in, & pclr -> numchans ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> 0 ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (! (
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( <S2SV_ModEnd> uint_fast32_t ) ) <S2SV_ModStart> ; } } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> 0 ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (! (
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents ) || jp2_getuint8 ( in, & pclr -> numchans ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( j = 0 ; j < pclr -> numchans ; ++ j ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ j ] ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ||! ( pclr -> numchans || jp2_getuint16 ( in, & pclr -> numlutents ) || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> bpc, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } else { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] & 0xf0 ) || jp2_getuint8 ( in, & pclr -> bpc [ i ] & 0x80 ) ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] & 0xf0 ) ) { return - 1 ; } }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { pclr -> bpc [ i ] = 0 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; }
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numlutents ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] & 0x80 ) || jp2_getuint8 ( in, & pclr -> bpc [ i ] & 0x700 ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( j = 0 ; j < pclr -> numchans ; ++ j ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ j ] ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast8_t ) ) ) ) { return - 1 ; } for ( i = 0 ; i < pclr -> numchans ; ++ i ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ i ] & 0x80 ) || jp2_getuint8 ( in, & pclr -> bpc [ i ] & 0x700 ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ; if (! ( pclr -> numlutents || jp2_getuint8 ( in, & pclr -> numchans ) ) ) { return - 1 ; } lutsize = pclr -> numlutents * pclr -> numchans ; if (! ( pclr -> lutdata = jas_alloc2 ( lutsize, sizeof ( int_fast32_t ) ) ) ) { return - 1 ; } if (! ( pclr -> bpc = jas_alloc2 ( pclr -> numchans, sizeof ( uint_fast32_t ) ) ) ) { return - 1 ; } for ( j = 0 ; j < pclr -> numlutents ; ++ j ) { if ( jp2_getuint8 ( in, & pclr -> bpc [ j ] ) ) { return - 1 ; } } } return 0 ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
