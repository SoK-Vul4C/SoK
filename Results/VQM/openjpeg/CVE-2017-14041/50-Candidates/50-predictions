<S2SV_ModStart> ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp,
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp,
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" )
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" <S2SV_ModEnd> ) ; <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n"
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n"
<S2SV_ModStart> ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp, <S2SV_ModStart> ( f, "PG%31[ <S2SV_blank> \\t]%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp,
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp, <S2SV_ModStart> ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp,
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; }
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf()
<S2SV_ModStart> ( fscanf ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp, &
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ;
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" <S2SV_ModEnd> ) ; <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" )
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf()
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } else { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> & endian1 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" <S2SV_ModEnd> ) ; <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } else { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( fscanf ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; }
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fseek ( f, SEEK_SET ) ; if ( fscanf ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf()
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" )
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } else { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> for ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fseek ( f, SEEK_SET ) ; if ( fscanf ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" )
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( force8 ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } else { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } if ( fscanf ( f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } <S2SV_ModEnd> if ( <S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t
<S2SV_ModStart> f, "PG%31[ <S2SV_blank> \\t]%c%c%31[ <S2SV_blank> \\t+-]%d%31[ <S2SV_blank> \\t]%d%31[ <S2SV_blank> \\t]%d" <S2SV_ModEnd>, temp <S2SV_ModStart> ) { fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; } fclose ( f ) ; fprintf ( stderr, "ERROR: <S2SV_blank> Failed <S2SV_blank> to <S2SV_blank> read <S2SV_blank> the <S2SV_blank> right <S2SV_blank> number <S2SV_blank> of <S2SV_blank> element <S2SV_blank> from <S2SV_blank> the <S2SV_blank> fscanf() <S2SV_blank> function!\\n" ) ; return NULL ; }
