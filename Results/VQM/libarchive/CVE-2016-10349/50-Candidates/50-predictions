<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "File <S2SV_blank> does <S2SV_blank> not <S2SV_blank> exist" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "file <S2SV_blank> too <S2SV_blank> short" ) ; return ( truncated_error ( a ) ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "File <S2SV_blank> too <S2SV_blank> short" ) ; return ( truncated_error ( a ) ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file\\n" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> too <S2SV_blank> small <S2SV_blank> file <S2SV_blank> size" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> too <S2SV_blank> small <S2SV_blank> file <S2SV_blank> size" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Insufficient <S2SV_blank> file <S2SV_blank> size" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> too <S2SV_blank> small <S2SV_blank> file <S2SV_blank> size" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( ( p = archive_read_ahead ( a, 1, NULL ) ) == NULL ) return ( truncated_error ( a ) ) ; if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> too <S2SV_blank> small <S2SV_blank> file <S2SV_blank> size" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "File <S2SV_blank> does <S2SV_blank> not <S2SV_blank> exist" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Insufficient <S2SV_blank> file <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( truncated_error ( a ) ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file\\n" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "File <S2SV_blank> does <S2SV_blank> not <S2SV_blank> exist" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> out <S2SV_blank> of <S2SV_blank> bounds" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Input <S2SV_blank> requires <S2SV_blank> too <S2SV_blank> many <S2SV_blank> cab <S2SV_blank> entries" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> directory <S2SV_blank> outside <S2SV_blank> valid <S2SV_blank> range" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> small" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> small" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Insufficient <S2SV_blank> file <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> out <S2SV_blank> of <S2SV_blank> range" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> too <S2SV_blank> small <S2SV_blank> size" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file\\n" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> file: <S2SV_blank> too <S2SV_blank> small <S2SV_blank> size" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> too <S2SV_blank> small <S2SV_blank> file <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> small <S2SV_blank> size" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> small <S2SV_blank> size" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "file <S2SV_blank> too <S2SV_blank> short" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file: <S2SV_blank> symlink <S2SV_blank> contents <S2SV_blank> exceed <S2SV_blank> 1 <S2SV_blank> megabyte" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> small <S2SV_blank> for <S2SV_blank> this <S2SV_blank> archive.\\n" ) ; return ( err ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "File <S2SV_blank> too <S2SV_blank> short" ) ; return ( ENOMEM ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset + len > ARCHIVE_MAX_FILE_SIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( err ) ; } if (
