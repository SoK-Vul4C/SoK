<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Corrupt <S2SV_blank> cab <S2SV_blank> header" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Corrupt <S2SV_blank> cab <S2SV_blank> header" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Corrupt <S2SV_blank> CAB <S2SV_blank> header" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFS ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Corrupt <S2SV_blank> CAB <S2SV_blank> header" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > 1024 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > ARCHIVE_MAX_FILE_SIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX - CFHEADER_COFFFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAX_FILE_SIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX - CFHEADER_cbCabinet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFileSIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> inconsistent <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFS ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > 64 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFS ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> malformed <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> inconsistent <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> inconsistent <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> if ( ( a -> archive. archive_format == ARCHIVE_FORMAT_CAB && cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> malformed <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Input <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> File <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > 1024 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > 1024 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> malformed <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset < 0 || cab -> cab_offset > 1024 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> archive: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX - CFHEADER_cbCabinet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAX_FILE_SIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > ARCHIVE_MAX_FILE_SIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX - CFHEADER_COFFFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > 64 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> inconsistent <S2SV_blank> directory <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Bad <S2SV_blank> cab <S2SV_blank> header" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX - CFHEADER_COFFFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > 64 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > ARCHIVE_MAX_FILE_SIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> CAB <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX - CFHEADER_cbCabinet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFileSIZE ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> file <S2SV_blank> too <S2SV_blank> short" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset == 0 || cab -> file_count > CFHEADER_MAXFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Corrupt <S2SV_blank> cab <S2SV_blank> header" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ) ; if ( cab -> cab_offset == 0 ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Rejecting <S2SV_blank> cab <S2SV_blank> header: <S2SV_blank> inconsistent <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } if (
<S2SV_ModStart> ; if ( cab -> cab_offset < 0 || cab -> cab_offset > SIZE_MAX - CFHEADER_COFFFiles ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_FILE_FORMAT, "Corrupt <S2SV_blank> cab <S2SV_blank> header" ) ; return ( ARCHIVE_FATAL ) ; } if (
