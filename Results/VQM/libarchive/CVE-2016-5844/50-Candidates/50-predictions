<S2SV_ModStart> = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> skipsize = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> skipsize = LOGICAL_BLOCK_SIZE + ( int64_t ) <S2SV_ModStart> skipsize = LOGICAL_BLOCK_SIZE + ( int64_t )
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t )
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> } <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> retrieve <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> data" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size: <S2SV_blank> %d", skipsize ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> } <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModEnd> vd -> location ; skipsize -= iso9660 -> current_position <S2SV_ModStart> ( a -> archive, ARCHIVE_ERRNO_MI
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> contain <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> data" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size." ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize < iso9660 -> joliet ) { skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModEnd> vd -> location ; skipsize -= iso9660 -> joliet <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize =
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> location" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> retrieve <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume (
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size." ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume <S2SV_ModStart> ( a, skipsize ) ; if ( skipsize > ( int64_t ) (
<S2SV_ModStart> = LOGICAL_BLOCK_SIZE + ( int64_t ) <S2SV_ModStart> = LOGICAL_BLOCK_SIZE + ( int64_t )
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL )
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> position" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size: <S2SV_blank> %d", skipsize ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> retrieve <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> state" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> negative <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> a <S2SV_blank> negative <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize < iso9660 -> joliet ) { skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModEnd> vd -> location ; skipsize -= iso9660 -> current_position <S2SV_ModStart> ( a -> archive, ARCHIVE_ERRNO_MI
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> positive <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL ) ; }
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize < iso9660 -> joliet ) { skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModEnd> vd -> location ; skipsize -= iso9660 -> joliet <S2SV_ModStart> ( a -> archive, ARCHIVE_ERRNO_MI
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> parse <S2SV_blank> volume <S2SV_blank> data" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModEnd> vd -> location ; skipsize -= iso9660 -> joliet <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize =
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size: <S2SV_blank> %d", skipsize ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ;
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size." ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModEnd> iso9660 -> joliet ) ; skipsize -= iso9660 -> <S2SV_ModStart> ( iso9660 -> joliet ) ; skip
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> a <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> size" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> location" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> skip <S2SV_blank> in <S2SV_blank> ISO9660 <S2SV_blank> directory <S2SV_blank> list" ) ; return ( ARCHIVE
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int64_t ) skipsize ) ; if ( skipsize > iso9660 -> joliet ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> retrieve <S2SV_blank> a <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> data" ) ; return ( ARCHIVE_FATAL
<S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) <S2SV_ModStart> ( iso9660 -> joliet ) ; skipsize = LOGICAL_BLOCK_SIZE * ( int64_t ) __archive_read_consume ( a, skipsize ) ; skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize < 0 ) return ( ( int ) skipsize ) ; skipsize -= skipsize ; skipsize = __archive_read_consume ( a, skipsize ) ; if ( skipsize > ( int64_t ) ( int64_t ) ( int64_t ) ( ( int64_t ) skipsize ) ) { archive_set_error ( & a -> archive, ARCHIVE_ERRNO_MISC, "Failed <S2SV_blank> to <S2SV_blank> get <S2SV_blank> valid <S2SV_blank> volume <S2SV_blank> position" ) ; return ( ARCHIVE_FATAL ) ; } <S2SV_ModEnd> skipsize -= iso9660 -> current_position ; skipsize = __archive_read_consume
