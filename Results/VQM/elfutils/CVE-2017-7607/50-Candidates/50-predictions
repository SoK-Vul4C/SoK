<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( data -> d_size == data -> d_size ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( data -> d_size == data -> d_size ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; goto invalid_data ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; goto invalid_data ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d" ), ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ) + 1 ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d" ), ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ) ) ; return ; } <S2SV_ModStart> ( ( Elf32_Word * ) data -> d_buf ) [ 1 ] ; if ( unlikely ( data -> d_size == data -> d_size ) ) { error ( 0, 0, gettext ( "data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d: <S2SV_blank> %s", ( int ) elf_ndxscn ( scn ) ), ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ; return ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; goto invalid_data ; } <S2SV_ModStart> + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ELFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; goto invalid_data ; }
<S2SV_ModStart> ) + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ), elf_errmsg ( - 1 ) ) ; return ; } <S2SV_ModStart> ) + 1 ] ; if ( unlikely ( elf_getclass ( ebl -> elf ) == ElFCLASS64 ) ) { error ( 0, 0, gettext ( "invalid <S2SV_blank> data <S2SV_blank> in <S2SV_blank> gnu.hash <S2SV_blank> section <S2SV_blank> %d", ( int ) elf_ndxscn ( scn ) ) ) ; return ; }
