<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd_error
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ;
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> if ( low_pc ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> size, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid_address, " <S2SV_blank> 0x%08x", ( unsigned int ) info_ptr ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( b
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> size, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ;
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( b
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 6, <S2SV_blank> 7 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length." ) ) ; return NULL ; }
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> if ( low_pc < 0 ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( b
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr || offset_size > bytes_read ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid_address, " <S2SV_blank> 0x%08x", ( unsigned int ) info_ptr ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), offset_size ) ;
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( b
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length" ) ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 6, <S2SV_blank> 7 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; }
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; }
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), offset_size ) ; bfd_set_
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 6, <S2SV_blank> 7 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 6, <S2SV_blank> 7 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; }
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; }
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid_address, " <S2SV_blank> 0x%08x", ( unsigned int ) info_ptr ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), offset_size ) ; bfd_
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; }
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid_address, " <S2SV_blank> 0x%08x", ( unsigned int ) info_ptr ) ; return NULL ; } <S2SV_ModStart> ) { if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), offset_size ) ; bfd_set_
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid_address, " <S2SV_blank> 0x%08x", ( unsigned int ) info_ptr ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), offset_size ) ;
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> size, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> if ( low_pc ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid_address, " <S2SV_blank> 0x%08x", ( unsigned int ) info_ptr ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 6, <S2SV_blank> 7 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5, <S2SV_blank> 6, <S2SV_blank> 7 <S2SV_blank> information." ) ) ;
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error ( bfd
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 6, <S2SV_blank> 7 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ++ ; if ( offset_size > end_ptr || offset_size > bytes_read ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." )
<S2SV_ModStart> ) { if ( info_ptr + unit_length > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> dwarf <S2SV_blank> unit <S2SV_blank> length, <S2SV_blank> 1, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), info_ptr ) ; return NULL ; } if ( <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> size, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ), addr_size ) ; bfd_set_error ( bfd_error_invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 2, <S2SV_blank> 3, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; return NULL ; } <S2SV_ModStart> ) { if ( info_ptr + addr_size > end_ptr ) { bfd_set_error ( bfd_error_handler ( _ ( "Dwarf <S2SV_blank> Error: <S2SV_blank> invalid <S2SV_blank> address <S2SV_blank> length, <S2SV_blank> 4, <S2SV_blank> 5 <S2SV_blank> information." ) ) ; bfd_set_error (
