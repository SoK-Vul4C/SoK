<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) <S2SV_ModEnd> ) return NULL
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) <S2SV_ModEnd> ) return NULL
<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) ) return NULL ; if (
<S2SV_ModStart> ; if (! bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ( crc_offset >= bfd_get_section_size ( sect ) <S2SV_ModEnd> ) return NULL
<S2SV_ModStart> ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= <S2SV_ModEnd> bfd_get_section_size ( sect
<S2SV_ModStart> ( crc_offset >= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) ) return NULL ; if (
<S2SV_ModStart> if ( crc_offset >= <S2SV_ModEnd> bfd_get_section_size ( sect <S2SV_ModStart> ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( crc_offset >= <S2SV_ModEnd> bfd_get_section_size ( sect
<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) ||
<S2SV_ModStart> & ~ 3 ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32
<S2SV_ModStart> ; if ( ( bfd_get_section_size ( sect ) ) || ( crc_offset >= bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if (! bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( crc_offset >= <S2SV_ModEnd> bfd_get_section_size ( sect <S2SV_ModStart> ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> & ~ 3 ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32 (
<S2SV_ModStart> ; if ( bfd_get_section_size ( sect ) >= <S2SV_ModEnd> bfd_get_section_size ( sect
<S2SV_ModStart> & ~ 3 ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size <S2SV_ModEnd> ( sect )
<S2SV_ModStart> ; if ( <S2SV_ModEnd> bfd_get_section_size ( sect <S2SV_ModStart> ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( ( bfd_get_section_size ( sect ) ) || ( crc_offset >= bfd_get_section_size ( sect ) ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> & ~ 3 ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32 (
<S2SV_ModStart> ; if ( ( bfd_get_section_size ( sect ) ) && ( crc_offset >= bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( bfd_get_section_size <S2SV_ModEnd> ( sect )
<S2SV_ModStart> ; if (! bfd_check_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( ( bfd_get_section_size ( sect ) ) && ( crc_offset >= bfd_get_section_size ( sect ) ) ) return NULL ; if (
<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents + crc_offset ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32
<S2SV_ModStart> ; if (! bfd_get_section_size ( sect ) ) return NULL ; if (
<S2SV_ModStart> ; if ( checksum_offset >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> <= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32
<S2SV_ModStart> ; if ( crc_offset >= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32
<S2SV_ModStart> ; if ( bfd_get_section_size ( sect ) == NULL ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ( crc_offset >= bfd_get_section_size <S2SV_ModEnd> ( sect )
<S2SV_ModStart> ; if ( bfd_get_section_size <S2SV_ModEnd> ( sect ) <S2SV_ModStart> ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( ( bfd_get_section_size ( sect ) ) && ( crc_offset >= bfd_get_section_size ( sect ) ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) || ( crc_offset >= bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) ||
<S2SV_ModStart> ( crc_offset >= bfd_get_section_size ( sect ) || ( crc_offset >= bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( ( bfd_get_section_size ( sect ) ) || ( crc_offset >= bfd_get_section_size ( sect ) ) ) return NULL ; if (
<S2SV_ModStart> ; if ( checksum_offset >= bfd_get_section_size ( sect ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) || ( crc_offset >= bfd_get_section_size ( sect ) ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) ) { free ( contents + crc_offset ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset >= bfd_get_section_size ( sect ) ||! bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ( crc_offset >= bfd_get_section_size ( sect ) || ( crc_offset >= bfd_get_section_size ( sect ) ) ) { return NULL ; } <S2SV_ModEnd> * crc32 =
