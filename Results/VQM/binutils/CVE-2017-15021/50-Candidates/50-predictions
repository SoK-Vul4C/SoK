<S2SV_ModStart> ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ( sect ) ) { free ( name ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( <S2SV_ModEnd> crc_offset >= bfd_get_section_size
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> <= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } return name ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel, bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & bfd_get_section_size ( sect ), & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> ; if ( <S2SV_ModEnd> bfd_get_section_size ( sect
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel ) ) { free ( name ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) >= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & contents ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart>!= bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 = bfd_get_32
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == bfd_malloc_and_get_section ( abfd, sect, & bfd_get_section_size ( sect ), & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel, & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if (! bfd_malloc_and_get_section ( abfd, sect, & contents ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) == NULL ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel, & bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section_size ( sect ), & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sect, & bfd_get_section_size ( sect ) ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_get_section_size ( sect ) > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32 =
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents ) ) { free ( contents ) ; return NULL ; } <S2SV_ModEnd> * crc32
<S2SV_ModStart> if ( crc_offset + 4 > bfd_get_section_size ( sect ) ) { free ( contents ) ; return NULL ; } if ( bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( abfd, sect, & contents )!= bfd_malloc_and_get_section ( sel ) ) return NULL ; } <S2SV_ModEnd> * crc32 =
