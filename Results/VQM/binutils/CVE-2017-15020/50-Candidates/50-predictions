<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ;
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; }
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ;
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ;
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ;
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) <S2SV_ModEnd> xptr += 4
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) <S2SV_ModEnd> xptr += 4
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; }
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; }
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } }
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 2 ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) { return FALSE ; } <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) { return FALSE ; }
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ;
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ;
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ;
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } <S2SV_ModEnd> } return TRUE
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { return FALSE ; } <S2SV_ModEnd> aUnit -> linenumber_table <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ;
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } else { aUnit -> linenumber_table [ eachLine ]. linenumber = NULL ; } } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } else { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } }
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } }
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } else { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; }
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } } }
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; <S2SV_ModEnd> } return TRUE
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } else { aUnit -> linenumber_table [ eachLine ]. linenumber = NULL ; } } } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } else { aUnit -> linenumber_table [ eachLine ]. linenumber = NULL ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> if ( xptr >= ( sizeof ( struct linenumber ) * aUnit -> line_count ) <S2SV_ModEnd> ) { unsigned <S2SV_ModStart> ++ ) { bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) <S2SV_ModEnd> xptr += 4
<S2SV_ModStart> -> line_section_end ) return FALSE ; if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) return FALSE ; <S2SV_ModStart> ++ ) { if ( ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) || ( bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < sizeof ( aUnit -> linenumber_table ) ) ) { aUnit -> linenumber_table [ eachLine ]. linenumber = bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; aUnit -> linenumber_table [ eachLine ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; } xptr += 4
