<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr < base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr < base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr == base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr == base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } <S2SV_ModEnd> } return TRUE
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) -> addr + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } return TRUE ; } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr + 4 ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ) return FALSE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) < 0 ) return FALSE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if (! aUnit -> linenumber_table ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) >= stash -> line_section_end ) return FALSE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr )!= 0 ) return FALSE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; } <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr < base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += aUnit -> line_count ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr < base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > size ) return FALSE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + 4 ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ) return FALSE ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ) { return FALSE ; }
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } <S2SV_ModEnd> return TRUE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr < base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr < base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) > size ) return FALSE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + size ) xptr += 4 ; xptr += 2 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; } } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) <S2SV_ModStart> ]. addr = base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) ; xptr += 4 ; } } return TRUE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += 4 ; } } return TRUE ;
<S2SV_ModStart> -> stmt_list_offset ; if ( xptr >= stash -> line_section_end ) return FALSE ; if ( <S2SV_ModStart> ++ ) { if ( aUnit -> linenumber_table [ eachLine ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count <S2SV_ModStart> ]. addr!= base + bfd_get_32 ( stash -> abfd, ( bfd_byte * ) xptr ) + aUnit -> line_count ; xptr += aUnit -> line_count ; } return TRUE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
