<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info == <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info == <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> for ( word =
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> arm_sec -> next_rela =
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; <S2SV_ModEnd> } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> arm_sec -> next_rela =
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; }
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> for ( word =
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas ) ) return FALSE ; }
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info == <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> if (!
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> ; } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info == <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info == <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; }
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas ) ) return FALSE ; }
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> vda, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> r_info,
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> vda, & arm_sec -> r_info,
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, sec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, <S2SV_ModEnd> relsec -> sh_size,
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> ; } <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec ->
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, sec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, <S2SV_ModEnd> relsec -> sh_size,
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> vda, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> r_info,
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } <S2SV_ModEnd> <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null>
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> vda, & arm_sec -> vda, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> r_info,
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela ) ) return FALSE ; if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrela ) ) return FALSE ; } <S2SV_ModEnd> for ( word =
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; }
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> nrelas, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> vda, & arm_sec -> vda, & arm_sec -> r_info, & arm_sec -> vda, & arm_sec -> r_info,
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rel_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> r_info, & arm_sec -> next_rela, & arm_sec -> r_info, & arm_sec -> next_rela
<S2SV_ModStart> -> sh_info!= SHT_RELA && <S2SV_ModEnd> relsec -> sh_info!= <S2SV_ModStart> -> sh_info!= SHT_RELA ) { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, relsec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; } else { if (! slurp_rela_relocs ( aux -> file, relsec -> sh_offset, sec -> sh_size, & arm_sec -> rela, & arm_sec -> nrelas ) ) return FALSE ; }
