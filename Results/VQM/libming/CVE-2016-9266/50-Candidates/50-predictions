<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if (! flags ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; if ( fgetc ( f )!= EOF ) break ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; if ( fgetc ( f ) == EOF ) break ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; if ( fgetc ( f ) == EOF ) break ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if (! flags ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding!= 0xFF ) padding += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> <<= 24 ; if ( fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> <<= 24 ; if ( fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; break ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; <S2SV_ModEnd> flags <<= 24 <S2SV_ModStart> << 24 ; if ( fgetc ( f )!= EOF ) break ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; if ( fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; if ( fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> <<= 24 ; if ( fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> <<= 24 ; if ( fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding == 0 ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding == 0 ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0 ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0 ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( flags == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; if ( fgetc ( f ) == EOF ) break ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0 ) padding = 0 ; bitrate += padding ; } else { bitrate = 0 ; } } } <S2SV_ModEnd> <S2SV_null> <S2SV_null
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) {
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( f == EOF ) break ; flags <<= 24 ; } <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> << 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_FLAG_HIGHBITDEPTH )? 2 : 1 ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0 ) padding = 0 ;
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; break ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break
<S2SV_ModStart> { if ( fgetc ( f ) ) == EOF ) break ; if ( fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { if ( fgetc ( f ) == '4 ) break ; flags &= 0xFF ; } if ( flags == EOF ) break ; flags <<= 24 ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate_idx = ( flags & MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ; padding = ( ( flags & ~ MP3_BITRATE_MASK ) >> MP3_BITRATE_SHIFT ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( padding > 0xFF ) padding = 0 ; bitrate += padding ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC
