<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_
<S2SV_ModStart> { if ( <S2SV_ModEnd> flags == 'I' <S2SV_ModStart> <<= 24 ; <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> f ) << 16 ; <S2SV_ModEnd> flags += fgetc <S2SV_ModStart> f ) << 8 ; <S2SV_ModEnd> if ( (
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate =
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) >> 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX )
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK )
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX )
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK )
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) >> 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate =
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_SAMPLERATE
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; } } <S2SV_ModEnd> if ( flags
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; } } }
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate =
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; } }
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) >> 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) >> 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = (
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; } } } <S2SV_ModEnd> if ( flags
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK )
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; } }
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF || ( flags == 0 && fgetc ( f ) == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_FRAME_SYNC
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long )
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; }
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; } } <S2SV_ModEnd> if ( flags
<S2SV_ModStart> if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; flags |= fgetc ( f ) << 8 ; flags |= fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE ) >> MP3_BITRATE_SHIFT ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate = ( unsigned long ) INT_MAX ; else bitrate = ( unsigned long ) INT_MAX ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( bitrate > ( unsigned long ) INT_MAX ) bitrate =
<S2SV_ModStart> { if ( ( flags = fgetc ( f ) ) == EOF ) break ; if ( flags == 'I' && fgetc ( f ) == 'D' && fgetc ( f ) == '3' ) { do { flags = fgetc ( f ) ; } if ( ( flags & MP3_FRAME_SYNC )!= MP3_FRAME_SYNC ) break ; } if ( ( flags & MP3_LAYER_BITRATE )!= MP3_BITRATE_SHIFT ) { bitrate = 0 ; break ; } flags += fgetc ( f ) << 16 ; flags += fgetc ( f ) << 8 ; flags += fgetc ( f ) ; if ( flags & MP3_LAYER_SYNC )!= MP3_LAYER_SYNC ) break ; ++ numFrames ; bitrate = ( flags & MP3_BITRATE_MASK ) >> bitrate ; if ( flags & MP3_LAYER_BITRATE_MASK ) { bitrate = ( flags & MP3_BITRATE_MASK ) << bitrate ; break ; default : error ( "unknown <S2SV_blank> MP3 <S2SV_blank> layer!" ) ; } } }
